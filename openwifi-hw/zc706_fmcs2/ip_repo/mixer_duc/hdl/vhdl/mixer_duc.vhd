-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mixer_duc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    d_i0_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    d_i0_V_TVALID : IN STD_LOGIC;
    d_i0_V_TREADY : OUT STD_LOGIC;
    d_i1_V_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    d_i1_V_TVALID : IN STD_LOGIC;
    d_i1_V_TREADY : OUT STD_LOGIC;
    cfg0_V : IN STD_LOGIC_VECTOR (31 downto 0);
    d_o_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    d_o_V_full_n : IN STD_LOGIC;
    d_o_V_write : OUT STD_LOGIC );
end;


architecture behav of mixer_duc is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mixer_duc,hls_ip_2017_4_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.360000,HLS_SYN_LAT=177,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=136,HLS_SYN_FF=10301,HLS_SYN_LUT=3906}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_A0 : STD_LOGIC_VECTOR (8 downto 0) := "010100000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_140 : STD_LOGIC_VECTOR (8 downto 0) := "101000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_A0 : STD_LOGIC_VECTOR (7 downto 0) := "10100000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal d_i0_V_0_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal d_i0_V_0_vld_in : STD_LOGIC;
    signal d_i0_V_0_vld_out : STD_LOGIC;
    signal d_i0_V_0_ack_in : STD_LOGIC;
    signal d_i0_V_0_ack_out : STD_LOGIC;
    signal d_i0_V_0_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal d_i0_V_0_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal d_i0_V_0_sel_rd : STD_LOGIC := '0';
    signal d_i0_V_0_sel_wr : STD_LOGIC := '0';
    signal d_i0_V_0_sel : STD_LOGIC;
    signal d_i0_V_0_load_A : STD_LOGIC;
    signal d_i0_V_0_load_B : STD_LOGIC;
    signal d_i0_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal d_i0_V_0_state_cmp_full : STD_LOGIC;
    signal d_i1_V_0_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal d_i1_V_0_vld_in : STD_LOGIC;
    signal d_i1_V_0_vld_out : STD_LOGIC;
    signal d_i1_V_0_ack_in : STD_LOGIC;
    signal d_i1_V_0_ack_out : STD_LOGIC;
    signal d_i1_V_0_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal d_i1_V_0_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal d_i1_V_0_sel_rd : STD_LOGIC := '0';
    signal d_i1_V_0_sel_wr : STD_LOGIC := '0';
    signal d_i1_V_0_sel : STD_LOGIC;
    signal d_i1_V_0_load_A : STD_LOGIC;
    signal d_i1_V_0_load_B : STD_LOGIC;
    signal d_i1_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal d_i1_V_0_state_cmp_full : STD_LOGIC;
    signal i_p2MHz_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p2MHz_ce0 : STD_LOGIC;
    signal i_p2MHz_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p2MHz_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p2MHz_ce0 : STD_LOGIC;
    signal q_p2MHz_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_p0n5n10n15n20MHz_ce0 : STD_LOGIC;
    signal i_p0n5n10n15n20MHz_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_p0n5n10n15n20MHz_ce1 : STD_LOGIC;
    signal i_p0n5n10n15n20MHz_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_p0n5n10n15n20MHz_ce2 : STD_LOGIC;
    signal i_p0n5n10n15n20MHz_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_p0n5n10n15n20MHz_ce3 : STD_LOGIC;
    signal i_p0n5n10n15n20MHz_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_p0n5n10n15n20MHz_ce4 : STD_LOGIC;
    signal i_p0n5n10n15n20MHz_q4 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_p0n5n10n15n20MHz_ce5 : STD_LOGIC;
    signal i_p0n5n10n15n20MHz_q5 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_p0n5n10n15n20MHz_ce0 : STD_LOGIC;
    signal q_p0n5n10n15n20MHz_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_p0n5n10n15n20MHz_ce1 : STD_LOGIC;
    signal q_p0n5n10n15n20MHz_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_p0n5n10n15n20MHz_ce2 : STD_LOGIC;
    signal q_p0n5n10n15n20MHz_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_p0n5n10n15n20MHz_ce3 : STD_LOGIC;
    signal q_p0n5n10n15n20MHz_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_p0n5n10n15n20MHz_ce4 : STD_LOGIC;
    signal q_p0n5n10n15n20MHz_q4 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_p0n5n10n15n20MHz_ce5 : STD_LOGIC;
    signal q_p0n5n10n15n20MHz_q5 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_i0_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i1_V_TDATA_blk_n : STD_LOGIC;
    signal d_o_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter15_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_345 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_1_fu_356_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_364_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_372_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_380_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_388_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_396_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_404_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_412_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_cast_fu_456_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_fu_488_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_fu_528_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_39_cast_fu_534_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_39_fu_542_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_41_cast_fu_550_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_fu_558_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_fu_566_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_cast_fu_576_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_9_cast_fu_586_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter13_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter14_tmp_s_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_596_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_4_cast4_fu_608_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_cast4_reg_1908 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter1_tmp_4_cast4_reg_1908 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter2_tmp_4_cast4_reg_1908 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter3_tmp_4_cast4_reg_1908 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter4_tmp_4_cast4_reg_1908 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_41_fu_616_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_41_reg_1916 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_42_fu_621_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_42_reg_1921 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_47_fu_636_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_reg_1956 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_tmp_47_reg_1956 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_tmp_47_reg_1956 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_reg_1961 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_p_Result_s_reg_1961 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_p_Result_s_reg_1961 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter4_p_Result_s_reg_1961 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_1_reg_1966 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_p_Result_1_reg_1966 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_p_Result_1_reg_1966 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_reg_1971 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_p_Result_2_reg_1971 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_p_Result_2_reg_1971 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter4_p_Result_2_reg_1971 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_48_fu_670_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_48_reg_1976 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_3_reg_1982 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_reg_1988 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_5_reg_1994 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_reg_2000 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_7_reg_2006 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_8_reg_2012 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_reg_2018 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_p2MHz_load_reg_2024 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_i_p2MHz_load_reg_2024 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p2MHz_load_reg_2029 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_44_fu_788_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_44_reg_2036 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_45_fu_809_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_45_reg_2041 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_46_fu_830_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_46_reg_2046 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_47_fu_851_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_47_reg_2051 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_48_fu_872_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_48_reg_2056 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_49_fu_893_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_49_reg_2061 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_50_fu_914_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_50_reg_2066 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_51_fu_935_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_51_reg_2071 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_24_fu_948_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_24_reg_2076 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_25_fu_954_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_25_reg_2081 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_l_reg_2086 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2086 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_l_reg_2091 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_l_1_reg_2097 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2097 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_l_1_reg_2102 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_50_fu_960_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_44_cast_fu_967_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_45_cast_fu_970_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_46_cast_fu_973_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_47_cast_fu_976_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_48_cast_fu_979_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_49_cast_fu_982_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_50_cast_fu_985_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_51_cast_fu_988_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_M_real_V_fu_991_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b0_M_imag_V_fu_994_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_M_imag_V_fu_997_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_26_fu_1005_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_26_reg_2192 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_27_fu_1016_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_27_reg_2197 : STD_LOGIC_VECTOR (7 downto 0);
    signal bw20_a0_M_real_V_ca_fu_1118_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal bw20_a1_M_real_V_ca_fu_1121_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal val_assign_1_cast_fu_1124_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal val_assign_1_cast_reg_2214 : STD_LOGIC_VECTOR (23 downto 0);
    signal val_assign_2_cast_fu_1127_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal val_assign_2_cast_reg_2220 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_fu_1130_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_reg_2226 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_12_fu_1133_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_12_reg_2232 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_43_fu_1136_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_43_reg_2238 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_44_fu_1140_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_44_reg_2243 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_45_fu_1144_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_45_reg_2248 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_46_fu_1148_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_46_reg_2253 : STD_LOGIC_VECTOR (8 downto 0);
    signal bw20_a0_M_imag_V_ca_fu_1152_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal bw20_a1_M_imag_V_ca_fu_1155_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1735_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_i_i_reg_2310 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1741_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_2_i_i_cast_reg_2315 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1747_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_i_i5_reg_2320 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1753_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_2_i_i5_cast_reg_2325 : STD_LOGIC_VECTOR (23 downto 0);
    signal i_p0n5n10n15n20MHz_l_2_reg_2330 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_2_reg_2330 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_l_2_reg_2335 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_l_3_reg_2341 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_3_reg_2341 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_l_3_reg_2346 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_l_4_reg_2352 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_4_reg_2352 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_l_4_reg_2357 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_l_5_reg_2363 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_5_reg_2363 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_l_5_reg_2368 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1759_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_r_V_reg_2374 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1765_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal complex_M_imag_V_wr_reg_2380 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1022_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i1_reg_2386 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1028_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i1_reg_2391 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1034_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i1_reg_2396 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1040_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i1_reg_2401 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1046_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i3_reg_2406 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1052_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i3_reg_2411 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1058_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i3_reg_2416 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1064_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i3_reg_2421 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1771_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_r_V_5_reg_2426 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1777_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal complex_M_imag_V_wr_2_reg_2432 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1070_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i6_reg_2438 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1076_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i6_reg_2443 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1082_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i6_reg_2448 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1088_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i6_reg_2453 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1094_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i8_reg_2458 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1100_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i8_reg_2463 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1106_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i8_reg_2468 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1112_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i8_reg_2473 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_28_fu_1183_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_28_reg_2478 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_29_fu_1194_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_29_reg_2483 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_30_fu_1205_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_30_reg_2488 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_31_fu_1216_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_31_reg_2493 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_r_V_10_fu_1228_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_10_reg_2498 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_1_fu_1232_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_1_reg_2504 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_12_fu_1236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_12_reg_2510 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_3_fu_1240_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_3_reg_2516 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_14_fu_1250_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_14_reg_2522 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_5_fu_1254_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_5_reg_2528 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_16_fu_1258_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_16_reg_2534 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_7_fu_1262_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_7_reg_2540 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_34_fu_1279_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_34_reg_2546 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_reg_2551 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_51_reg_2551 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_2556 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter9_tmp_17_reg_2556 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_37_fu_1317_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_37_reg_2561 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_reg_2566 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_52_reg_2566 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_2571 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter9_tmp_21_reg_2571 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_40_fu_1355_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_40_reg_2576 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_reg_2581 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_53_reg_2581 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2586 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter9_tmp_25_reg_2586 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_43_fu_1393_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_43_reg_2591 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_reg_2596 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_54_reg_2596 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_2601 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter9_tmp_29_reg_2601 : STD_LOGIC_VECTOR (15 downto 0);
    signal c01_M_real_V_fu_1418_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c01_M_imag_V_fu_1421_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c02_M_real_V_fu_1424_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c02_M_imag_V_fu_1427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c11_M_real_V_fu_1430_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c11_M_imag_V_fu_1433_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c12_M_real_V_fu_1436_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c12_M_imag_V_fu_1439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_2654 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_reg_2659 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_reg_2664 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_reg_2669 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_fu_1587_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_reg_2674 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter11_tmp_18_reg_2674 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter12_tmp_18_reg_2674 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter13_tmp_18_reg_2674 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter14_tmp_18_reg_2674 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_fu_1598_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_reg_2679 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter11_tmp_22_reg_2679 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter12_tmp_22_reg_2679 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter13_tmp_22_reg_2679 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter14_tmp_22_reg_2679 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_fu_1609_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_reg_2684 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter11_tmp_26_reg_2684 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter12_tmp_26_reg_2684 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter13_tmp_26_reg_2684 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter14_tmp_26_reg_2684 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_fu_1620_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_reg_2689 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter11_tmp_30_reg_2689 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter12_tmp_30_reg_2689 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter13_tmp_30_reg_2689 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter14_tmp_30_reg_2689 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1442_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i2_reg_2694 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1447_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i2_reg_2699 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1452_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i2_reg_2704 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1457_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i2_reg_2709 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1462_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i4_reg_2714 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1467_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i4_reg_2719 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1472_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i4_reg_2724 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1477_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i4_reg_2729 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1482_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i7_reg_2734 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1487_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i7_reg_2739 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1492_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i7_reg_2744 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1497_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i7_reg_2749 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1502_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i9_reg_2754 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i9_reg_2759 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1512_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i9_reg_2764 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1517_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i9_reg_2769 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_fu_1658_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_reg_2774 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_56_fu_1662_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_56_reg_2779 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_57_fu_1666_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_57_reg_2784 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_58_fu_1670_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_58_reg_2789 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_59_fu_1674_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_59_reg_2794 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_60_fu_1678_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_60_reg_2799 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_fu_1682_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_reg_2804 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_62_fu_1686_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_62_reg_2809 : STD_LOGIC_VECTOR (15 downto 0);
    signal loc_V_trunc_fu_1694_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal loc_V_trunc_reg_2814 : STD_LOGIC_VECTOR (15 downto 0);
    signal loc_V_1_trunc_fu_1703_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal loc_V_1_trunc_reg_2819 : STD_LOGIC_VECTOR (15 downto 0);
    signal loc_V_2_trunc_fu_1712_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal loc_V_2_trunc_reg_2824 : STD_LOGIC_VECTOR (15 downto 0);
    signal loc_V_3_trunc_fu_1721_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal loc_V_3_trunc_reg_2829 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal tmp_4_fu_602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_cast_fu_626_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_cast_fu_631_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_cast_fu_1158_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_cast_fu_1163_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_cast_fu_1168_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_cast_fu_1173_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal bw02_num_shift_to_le_fu_446_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_38_fu_460_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_464_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_fu_476_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl2_cast_fu_472_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_cast_fu_484_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_494_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_504_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_13_fu_516_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_512_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl1_cast_fu_524_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_36_fu_420_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_428_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal bw20_num_shift_to_le_fu_436_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sh_V_3_fu_570_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sh_V_1_fu_580_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_cast_fu_612_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_1_fu_775_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bw02_a01_M_real_V_c_fu_744_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_fu_768_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_cast_fu_779_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_fu_783_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_3_fu_796_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bw02_a01_M_imag_V_c_fu_747_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_3_cast_fu_800_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_2_fu_804_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_5_fu_817_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bw02_a02_M_real_V_c_fu_750_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_5_cast_fu_821_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_4_fu_825_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_7_fu_838_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bw02_a02_M_imag_V_c_fu_753_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_7_cast_fu_842_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_6_fu_846_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_9_fu_859_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bw02_a11_M_real_V_c_fu_756_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_9_cast_fu_863_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_8_fu_867_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_15_fu_880_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bw02_a11_M_imag_V_c_fu_759_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_15_cast_fu_884_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_16_fu_888_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_18_fu_901_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bw02_a12_M_real_V_c_fu_762_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_18_cast_fu_905_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_19_fu_909_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_21_fu_922_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_cast5_fu_765_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_21_cast_fu_926_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_22_fu_930_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mt1_fu_943_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mt2_fu_1000_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mt3_fu_1011_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1022_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1022_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1028_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1028_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1034_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1034_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1040_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1040_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1046_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1046_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1052_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1052_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1058_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1058_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1064_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1064_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1070_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1070_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1076_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1076_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1082_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1082_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1088_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1088_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1094_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1094_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1100_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1100_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1106_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1106_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1112_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1112_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mt4_fu_1178_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mt5_fu_1189_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mt6_fu_1200_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mt_fu_1211_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_32_fu_1266_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_r_V_cast_fu_1222_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_32_cast_fu_1270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_33_fu_1274_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_35_fu_1304_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal complex_M_imag_V_wr_1_fu_1225_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_35_cast_fu_1308_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_36_fu_1312_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_38_fu_1342_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_r_V_5_cast_fu_1244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_38_cast_fu_1346_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_39_fu_1350_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_41_fu_1380_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal complex_M_imag_V_wr_3_fu_1247_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_41_cast_fu_1384_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_42_fu_1388_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1442_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1447_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1452_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1457_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1462_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1467_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1472_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1477_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1482_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1487_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1492_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1497_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1502_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1507_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1512_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1517_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_neg1_fu_1522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg2_fu_1537_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg3_fu_1552_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_1567_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1582_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_fu_1593_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_fu_1604_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_fu_1615_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_V_11_fu_1626_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p01_M_imag_V_fu_1630_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_13_fu_1634_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p02_M_imag_V_fu_1638_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_15_fu_1642_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p11_M_imag_V_fu_1646_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_17_fu_1650_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p12_M_imag_V_fu_1654_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_1690_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_fu_1699_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_1708_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_1717_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1735_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1741_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1747_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1753_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1759_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1759_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1765_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1765_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1771_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1771_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1777_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1777_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1022_ce : STD_LOGIC;
    signal grp_fu_1028_ce : STD_LOGIC;
    signal grp_fu_1034_ce : STD_LOGIC;
    signal grp_fu_1040_ce : STD_LOGIC;
    signal grp_fu_1046_ce : STD_LOGIC;
    signal grp_fu_1052_ce : STD_LOGIC;
    signal grp_fu_1058_ce : STD_LOGIC;
    signal grp_fu_1064_ce : STD_LOGIC;
    signal grp_fu_1070_ce : STD_LOGIC;
    signal grp_fu_1076_ce : STD_LOGIC;
    signal grp_fu_1082_ce : STD_LOGIC;
    signal grp_fu_1088_ce : STD_LOGIC;
    signal grp_fu_1094_ce : STD_LOGIC;
    signal grp_fu_1100_ce : STD_LOGIC;
    signal grp_fu_1106_ce : STD_LOGIC;
    signal grp_fu_1112_ce : STD_LOGIC;
    signal grp_fu_1442_ce : STD_LOGIC;
    signal grp_fu_1447_ce : STD_LOGIC;
    signal grp_fu_1452_ce : STD_LOGIC;
    signal grp_fu_1457_ce : STD_LOGIC;
    signal grp_fu_1462_ce : STD_LOGIC;
    signal grp_fu_1467_ce : STD_LOGIC;
    signal grp_fu_1472_ce : STD_LOGIC;
    signal grp_fu_1477_ce : STD_LOGIC;
    signal grp_fu_1482_ce : STD_LOGIC;
    signal grp_fu_1487_ce : STD_LOGIC;
    signal grp_fu_1492_ce : STD_LOGIC;
    signal grp_fu_1497_ce : STD_LOGIC;
    signal grp_fu_1502_ce : STD_LOGIC;
    signal grp_fu_1507_ce : STD_LOGIC;
    signal grp_fu_1512_ce : STD_LOGIC;
    signal grp_fu_1517_ce : STD_LOGIC;
    signal grp_fu_1735_ce : STD_LOGIC;
    signal grp_fu_1741_ce : STD_LOGIC;
    signal grp_fu_1747_ce : STD_LOGIC;
    signal grp_fu_1753_ce : STD_LOGIC;
    signal grp_fu_1759_ce : STD_LOGIC;
    signal grp_fu_1765_ce : STD_LOGIC;
    signal grp_fu_1771_ce : STD_LOGIC;
    signal grp_fu_1777_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component mixer_duc_mul_31sdEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mixer_duc_mul_32seOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mixer_duc_mul_mulfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component mixer_duc_mac_mulg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component mixer_duc_mac_mulhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component mixer_duc_i_p2MHz IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component mixer_duc_q_p2MHz IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component mixer_duc_i_p0n5nbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component mixer_duc_q_p0n5ncud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    i_p2MHz_U : component mixer_duc_i_p2MHz
    generic map (
        DataWidth => 8,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => i_p2MHz_address0,
        ce0 => i_p2MHz_ce0,
        q0 => i_p2MHz_q0);

    q_p2MHz_U : component mixer_duc_q_p2MHz
    generic map (
        DataWidth => 8,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => q_p2MHz_address0,
        ce0 => q_p2MHz_ce0,
        q0 => q_p2MHz_q0);

    i_p0n5n10n15n20MHz_U : component mixer_duc_i_p0n5nbkb
    generic map (
        DataWidth => 8,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => i_p0n5n10n15n20MHz_address0,
        ce0 => i_p0n5n10n15n20MHz_ce0,
        q0 => i_p0n5n10n15n20MHz_q0,
        address1 => i_p0n5n10n15n20MHz_address1,
        ce1 => i_p0n5n10n15n20MHz_ce1,
        q1 => i_p0n5n10n15n20MHz_q1,
        address2 => i_p0n5n10n15n20MHz_address2,
        ce2 => i_p0n5n10n15n20MHz_ce2,
        q2 => i_p0n5n10n15n20MHz_q2,
        address3 => i_p0n5n10n15n20MHz_address3,
        ce3 => i_p0n5n10n15n20MHz_ce3,
        q3 => i_p0n5n10n15n20MHz_q3,
        address4 => i_p0n5n10n15n20MHz_address4,
        ce4 => i_p0n5n10n15n20MHz_ce4,
        q4 => i_p0n5n10n15n20MHz_q4,
        address5 => i_p0n5n10n15n20MHz_address5,
        ce5 => i_p0n5n10n15n20MHz_ce5,
        q5 => i_p0n5n10n15n20MHz_q5);

    q_p0n5n10n15n20MHz_U : component mixer_duc_q_p0n5ncud
    generic map (
        DataWidth => 8,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => q_p0n5n10n15n20MHz_address0,
        ce0 => q_p0n5n10n15n20MHz_ce0,
        q0 => q_p0n5n10n15n20MHz_q0,
        address1 => q_p0n5n10n15n20MHz_address1,
        ce1 => q_p0n5n10n15n20MHz_ce1,
        q1 => q_p0n5n10n15n20MHz_q1,
        address2 => q_p0n5n10n15n20MHz_address2,
        ce2 => q_p0n5n10n15n20MHz_ce2,
        q2 => q_p0n5n10n15n20MHz_q2,
        address3 => q_p0n5n10n15n20MHz_address3,
        ce3 => q_p0n5n10n15n20MHz_ce3,
        q3 => q_p0n5n10n15n20MHz_q3,
        address4 => q_p0n5n10n15n20MHz_address4,
        ce4 => q_p0n5n10n15n20MHz_ce4,
        q4 => q_p0n5n10n15n20MHz_q4,
        address5 => q_p0n5n10n15n20MHz_address5,
        ce5 => q_p0n5n10n15n20MHz_ce5,
        q5 => q_p0n5n10n15n20MHz_q5);

    mixer_duc_mul_31sdEe_U1 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1022_p0,
        din1 => grp_fu_1022_p1,
        ce => grp_fu_1022_ce,
        dout => grp_fu_1022_p2);

    mixer_duc_mul_31sdEe_U2 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1028_p0,
        din1 => grp_fu_1028_p1,
        ce => grp_fu_1028_ce,
        dout => grp_fu_1028_p2);

    mixer_duc_mul_31sdEe_U3 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1034_p0,
        din1 => grp_fu_1034_p1,
        ce => grp_fu_1034_ce,
        dout => grp_fu_1034_p2);

    mixer_duc_mul_31sdEe_U4 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1040_p0,
        din1 => grp_fu_1040_p1,
        ce => grp_fu_1040_ce,
        dout => grp_fu_1040_p2);

    mixer_duc_mul_31sdEe_U5 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1046_p0,
        din1 => grp_fu_1046_p1,
        ce => grp_fu_1046_ce,
        dout => grp_fu_1046_p2);

    mixer_duc_mul_31sdEe_U6 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1052_p0,
        din1 => grp_fu_1052_p1,
        ce => grp_fu_1052_ce,
        dout => grp_fu_1052_p2);

    mixer_duc_mul_31sdEe_U7 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1058_p0,
        din1 => grp_fu_1058_p1,
        ce => grp_fu_1058_ce,
        dout => grp_fu_1058_p2);

    mixer_duc_mul_31sdEe_U8 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1064_p0,
        din1 => grp_fu_1064_p1,
        ce => grp_fu_1064_ce,
        dout => grp_fu_1064_p2);

    mixer_duc_mul_31sdEe_U9 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1070_p0,
        din1 => grp_fu_1070_p1,
        ce => grp_fu_1070_ce,
        dout => grp_fu_1070_p2);

    mixer_duc_mul_31sdEe_U10 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1076_p0,
        din1 => grp_fu_1076_p1,
        ce => grp_fu_1076_ce,
        dout => grp_fu_1076_p2);

    mixer_duc_mul_31sdEe_U11 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1082_p0,
        din1 => grp_fu_1082_p1,
        ce => grp_fu_1082_ce,
        dout => grp_fu_1082_p2);

    mixer_duc_mul_31sdEe_U12 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1088_p0,
        din1 => grp_fu_1088_p1,
        ce => grp_fu_1088_ce,
        dout => grp_fu_1088_p2);

    mixer_duc_mul_31sdEe_U13 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1094_p0,
        din1 => grp_fu_1094_p1,
        ce => grp_fu_1094_ce,
        dout => grp_fu_1094_p2);

    mixer_duc_mul_31sdEe_U14 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1100_p0,
        din1 => grp_fu_1100_p1,
        ce => grp_fu_1100_ce,
        dout => grp_fu_1100_p2);

    mixer_duc_mul_31sdEe_U15 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1106_p0,
        din1 => grp_fu_1106_p1,
        ce => grp_fu_1106_ce,
        dout => grp_fu_1106_p2);

    mixer_duc_mul_31sdEe_U16 : component mixer_duc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1112_p0,
        din1 => grp_fu_1112_p1,
        ce => grp_fu_1112_ce,
        dout => grp_fu_1112_p2);

    mixer_duc_mul_32seOg_U17 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_10_reg_2498,
        din1 => grp_fu_1442_p1,
        ce => grp_fu_1442_ce,
        dout => grp_fu_1442_p2);

    mixer_duc_mul_32seOg_U18 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_1_reg_2504,
        din1 => grp_fu_1447_p1,
        ce => grp_fu_1447_ce,
        dout => grp_fu_1447_p2);

    mixer_duc_mul_32seOg_U19 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_10_reg_2498,
        din1 => grp_fu_1452_p1,
        ce => grp_fu_1452_ce,
        dout => grp_fu_1452_p2);

    mixer_duc_mul_32seOg_U20 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_1_reg_2504,
        din1 => grp_fu_1457_p1,
        ce => grp_fu_1457_ce,
        dout => grp_fu_1457_p2);

    mixer_duc_mul_32seOg_U21 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_12_reg_2510,
        din1 => grp_fu_1462_p1,
        ce => grp_fu_1462_ce,
        dout => grp_fu_1462_p2);

    mixer_duc_mul_32seOg_U22 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_3_reg_2516,
        din1 => grp_fu_1467_p1,
        ce => grp_fu_1467_ce,
        dout => grp_fu_1467_p2);

    mixer_duc_mul_32seOg_U23 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_12_reg_2510,
        din1 => grp_fu_1472_p1,
        ce => grp_fu_1472_ce,
        dout => grp_fu_1472_p2);

    mixer_duc_mul_32seOg_U24 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_3_reg_2516,
        din1 => grp_fu_1477_p1,
        ce => grp_fu_1477_ce,
        dout => grp_fu_1477_p2);

    mixer_duc_mul_32seOg_U25 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_14_reg_2522,
        din1 => grp_fu_1482_p1,
        ce => grp_fu_1482_ce,
        dout => grp_fu_1482_p2);

    mixer_duc_mul_32seOg_U26 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_5_reg_2528,
        din1 => grp_fu_1487_p1,
        ce => grp_fu_1487_ce,
        dout => grp_fu_1487_p2);

    mixer_duc_mul_32seOg_U27 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_14_reg_2522,
        din1 => grp_fu_1492_p1,
        ce => grp_fu_1492_ce,
        dout => grp_fu_1492_p2);

    mixer_duc_mul_32seOg_U28 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_5_reg_2528,
        din1 => grp_fu_1497_p1,
        ce => grp_fu_1497_ce,
        dout => grp_fu_1497_p2);

    mixer_duc_mul_32seOg_U29 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_16_reg_2534,
        din1 => grp_fu_1502_p1,
        ce => grp_fu_1502_ce,
        dout => grp_fu_1502_p2);

    mixer_duc_mul_32seOg_U30 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_7_reg_2540,
        din1 => grp_fu_1507_p1,
        ce => grp_fu_1507_ce,
        dout => grp_fu_1507_p2);

    mixer_duc_mul_32seOg_U31 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_16_reg_2534,
        din1 => grp_fu_1512_p1,
        ce => grp_fu_1512_ce,
        dout => grp_fu_1512_p2);

    mixer_duc_mul_32seOg_U32 : component mixer_duc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_7_reg_2540,
        din1 => grp_fu_1517_p1,
        ce => grp_fu_1517_ce,
        dout => grp_fu_1517_p2);

    mixer_duc_mul_mulfYi_U33 : component mixer_duc_mul_mulfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1735_p0,
        din1 => ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2086,
        ce => grp_fu_1735_ce,
        dout => grp_fu_1735_p2);

    mixer_duc_mul_mulfYi_U34 : component mixer_duc_mul_mulfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1741_p0,
        din1 => r_V_26_reg_2192,
        ce => grp_fu_1741_ce,
        dout => grp_fu_1741_p2);

    mixer_duc_mul_mulfYi_U35 : component mixer_duc_mul_mulfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1747_p0,
        din1 => ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2097,
        ce => grp_fu_1747_ce,
        dout => grp_fu_1747_p2);

    mixer_duc_mul_mulfYi_U36 : component mixer_duc_mul_mulfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1753_p0,
        din1 => r_V_27_reg_2197,
        ce => grp_fu_1753_ce,
        dout => grp_fu_1753_p2);

    mixer_duc_mac_mulg8j_U37 : component mixer_duc_mac_mulg8j
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1759_p0,
        din1 => grp_fu_1759_p1,
        din2 => p_i_i_reg_2310,
        ce => grp_fu_1759_ce,
        dout => grp_fu_1759_p3);

    mixer_duc_mac_mulhbi_U38 : component mixer_duc_mac_mulhbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1765_p0,
        din1 => grp_fu_1765_p1,
        din2 => p_2_i_i_cast_reg_2315,
        ce => grp_fu_1765_ce,
        dout => grp_fu_1765_p3);

    mixer_duc_mac_mulg8j_U39 : component mixer_duc_mac_mulg8j
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1771_p0,
        din1 => grp_fu_1771_p1,
        din2 => p_i_i5_reg_2320,
        ce => grp_fu_1771_ce,
        dout => grp_fu_1771_p3);

    mixer_duc_mac_mulhbi_U40 : component mixer_duc_mac_mulhbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1777_p0,
        din1 => grp_fu_1777_p1,
        din2 => p_2_i_i5_cast_reg_2325,
        ce => grp_fu_1777_ce,
        dout => grp_fu_1777_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    d_i0_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                d_i0_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((d_i0_V_0_ack_out = ap_const_logic_1) and (d_i0_V_0_vld_out = ap_const_logic_1))) then 
                                        d_i0_V_0_sel_rd <= not(d_i0_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    d_i0_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                d_i0_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((d_i0_V_0_ack_in = ap_const_logic_1) and (d_i0_V_0_vld_in = ap_const_logic_1))) then 
                                        d_i0_V_0_sel_wr <= not(d_i0_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    d_i0_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                d_i0_V_0_state <= ap_const_lv2_0;
            else
                if ((((d_i0_V_0_vld_in = ap_const_logic_0) and (d_i0_V_0_state = ap_const_lv2_2)) or ((d_i0_V_0_vld_in = ap_const_logic_0) and (d_i0_V_0_state = ap_const_lv2_3) and (d_i0_V_0_ack_out = ap_const_logic_1)))) then 
                    d_i0_V_0_state <= ap_const_lv2_2;
                elsif ((((d_i0_V_0_ack_out = ap_const_logic_0) and (d_i0_V_0_state = ap_const_lv2_1)) or ((d_i0_V_0_ack_out = ap_const_logic_0) and (d_i0_V_0_state = ap_const_lv2_3) and (d_i0_V_0_vld_in = ap_const_logic_1)))) then 
                    d_i0_V_0_state <= ap_const_lv2_1;
                elsif (((not(((d_i0_V_0_vld_in = ap_const_logic_0) and (d_i0_V_0_ack_out = ap_const_logic_1))) and not(((d_i0_V_0_ack_out = ap_const_logic_0) and (d_i0_V_0_vld_in = ap_const_logic_1))) and (d_i0_V_0_state = ap_const_lv2_3)) or ((d_i0_V_0_state = ap_const_lv2_1) and (d_i0_V_0_ack_out = ap_const_logic_1)) or ((d_i0_V_0_state = ap_const_lv2_2) and (d_i0_V_0_vld_in = ap_const_logic_1)))) then 
                    d_i0_V_0_state <= ap_const_lv2_3;
                else 
                    d_i0_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    d_i1_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                d_i1_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((d_i1_V_0_ack_out = ap_const_logic_1) and (d_i1_V_0_vld_out = ap_const_logic_1))) then 
                                        d_i1_V_0_sel_rd <= not(d_i1_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    d_i1_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                d_i1_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((d_i1_V_0_ack_in = ap_const_logic_1) and (d_i1_V_0_vld_in = ap_const_logic_1))) then 
                                        d_i1_V_0_sel_wr <= not(d_i1_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    d_i1_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                d_i1_V_0_state <= ap_const_lv2_0;
            else
                if ((((d_i1_V_0_state = ap_const_lv2_2) and (d_i1_V_0_vld_in = ap_const_logic_0)) or ((d_i1_V_0_state = ap_const_lv2_3) and (d_i1_V_0_vld_in = ap_const_logic_0) and (d_i1_V_0_ack_out = ap_const_logic_1)))) then 
                    d_i1_V_0_state <= ap_const_lv2_2;
                elsif ((((d_i1_V_0_state = ap_const_lv2_3) and (d_i1_V_0_ack_out = ap_const_logic_0) and (d_i1_V_0_vld_in = ap_const_logic_1)) or ((d_i1_V_0_state = ap_const_lv2_1) and (d_i1_V_0_ack_out = ap_const_logic_0)))) then 
                    d_i1_V_0_state <= ap_const_lv2_1;
                elsif ((((d_i1_V_0_state = ap_const_lv2_2) and (d_i1_V_0_vld_in = ap_const_logic_1)) or (not(((d_i1_V_0_vld_in = ap_const_logic_0) and (d_i1_V_0_ack_out = ap_const_logic_1))) and not(((d_i1_V_0_ack_out = ap_const_logic_0) and (d_i1_V_0_vld_in = ap_const_logic_1))) and (d_i1_V_0_state = ap_const_lv2_3)) or ((d_i1_V_0_state = ap_const_lv2_1) and (d_i1_V_0_ack_out = ap_const_logic_1)))) then 
                    d_i1_V_0_state <= ap_const_lv2_3;
                else 
                    d_i1_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    i_reg_345_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_590_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_345 <= i_1_fu_596_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                i_reg_345 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter10_tmp_s_reg_1899 <= ap_reg_pp0_iter9_tmp_s_reg_1899;
                ap_reg_pp0_iter11_tmp_18_reg_2674 <= tmp_18_reg_2674;
                ap_reg_pp0_iter11_tmp_22_reg_2679 <= tmp_22_reg_2679;
                ap_reg_pp0_iter11_tmp_26_reg_2684 <= tmp_26_reg_2684;
                ap_reg_pp0_iter11_tmp_30_reg_2689 <= tmp_30_reg_2689;
                ap_reg_pp0_iter11_tmp_s_reg_1899 <= ap_reg_pp0_iter10_tmp_s_reg_1899;
                ap_reg_pp0_iter12_tmp_18_reg_2674 <= ap_reg_pp0_iter11_tmp_18_reg_2674;
                ap_reg_pp0_iter12_tmp_22_reg_2679 <= ap_reg_pp0_iter11_tmp_22_reg_2679;
                ap_reg_pp0_iter12_tmp_26_reg_2684 <= ap_reg_pp0_iter11_tmp_26_reg_2684;
                ap_reg_pp0_iter12_tmp_30_reg_2689 <= ap_reg_pp0_iter11_tmp_30_reg_2689;
                ap_reg_pp0_iter12_tmp_s_reg_1899 <= ap_reg_pp0_iter11_tmp_s_reg_1899;
                ap_reg_pp0_iter13_tmp_18_reg_2674 <= ap_reg_pp0_iter12_tmp_18_reg_2674;
                ap_reg_pp0_iter13_tmp_22_reg_2679 <= ap_reg_pp0_iter12_tmp_22_reg_2679;
                ap_reg_pp0_iter13_tmp_26_reg_2684 <= ap_reg_pp0_iter12_tmp_26_reg_2684;
                ap_reg_pp0_iter13_tmp_30_reg_2689 <= ap_reg_pp0_iter12_tmp_30_reg_2689;
                ap_reg_pp0_iter13_tmp_s_reg_1899 <= ap_reg_pp0_iter12_tmp_s_reg_1899;
                ap_reg_pp0_iter14_tmp_18_reg_2674 <= ap_reg_pp0_iter13_tmp_18_reg_2674;
                ap_reg_pp0_iter14_tmp_22_reg_2679 <= ap_reg_pp0_iter13_tmp_22_reg_2679;
                ap_reg_pp0_iter14_tmp_26_reg_2684 <= ap_reg_pp0_iter13_tmp_26_reg_2684;
                ap_reg_pp0_iter14_tmp_30_reg_2689 <= ap_reg_pp0_iter13_tmp_30_reg_2689;
                ap_reg_pp0_iter14_tmp_s_reg_1899 <= ap_reg_pp0_iter13_tmp_s_reg_1899;
                ap_reg_pp0_iter15_tmp_s_reg_1899 <= ap_reg_pp0_iter14_tmp_s_reg_1899;
                ap_reg_pp0_iter2_i_p2MHz_load_reg_2024 <= i_p2MHz_load_reg_2024;
                ap_reg_pp0_iter2_p_Result_1_reg_1966 <= p_Result_1_reg_1966;
                ap_reg_pp0_iter2_p_Result_2_reg_1971 <= p_Result_2_reg_1971;
                ap_reg_pp0_iter2_p_Result_s_reg_1961 <= p_Result_s_reg_1961;
                ap_reg_pp0_iter2_tmp_47_reg_1956 <= tmp_47_reg_1956;
                    ap_reg_pp0_iter2_tmp_4_cast4_reg_1908(7 downto 0) <= ap_reg_pp0_iter1_tmp_4_cast4_reg_1908(7 downto 0);
                ap_reg_pp0_iter2_tmp_s_reg_1899 <= ap_reg_pp0_iter1_tmp_s_reg_1899;
                ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2097 <= i_p0n5n10n15n20MHz_l_1_reg_2097;
                ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2086 <= i_p0n5n10n15n20MHz_l_reg_2086;
                ap_reg_pp0_iter3_p_Result_1_reg_1966 <= ap_reg_pp0_iter2_p_Result_1_reg_1966;
                ap_reg_pp0_iter3_p_Result_2_reg_1971 <= ap_reg_pp0_iter2_p_Result_2_reg_1971;
                ap_reg_pp0_iter3_p_Result_s_reg_1961 <= ap_reg_pp0_iter2_p_Result_s_reg_1961;
                ap_reg_pp0_iter3_tmp_47_reg_1956 <= ap_reg_pp0_iter2_tmp_47_reg_1956;
                    ap_reg_pp0_iter3_tmp_4_cast4_reg_1908(7 downto 0) <= ap_reg_pp0_iter2_tmp_4_cast4_reg_1908(7 downto 0);
                ap_reg_pp0_iter3_tmp_s_reg_1899 <= ap_reg_pp0_iter2_tmp_s_reg_1899;
                ap_reg_pp0_iter4_p_Result_2_reg_1971 <= ap_reg_pp0_iter3_p_Result_2_reg_1971;
                ap_reg_pp0_iter4_p_Result_s_reg_1961 <= ap_reg_pp0_iter3_p_Result_s_reg_1961;
                    ap_reg_pp0_iter4_tmp_4_cast4_reg_1908(7 downto 0) <= ap_reg_pp0_iter3_tmp_4_cast4_reg_1908(7 downto 0);
                ap_reg_pp0_iter4_tmp_s_reg_1899 <= ap_reg_pp0_iter3_tmp_s_reg_1899;
                ap_reg_pp0_iter5_tmp_s_reg_1899 <= ap_reg_pp0_iter4_tmp_s_reg_1899;
                ap_reg_pp0_iter6_tmp_s_reg_1899 <= ap_reg_pp0_iter5_tmp_s_reg_1899;
                ap_reg_pp0_iter7_tmp_s_reg_1899 <= ap_reg_pp0_iter6_tmp_s_reg_1899;
                ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_2_reg_2330 <= i_p0n5n10n15n20MHz_l_2_reg_2330;
                ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_3_reg_2341 <= i_p0n5n10n15n20MHz_l_3_reg_2341;
                ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_4_reg_2352 <= i_p0n5n10n15n20MHz_l_4_reg_2352;
                ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_5_reg_2363 <= i_p0n5n10n15n20MHz_l_5_reg_2363;
                ap_reg_pp0_iter8_tmp_s_reg_1899 <= ap_reg_pp0_iter7_tmp_s_reg_1899;
                ap_reg_pp0_iter9_tmp_17_reg_2556 <= tmp_17_reg_2556;
                ap_reg_pp0_iter9_tmp_21_reg_2571 <= tmp_21_reg_2571;
                ap_reg_pp0_iter9_tmp_25_reg_2586 <= tmp_25_reg_2586;
                ap_reg_pp0_iter9_tmp_29_reg_2601 <= tmp_29_reg_2601;
                ap_reg_pp0_iter9_tmp_51_reg_2551 <= tmp_51_reg_2551;
                ap_reg_pp0_iter9_tmp_52_reg_2566 <= tmp_52_reg_2566;
                ap_reg_pp0_iter9_tmp_53_reg_2581 <= tmp_53_reg_2581;
                ap_reg_pp0_iter9_tmp_54_reg_2596 <= tmp_54_reg_2596;
                ap_reg_pp0_iter9_tmp_s_reg_1899 <= ap_reg_pp0_iter8_tmp_s_reg_1899;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    ap_reg_pp0_iter1_tmp_4_cast4_reg_1908(7 downto 0) <= tmp_4_cast4_reg_1908(7 downto 0);
                ap_reg_pp0_iter1_tmp_s_reg_1899 <= tmp_s_reg_1899;
                tmp_s_reg_1899 <= tmp_s_fu_590_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                complex_M_imag_V_wr_2_reg_2432 <= grp_fu_1777_p3;
                complex_M_imag_V_wr_reg_2380 <= grp_fu_1765_p3;
                i_p0n5n10n15n20MHz_l_2_reg_2330 <= i_p0n5n10n15n20MHz_q2;
                i_p0n5n10n15n20MHz_l_3_reg_2341 <= i_p0n5n10n15n20MHz_q3;
                i_p0n5n10n15n20MHz_l_4_reg_2352 <= i_p0n5n10n15n20MHz_q4;
                i_p0n5n10n15n20MHz_l_5_reg_2363 <= i_p0n5n10n15n20MHz_q5;
                p_r_V_5_reg_2426 <= grp_fu_1771_p3;
                p_r_V_reg_2374 <= grp_fu_1759_p3;
                q_p0n5n10n15n20MHz_l_2_reg_2335 <= q_p0n5n10n15n20MHz_q2;
                q_p0n5n10n15n20MHz_l_3_reg_2346 <= q_p0n5n10n15n20MHz_q3;
                q_p0n5n10n15n20MHz_l_4_reg_2357 <= q_p0n5n10n15n20MHz_q4;
                q_p0n5n10n15n20MHz_l_5_reg_2368 <= q_p0n5n10n15n20MHz_q5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((d_i0_V_0_load_A = ap_const_logic_1)) then
                d_i0_V_0_payload_A <= d_i0_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((d_i0_V_0_load_B = ap_const_logic_1)) then
                d_i0_V_0_payload_B <= d_i0_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((d_i1_V_0_load_A = ap_const_logic_1)) then
                d_i1_V_0_payload_A <= d_i1_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((d_i1_V_0_load_B = ap_const_logic_1)) then
                d_i1_V_0_payload_B <= d_i1_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                i_p0n5n10n15n20MHz_l_1_reg_2097 <= i_p0n5n10n15n20MHz_q1;
                i_p0n5n10n15n20MHz_l_reg_2086 <= i_p0n5n10n15n20MHz_q0;
                q_p0n5n10n15n20MHz_l_1_reg_2102 <= q_p0n5n10n15n20MHz_q1;
                q_p0n5n10n15n20MHz_l_reg_2091 <= q_p0n5n10n15n20MHz_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_p2MHz_load_reg_2024 <= i_p2MHz_q0;
                p_Result_1_reg_1966 <= d_i0_V_0_data_out(47 downto 32);
                p_Result_2_reg_1971 <= d_i0_V_0_data_out(63 downto 48);
                p_Result_3_reg_1982 <= d_i1_V_0_data_out(31 downto 16);
                p_Result_4_reg_1988 <= d_i1_V_0_data_out(47 downto 32);
                p_Result_5_reg_1994 <= d_i1_V_0_data_out(63 downto 48);
                p_Result_6_reg_2000 <= d_i1_V_0_data_out(79 downto 64);
                p_Result_7_reg_2006 <= d_i1_V_0_data_out(95 downto 80);
                p_Result_8_reg_2012 <= d_i1_V_0_data_out(111 downto 96);
                p_Result_9_reg_2018 <= d_i1_V_0_data_out(127 downto 112);
                p_Result_s_reg_1961 <= d_i0_V_0_data_out(31 downto 16);
                q_p2MHz_load_reg_2029 <= q_p2MHz_q0;
                tmp_47_reg_1956 <= tmp_47_fu_636_p1;
                tmp_48_reg_1976 <= tmp_48_fu_670_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter14_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                loc_V_1_trunc_reg_2819 <= loc_V_1_trunc_fu_1703_p2;
                loc_V_2_trunc_reg_2824 <= loc_V_2_trunc_fu_1712_p2;
                loc_V_3_trunc_reg_2829 <= loc_V_3_trunc_fu_1721_p2;
                loc_V_trunc_reg_2814 <= loc_V_trunc_fu_1694_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_1_i_i1_reg_2391 <= grp_fu_1028_p2;
                p_1_i_i3_reg_2411 <= grp_fu_1052_p2;
                p_1_i_i6_reg_2443 <= grp_fu_1076_p2;
                p_1_i_i8_reg_2463 <= grp_fu_1100_p2;
                p_2_i_i1_reg_2396 <= grp_fu_1034_p2;
                p_2_i_i3_reg_2416 <= grp_fu_1058_p2;
                p_2_i_i6_reg_2448 <= grp_fu_1082_p2;
                p_2_i_i8_reg_2468 <= grp_fu_1106_p2;
                p_3_i_i1_reg_2401 <= grp_fu_1040_p2;
                p_3_i_i3_reg_2421 <= grp_fu_1064_p2;
                p_3_i_i6_reg_2453 <= grp_fu_1088_p2;
                p_3_i_i8_reg_2473 <= grp_fu_1112_p2;
                p_i_i1_reg_2386 <= grp_fu_1022_p2;
                p_i_i3_reg_2406 <= grp_fu_1046_p2;
                p_i_i6_reg_2438 <= grp_fu_1070_p2;
                p_i_i8_reg_2458 <= grp_fu_1094_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter12_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_1_i_i2_reg_2699 <= grp_fu_1447_p2;
                p_1_i_i4_reg_2719 <= grp_fu_1467_p2;
                p_1_i_i7_reg_2739 <= grp_fu_1487_p2;
                p_1_i_i9_reg_2759 <= grp_fu_1507_p2;
                p_2_i_i2_reg_2704 <= grp_fu_1452_p2;
                p_2_i_i4_reg_2724 <= grp_fu_1472_p2;
                p_2_i_i7_reg_2744 <= grp_fu_1492_p2;
                p_2_i_i9_reg_2764 <= grp_fu_1512_p2;
                p_3_i_i2_reg_2709 <= grp_fu_1457_p2;
                p_3_i_i4_reg_2729 <= grp_fu_1477_p2;
                p_3_i_i7_reg_2749 <= grp_fu_1497_p2;
                p_3_i_i9_reg_2769 <= grp_fu_1517_p2;
                p_i_i2_reg_2694 <= grp_fu_1442_p2;
                p_i_i4_reg_2714 <= grp_fu_1462_p2;
                p_i_i7_reg_2734 <= grp_fu_1482_p2;
                p_i_i9_reg_2754 <= grp_fu_1502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_2_i_i5_cast_reg_2325 <= grp_fu_1753_p2;
                p_2_i_i_cast_reg_2315 <= grp_fu_1741_p2;
                p_i_i5_reg_2320 <= grp_fu_1747_p2;
                p_i_i_reg_2310 <= grp_fu_1735_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter7_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_r_M_imag_V_1_reg_2504 <= p_r_M_imag_V_1_fu_1232_p2;
                p_r_M_imag_V_3_reg_2516 <= p_r_M_imag_V_3_fu_1240_p2;
                p_r_M_imag_V_5_reg_2528 <= p_r_M_imag_V_5_fu_1254_p2;
                p_r_M_imag_V_7_reg_2540 <= p_r_M_imag_V_7_fu_1262_p2;
                p_r_V_10_reg_2498 <= p_r_V_10_fu_1228_p2;
                p_r_V_12_reg_2510 <= p_r_V_12_fu_1236_p2;
                p_r_V_14_reg_2522 <= p_r_V_14_fu_1250_p2;
                p_r_V_16_reg_2534 <= p_r_V_16_fu_1258_p2;
                r_V_28_reg_2478 <= r_V_28_fu_1183_p3;
                r_V_29_reg_2483 <= r_V_29_fu_1194_p3;
                r_V_30_reg_2488 <= r_V_30_fu_1205_p3;
                r_V_31_reg_2493 <= r_V_31_fu_1216_p3;
                r_V_34_reg_2546 <= r_V_34_fu_1279_p3;
                r_V_37_reg_2561 <= r_V_37_fu_1317_p3;
                r_V_40_reg_2576 <= r_V_40_fu_1355_p3;
                r_V_43_reg_2591 <= r_V_43_fu_1393_p3;
                tmp_17_reg_2556 <= r_V_34_fu_1279_p3(21 downto 6);
                tmp_21_reg_2571 <= r_V_37_fu_1317_p3(21 downto 6);
                tmp_25_reg_2586 <= r_V_40_fu_1355_p3(21 downto 6);
                tmp_29_reg_2601 <= r_V_43_fu_1393_p3(21 downto 6);
                tmp_51_reg_2551 <= r_V_34_fu_1279_p3(31 downto 31);
                tmp_52_reg_2566 <= r_V_37_fu_1317_p3(31 downto 31);
                tmp_53_reg_2581 <= r_V_40_fu_1355_p3(31 downto 31);
                tmp_54_reg_2596 <= r_V_43_fu_1393_p3(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_24_reg_2076 <= r_V_24_fu_948_p3;
                r_V_25_reg_2081 <= r_V_25_fu_954_p3;
                r_V_44_reg_2036 <= r_V_44_fu_788_p3;
                r_V_45_reg_2041 <= r_V_45_fu_809_p3;
                r_V_46_reg_2046 <= r_V_46_fu_830_p3;
                r_V_47_reg_2051 <= r_V_47_fu_851_p3;
                r_V_48_reg_2056 <= r_V_48_fu_872_p3;
                r_V_49_reg_2061 <= r_V_49_fu_893_p3;
                r_V_50_reg_2066 <= r_V_50_fu_914_p3;
                r_V_51_reg_2071 <= r_V_51_fu_935_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_26_reg_2192 <= r_V_26_fu_1005_p3;
                r_V_27_reg_2197 <= r_V_27_fu_1016_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_12_reg_2232 <= tmp_12_fu_1133_p1;
                tmp_8_reg_2226 <= tmp_8_fu_1130_p1;
                val_assign_1_cast_reg_2214 <= val_assign_1_cast_fu_1124_p1;
                val_assign_2_cast_reg_2220 <= val_assign_2_cast_fu_1127_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_51_reg_2551 = ap_const_lv1_1) and (ap_reg_pp0_iter8_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_15_reg_2654 <= p_neg1_fu_1522_p2(21 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter9_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_18_reg_2674 <= tmp_18_fu_1587_p3;
                tmp_22_reg_2679 <= tmp_22_fu_1598_p3;
                tmp_26_reg_2684 <= tmp_26_fu_1609_p3;
                tmp_30_reg_2689 <= tmp_30_fu_1620_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_52_reg_2566 = ap_const_lv1_1) and (ap_reg_pp0_iter8_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_19_reg_2659 <= p_neg2_fu_1537_p2(21 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_53_reg_2581 = ap_const_lv1_1) and (ap_reg_pp0_iter8_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_23_reg_2664 <= p_neg3_fu_1552_p2(21 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_54_reg_2596 = ap_const_lv1_1) and (ap_reg_pp0_iter8_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_27_reg_2669 <= p_neg_fu_1567_p2(21 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_590_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_41_reg_1916 <= tmp_41_fu_616_p2;
                tmp_42_reg_1921 <= tmp_42_fu_621_p2;
                    tmp_4_cast4_reg_1908(7 downto 0) <= tmp_4_cast4_fu_608_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_43_reg_2238 <= tmp_43_fu_1136_p2;
                tmp_44_reg_2243 <= tmp_44_fu_1140_p2;
                tmp_45_reg_2248 <= tmp_45_fu_1144_p2;
                tmp_46_reg_2253 <= tmp_46_fu_1148_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter13_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_55_reg_2774 <= tmp_55_fu_1658_p1;
                tmp_56_reg_2779 <= tmp_56_fu_1662_p1;
                tmp_57_reg_2784 <= tmp_57_fu_1666_p1;
                tmp_58_reg_2789 <= tmp_58_fu_1670_p1;
                tmp_59_reg_2794 <= tmp_59_fu_1674_p1;
                tmp_60_reg_2799 <= tmp_60_fu_1678_p1;
                tmp_61_reg_2804 <= tmp_61_fu_1682_p1;
                tmp_62_reg_2809 <= tmp_62_fu_1686_p1;
            end if;
        end if;
    end process;
    tmp_4_cast4_reg_1908(8) <= '0';
    ap_reg_pp0_iter1_tmp_4_cast4_reg_1908(8) <= '0';
    ap_reg_pp0_iter2_tmp_4_cast4_reg_1908(8) <= '0';
    ap_reg_pp0_iter3_tmp_4_cast4_reg_1908(8) <= '0';
    ap_reg_pp0_iter4_tmp_4_cast4_reg_1908(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter16, tmp_s_fu_590_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter15)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_s_fu_590_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_s_fu_590_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(d_i0_V_0_vld_out, d_i1_V_0_vld_out, d_o_V_full_n, ap_enable_reg_pp0_iter1, tmp_s_reg_1899, ap_enable_reg_pp0_iter16, ap_reg_pp0_iter15_tmp_s_reg_1899)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_reg_pp0_iter15_tmp_s_reg_1899 = ap_const_lv1_0) and (d_o_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_s_reg_1899 = ap_const_lv1_0) and (d_i1_V_0_vld_out = ap_const_logic_0)) or ((tmp_s_reg_1899 = ap_const_lv1_0) and (d_i0_V_0_vld_out = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(d_i0_V_0_vld_out, d_i1_V_0_vld_out, d_o_V_full_n, ap_enable_reg_pp0_iter1, tmp_s_reg_1899, ap_enable_reg_pp0_iter16, ap_reg_pp0_iter15_tmp_s_reg_1899)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_reg_pp0_iter15_tmp_s_reg_1899 = ap_const_lv1_0) and (d_o_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_s_reg_1899 = ap_const_lv1_0) and (d_i1_V_0_vld_out = ap_const_logic_0)) or ((tmp_s_reg_1899 = ap_const_lv1_0) and (d_i0_V_0_vld_out = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(d_i0_V_0_vld_out, d_i1_V_0_vld_out, d_o_V_full_n, ap_enable_reg_pp0_iter1, tmp_s_reg_1899, ap_enable_reg_pp0_iter16, ap_reg_pp0_iter15_tmp_s_reg_1899)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_reg_pp0_iter15_tmp_s_reg_1899 = ap_const_lv1_0) and (d_o_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_s_reg_1899 = ap_const_lv1_0) and (d_i1_V_0_vld_out = ap_const_logic_0)) or ((tmp_s_reg_1899 = ap_const_lv1_0) and (d_i0_V_0_vld_out = ap_const_logic_0)))));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_pp0_stage0_iter16_assign_proc : process(d_o_V_full_n, ap_reg_pp0_iter15_tmp_s_reg_1899)
    begin
                ap_block_state18_pp0_stage0_iter16 <= ((ap_reg_pp0_iter15_tmp_s_reg_1899 = ap_const_lv1_0) and (d_o_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(d_i0_V_0_vld_out, d_i1_V_0_vld_out, tmp_s_reg_1899)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((tmp_s_reg_1899 = ap_const_lv1_0) and (d_i1_V_0_vld_out = ap_const_logic_0)) or ((tmp_s_reg_1899 = ap_const_lv1_0) and (d_i0_V_0_vld_out = ap_const_logic_0)));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_s_fu_590_p2)
    begin
        if ((tmp_s_fu_590_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

        b0_M_imag_V_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_24_reg_2076),32));

        b1_M_imag_V_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_25_reg_2081),32));

        b1_M_real_V_fu_991_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter2_i_p2MHz_load_reg_2024),32));

        bw02_a01_M_imag_V_c_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_3_reg_1982),31));

        bw02_a01_M_real_V_c_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_48_reg_1976),31));

        bw02_a02_M_imag_V_c_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_5_reg_1994),31));

        bw02_a02_M_real_V_c_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_4_reg_1988),31));

        bw02_a11_M_imag_V_c_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_7_reg_2006),31));

        bw02_a11_M_real_V_c_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_6_reg_2000),31));

        bw02_a12_M_real_V_c_fu_762_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_8_reg_2012),31));

    bw02_num_shift_to_le_fu_446_p4 <= cfg0_V(27 downto 24);
        bw20_a0_M_imag_V_ca_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter4_p_Result_s_reg_1961),24));

        bw20_a0_M_real_V_ca_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_tmp_47_reg_1956),24));

        bw20_a1_M_imag_V_ca_fu_1155_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter4_p_Result_2_reg_1971),24));

        bw20_a1_M_real_V_ca_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_p_Result_1_reg_1966),24));

    bw20_num_shift_to_le_fu_436_p4 <= cfg0_V(31 downto 28);
        c01_M_imag_V_fu_1421_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_28_reg_2478),32));

        c01_M_real_V_fu_1418_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_2_reg_2330),32));

        c02_M_imag_V_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_29_reg_2483),32));

        c02_M_real_V_fu_1424_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_3_reg_2341),32));

        c11_M_imag_V_fu_1433_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_30_reg_2488),32));

        c11_M_real_V_fu_1430_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_4_reg_2352),32));

        c12_M_imag_V_fu_1439_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_31_reg_2493),32));

        c12_M_real_V_fu_1436_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_5_reg_2363),32));

        complex_M_imag_V_wr_1_fu_1225_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complex_M_imag_V_wr_reg_2380),32));

        complex_M_imag_V_wr_3_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complex_M_imag_V_wr_2_reg_2432),32));

    d_i0_V_0_ack_in <= d_i0_V_0_state(1);

    d_i0_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_s_reg_1899, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            d_i0_V_0_ack_out <= ap_const_logic_1;
        else 
            d_i0_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    d_i0_V_0_data_out_assign_proc : process(d_i0_V_0_payload_A, d_i0_V_0_payload_B, d_i0_V_0_sel)
    begin
        if ((d_i0_V_0_sel = ap_const_logic_1)) then 
            d_i0_V_0_data_out <= d_i0_V_0_payload_B;
        else 
            d_i0_V_0_data_out <= d_i0_V_0_payload_A;
        end if; 
    end process;

    d_i0_V_0_load_A <= (not(d_i0_V_0_sel_wr) and d_i0_V_0_state_cmp_full);
    d_i0_V_0_load_B <= (d_i0_V_0_state_cmp_full and d_i0_V_0_sel_wr);
    d_i0_V_0_sel <= d_i0_V_0_sel_rd;
    d_i0_V_0_state_cmp_full <= '0' when (d_i0_V_0_state = ap_const_lv2_1) else '1';
    d_i0_V_0_vld_in <= d_i0_V_TVALID;
    d_i0_V_0_vld_out <= d_i0_V_0_state(0);

    d_i0_V_TDATA_blk_n_assign_proc : process(d_i0_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_s_reg_1899)
    begin
        if (((tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            d_i0_V_TDATA_blk_n <= d_i0_V_0_state(0);
        else 
            d_i0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_i0_V_TREADY <= d_i0_V_0_state(1);
    d_i1_V_0_ack_in <= d_i1_V_0_state(1);

    d_i1_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_s_reg_1899, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            d_i1_V_0_ack_out <= ap_const_logic_1;
        else 
            d_i1_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    d_i1_V_0_data_out_assign_proc : process(d_i1_V_0_payload_A, d_i1_V_0_payload_B, d_i1_V_0_sel)
    begin
        if ((d_i1_V_0_sel = ap_const_logic_1)) then 
            d_i1_V_0_data_out <= d_i1_V_0_payload_B;
        else 
            d_i1_V_0_data_out <= d_i1_V_0_payload_A;
        end if; 
    end process;

    d_i1_V_0_load_A <= (not(d_i1_V_0_sel_wr) and d_i1_V_0_state_cmp_full);
    d_i1_V_0_load_B <= (d_i1_V_0_state_cmp_full and d_i1_V_0_sel_wr);
    d_i1_V_0_sel <= d_i1_V_0_sel_rd;
    d_i1_V_0_state_cmp_full <= '0' when (d_i1_V_0_state = ap_const_lv2_1) else '1';
    d_i1_V_0_vld_in <= d_i1_V_TVALID;
    d_i1_V_0_vld_out <= d_i1_V_0_state(0);

    d_i1_V_TDATA_blk_n_assign_proc : process(d_i1_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_s_reg_1899)
    begin
        if (((tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            d_i1_V_TDATA_blk_n <= d_i1_V_0_state(0);
        else 
            d_i1_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_i1_V_TREADY <= d_i1_V_0_state(1);

    d_o_V_blk_n_assign_proc : process(d_o_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter16, ap_reg_pp0_iter15_tmp_s_reg_1899)
    begin
        if (((ap_reg_pp0_iter15_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            d_o_V_blk_n <= d_o_V_full_n;
        else 
            d_o_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_o_V_din <= (((loc_V_3_trunc_reg_2829 & loc_V_2_trunc_reg_2824) & loc_V_1_trunc_reg_2819) & loc_V_trunc_reg_2814);

    d_o_V_write_assign_proc : process(ap_enable_reg_pp0_iter16, ap_reg_pp0_iter15_tmp_s_reg_1899, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter15_tmp_s_reg_1899 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            d_o_V_write <= ap_const_logic_1;
        else 
            d_o_V_write <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1022_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1022_ce <= ap_const_logic_1;
        else 
            grp_fu_1022_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1022_p0 <= r_V_44_cast_fu_967_p1(31 - 1 downto 0);
    grp_fu_1022_p1 <= b1_M_real_V_fu_991_p1(8 - 1 downto 0);

    grp_fu_1028_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1028_ce <= ap_const_logic_1;
        else 
            grp_fu_1028_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1028_p0 <= r_V_45_cast_fu_970_p1(31 - 1 downto 0);
    grp_fu_1028_p1 <= b0_M_imag_V_fu_994_p1(8 - 1 downto 0);

    grp_fu_1034_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1034_ce <= ap_const_logic_1;
        else 
            grp_fu_1034_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1034_p0 <= r_V_44_cast_fu_967_p1(31 - 1 downto 0);
    grp_fu_1034_p1 <= b0_M_imag_V_fu_994_p1(8 - 1 downto 0);

    grp_fu_1040_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1040_ce <= ap_const_logic_1;
        else 
            grp_fu_1040_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1040_p0 <= r_V_45_cast_fu_970_p1(31 - 1 downto 0);
    grp_fu_1040_p1 <= b1_M_real_V_fu_991_p1(8 - 1 downto 0);

    grp_fu_1046_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1046_ce <= ap_const_logic_1;
        else 
            grp_fu_1046_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1046_p0 <= r_V_46_cast_fu_973_p1(31 - 1 downto 0);
    grp_fu_1046_p1 <= b1_M_real_V_fu_991_p1(8 - 1 downto 0);

    grp_fu_1052_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1052_ce <= ap_const_logic_1;
        else 
            grp_fu_1052_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1052_p0 <= r_V_47_cast_fu_976_p1(31 - 1 downto 0);
    grp_fu_1052_p1 <= b0_M_imag_V_fu_994_p1(8 - 1 downto 0);

    grp_fu_1058_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1058_ce <= ap_const_logic_1;
        else 
            grp_fu_1058_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1058_p0 <= r_V_46_cast_fu_973_p1(31 - 1 downto 0);
    grp_fu_1058_p1 <= b0_M_imag_V_fu_994_p1(8 - 1 downto 0);

    grp_fu_1064_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1064_ce <= ap_const_logic_1;
        else 
            grp_fu_1064_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1064_p0 <= r_V_47_cast_fu_976_p1(31 - 1 downto 0);
    grp_fu_1064_p1 <= b1_M_real_V_fu_991_p1(8 - 1 downto 0);

    grp_fu_1070_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1070_ce <= ap_const_logic_1;
        else 
            grp_fu_1070_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1070_p0 <= r_V_48_cast_fu_979_p1(31 - 1 downto 0);
    grp_fu_1070_p1 <= b1_M_real_V_fu_991_p1(8 - 1 downto 0);

    grp_fu_1076_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1076_ce <= ap_const_logic_1;
        else 
            grp_fu_1076_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1076_p0 <= r_V_49_cast_fu_982_p1(31 - 1 downto 0);
    grp_fu_1076_p1 <= b1_M_imag_V_fu_997_p1(8 - 1 downto 0);

    grp_fu_1082_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1082_ce <= ap_const_logic_1;
        else 
            grp_fu_1082_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1082_p0 <= r_V_48_cast_fu_979_p1(31 - 1 downto 0);
    grp_fu_1082_p1 <= b1_M_imag_V_fu_997_p1(8 - 1 downto 0);

    grp_fu_1088_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1088_ce <= ap_const_logic_1;
        else 
            grp_fu_1088_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1088_p0 <= r_V_49_cast_fu_982_p1(31 - 1 downto 0);
    grp_fu_1088_p1 <= b1_M_real_V_fu_991_p1(8 - 1 downto 0);

    grp_fu_1094_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1094_ce <= ap_const_logic_1;
        else 
            grp_fu_1094_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1094_p0 <= r_V_50_cast_fu_985_p1(31 - 1 downto 0);
    grp_fu_1094_p1 <= b1_M_real_V_fu_991_p1(8 - 1 downto 0);

    grp_fu_1100_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1100_ce <= ap_const_logic_1;
        else 
            grp_fu_1100_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1100_p0 <= r_V_51_cast_fu_988_p1(31 - 1 downto 0);
    grp_fu_1100_p1 <= b1_M_imag_V_fu_997_p1(8 - 1 downto 0);

    grp_fu_1106_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1106_ce <= ap_const_logic_1;
        else 
            grp_fu_1106_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1106_p0 <= r_V_50_cast_fu_985_p1(31 - 1 downto 0);
    grp_fu_1106_p1 <= b1_M_imag_V_fu_997_p1(8 - 1 downto 0);

    grp_fu_1112_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1112_ce <= ap_const_logic_1;
        else 
            grp_fu_1112_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1112_p0 <= r_V_51_cast_fu_988_p1(31 - 1 downto 0);
    grp_fu_1112_p1 <= b1_M_real_V_fu_991_p1(8 - 1 downto 0);

    grp_fu_1442_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1442_ce <= ap_const_logic_1;
        else 
            grp_fu_1442_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1442_p1 <= c01_M_real_V_fu_1418_p1(8 - 1 downto 0);

    grp_fu_1447_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1447_ce <= ap_const_logic_1;
        else 
            grp_fu_1447_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1447_p1 <= c01_M_imag_V_fu_1421_p1(8 - 1 downto 0);

    grp_fu_1452_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1452_ce <= ap_const_logic_1;
        else 
            grp_fu_1452_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1452_p1 <= c01_M_imag_V_fu_1421_p1(8 - 1 downto 0);

    grp_fu_1457_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1457_ce <= ap_const_logic_1;
        else 
            grp_fu_1457_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1457_p1 <= c01_M_real_V_fu_1418_p1(8 - 1 downto 0);

    grp_fu_1462_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1462_ce <= ap_const_logic_1;
        else 
            grp_fu_1462_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1462_p1 <= c02_M_real_V_fu_1424_p1(8 - 1 downto 0);

    grp_fu_1467_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1467_ce <= ap_const_logic_1;
        else 
            grp_fu_1467_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1467_p1 <= c02_M_imag_V_fu_1427_p1(8 - 1 downto 0);

    grp_fu_1472_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1472_ce <= ap_const_logic_1;
        else 
            grp_fu_1472_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1472_p1 <= c02_M_imag_V_fu_1427_p1(8 - 1 downto 0);

    grp_fu_1477_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1477_ce <= ap_const_logic_1;
        else 
            grp_fu_1477_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1477_p1 <= c02_M_real_V_fu_1424_p1(8 - 1 downto 0);

    grp_fu_1482_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1482_ce <= ap_const_logic_1;
        else 
            grp_fu_1482_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1482_p1 <= c11_M_real_V_fu_1430_p1(8 - 1 downto 0);

    grp_fu_1487_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1487_ce <= ap_const_logic_1;
        else 
            grp_fu_1487_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1487_p1 <= c11_M_imag_V_fu_1433_p1(8 - 1 downto 0);

    grp_fu_1492_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1492_ce <= ap_const_logic_1;
        else 
            grp_fu_1492_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1492_p1 <= c11_M_imag_V_fu_1433_p1(8 - 1 downto 0);

    grp_fu_1497_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1497_ce <= ap_const_logic_1;
        else 
            grp_fu_1497_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1497_p1 <= c11_M_real_V_fu_1430_p1(8 - 1 downto 0);

    grp_fu_1502_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1502_ce <= ap_const_logic_1;
        else 
            grp_fu_1502_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1502_p1 <= c12_M_real_V_fu_1436_p1(8 - 1 downto 0);

    grp_fu_1507_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1507_ce <= ap_const_logic_1;
        else 
            grp_fu_1507_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1507_p1 <= c12_M_imag_V_fu_1439_p1(8 - 1 downto 0);

    grp_fu_1512_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1512_ce <= ap_const_logic_1;
        else 
            grp_fu_1512_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1512_p1 <= c12_M_imag_V_fu_1439_p1(8 - 1 downto 0);

    grp_fu_1517_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1517_ce <= ap_const_logic_1;
        else 
            grp_fu_1517_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1517_p1 <= c12_M_real_V_fu_1436_p1(8 - 1 downto 0);

    grp_fu_1735_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1735_ce <= ap_const_logic_1;
        else 
            grp_fu_1735_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1735_p0 <= bw20_a0_M_real_V_ca_fu_1118_p1(16 - 1 downto 0);

    grp_fu_1741_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1741_ce <= ap_const_logic_1;
        else 
            grp_fu_1741_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1741_p0 <= bw20_a0_M_real_V_ca_fu_1118_p1(16 - 1 downto 0);

    grp_fu_1747_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1747_ce <= ap_const_logic_1;
        else 
            grp_fu_1747_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1747_p0 <= bw20_a1_M_real_V_ca_fu_1121_p1(16 - 1 downto 0);

    grp_fu_1753_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1753_ce <= ap_const_logic_1;
        else 
            grp_fu_1753_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1753_p0 <= bw20_a1_M_real_V_ca_fu_1121_p1(16 - 1 downto 0);

    grp_fu_1759_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1759_ce <= ap_const_logic_1;
        else 
            grp_fu_1759_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1759_p0 <= bw20_a0_M_imag_V_ca_fu_1152_p1(16 - 1 downto 0);
    grp_fu_1759_p1 <= tmp_8_reg_2226(8 - 1 downto 0);

    grp_fu_1765_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1765_ce <= ap_const_logic_1;
        else 
            grp_fu_1765_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1765_p0 <= bw20_a0_M_imag_V_ca_fu_1152_p1(16 - 1 downto 0);
    grp_fu_1765_p1 <= val_assign_1_cast_reg_2214(8 - 1 downto 0);

    grp_fu_1771_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1771_ce <= ap_const_logic_1;
        else 
            grp_fu_1771_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1771_p0 <= bw20_a1_M_imag_V_ca_fu_1155_p1(16 - 1 downto 0);
    grp_fu_1771_p1 <= tmp_12_reg_2232(8 - 1 downto 0);

    grp_fu_1777_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1777_ce <= ap_const_logic_1;
        else 
            grp_fu_1777_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1777_p0 <= bw20_a1_M_imag_V_ca_fu_1155_p1(16 - 1 downto 0);
    grp_fu_1777_p1 <= val_assign_2_cast_reg_2220(8 - 1 downto 0);
    i_1_fu_596_p2 <= std_logic_vector(unsigned(i_reg_345) + unsigned(ap_const_lv8_1));
    i_p0n5n10n15n20MHz_address0 <= tmp_43_cast_fu_626_p1(10 - 1 downto 0);
    i_p0n5n10n15n20MHz_address1 <= tmp_44_cast_fu_631_p1(10 - 1 downto 0);
    i_p0n5n10n15n20MHz_address2 <= tmp_45_cast_fu_1158_p1(10 - 1 downto 0);
    i_p0n5n10n15n20MHz_address3 <= tmp_46_cast_fu_1163_p1(10 - 1 downto 0);
    i_p0n5n10n15n20MHz_address4 <= tmp_47_cast_fu_1168_p1(10 - 1 downto 0);
    i_p0n5n10n15n20MHz_address5 <= tmp_48_cast_fu_1173_p1(10 - 1 downto 0);

    i_p0n5n10n15n20MHz_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_p0n5n10n15n20MHz_ce0 <= ap_const_logic_1;
        else 
            i_p0n5n10n15n20MHz_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    i_p0n5n10n15n20MHz_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_p0n5n10n15n20MHz_ce1 <= ap_const_logic_1;
        else 
            i_p0n5n10n15n20MHz_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    i_p0n5n10n15n20MHz_ce2_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            i_p0n5n10n15n20MHz_ce2 <= ap_const_logic_1;
        else 
            i_p0n5n10n15n20MHz_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    i_p0n5n10n15n20MHz_ce3_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            i_p0n5n10n15n20MHz_ce3 <= ap_const_logic_1;
        else 
            i_p0n5n10n15n20MHz_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    i_p0n5n10n15n20MHz_ce4_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            i_p0n5n10n15n20MHz_ce4 <= ap_const_logic_1;
        else 
            i_p0n5n10n15n20MHz_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    i_p0n5n10n15n20MHz_ce5_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            i_p0n5n10n15n20MHz_ce5 <= ap_const_logic_1;
        else 
            i_p0n5n10n15n20MHz_ce5 <= ap_const_logic_0;
        end if; 
    end process;

    i_p2MHz_address0 <= tmp_4_fu_602_p1(8 - 1 downto 0);

    i_p2MHz_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_p2MHz_ce0 <= ap_const_logic_1;
        else 
            i_p2MHz_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    loc_V_1_trunc_fu_1703_p2 <= std_logic_vector(unsigned(tmp2_fu_1699_p2) + unsigned(tmp_56_reg_2779));
    loc_V_2_trunc_fu_1712_p2 <= std_logic_vector(unsigned(tmp3_fu_1708_p2) + unsigned(tmp_59_reg_2794));
    loc_V_3_trunc_fu_1721_p2 <= std_logic_vector(unsigned(tmp4_fu_1717_p2) + unsigned(tmp_60_reg_2799));
    loc_V_trunc_fu_1694_p2 <= std_logic_vector(unsigned(tmp1_fu_1690_p2) + unsigned(tmp_55_reg_2774));
    mt1_fu_943_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p2MHz_load_reg_2029));
    mt2_fu_1000_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p0n5n10n15n20MHz_l_reg_2091));
    mt3_fu_1011_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p0n5n10n15n20MHz_l_1_reg_2102));
    mt4_fu_1178_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p0n5n10n15n20MHz_l_2_reg_2335));
    mt5_fu_1189_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p0n5n10n15n20MHz_l_3_reg_2346));
    mt6_fu_1200_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p0n5n10n15n20MHz_l_4_reg_2357));
    mt_fu_1211_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p0n5n10n15n20MHz_l_5_reg_2368));
    p01_M_imag_V_fu_1630_p2 <= std_logic_vector(unsigned(p_2_i_i2_reg_2704) + unsigned(p_3_i_i2_reg_2709));
    p02_M_imag_V_fu_1638_p2 <= std_logic_vector(unsigned(p_2_i_i4_reg_2724) + unsigned(p_3_i_i4_reg_2729));
    p11_M_imag_V_fu_1646_p2 <= std_logic_vector(unsigned(p_2_i_i7_reg_2744) + unsigned(p_3_i_i7_reg_2749));
    p12_M_imag_V_fu_1654_p2 <= std_logic_vector(unsigned(p_2_i_i9_reg_2764) + unsigned(p_3_i_i9_reg_2769));
    p_neg1_fu_1522_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(r_V_34_reg_2546));
    p_neg2_fu_1537_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(r_V_37_reg_2561));
    p_neg3_fu_1552_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(r_V_40_reg_2576));
    p_neg_fu_1567_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(r_V_43_reg_2591));
    p_r_M_imag_V_1_fu_1232_p2 <= std_logic_vector(unsigned(p_2_i_i1_reg_2396) + unsigned(p_3_i_i1_reg_2401));
    p_r_M_imag_V_3_fu_1240_p2 <= std_logic_vector(unsigned(p_2_i_i3_reg_2416) + unsigned(p_3_i_i3_reg_2421));
    p_r_M_imag_V_5_fu_1254_p2 <= std_logic_vector(unsigned(p_2_i_i6_reg_2448) + unsigned(p_3_i_i6_reg_2453));
    p_r_M_imag_V_7_fu_1262_p2 <= std_logic_vector(unsigned(p_2_i_i8_reg_2468) + unsigned(p_3_i_i8_reg_2473));
    p_r_V_10_fu_1228_p2 <= std_logic_vector(unsigned(p_i_i1_reg_2386) - unsigned(p_1_i_i1_reg_2391));
    p_r_V_11_fu_1626_p2 <= std_logic_vector(unsigned(p_i_i2_reg_2694) - unsigned(p_1_i_i2_reg_2699));
    p_r_V_12_fu_1236_p2 <= std_logic_vector(unsigned(p_i_i3_reg_2406) - unsigned(p_1_i_i3_reg_2411));
    p_r_V_13_fu_1634_p2 <= std_logic_vector(unsigned(p_i_i4_reg_2714) - unsigned(p_1_i_i4_reg_2719));
    p_r_V_14_fu_1250_p2 <= std_logic_vector(unsigned(p_i_i6_reg_2438) - unsigned(p_1_i_i6_reg_2443));
    p_r_V_15_fu_1642_p2 <= std_logic_vector(unsigned(p_i_i7_reg_2734) - unsigned(p_1_i_i7_reg_2739));
    p_r_V_16_fu_1258_p2 <= std_logic_vector(unsigned(p_i_i8_reg_2458) - unsigned(p_1_i_i8_reg_2463));
    p_r_V_17_fu_1650_p2 <= std_logic_vector(unsigned(p_i_i9_reg_2754) - unsigned(p_1_i_i9_reg_2759));
        p_r_V_5_cast_fu_1244_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_r_V_5_reg_2426),32));

        p_r_V_cast_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_r_V_reg_2374),32));

    p_shl1_cast_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_516_p3),10));
    p_shl2_cast_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_464_p3),10));
    p_shl3_cast_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_476_p3),10));
    p_shl_cast_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_504_p3),10));
    q_p0n5n10n15n20MHz_address0 <= tmp_43_cast_fu_626_p1(10 - 1 downto 0);
    q_p0n5n10n15n20MHz_address1 <= tmp_44_cast_fu_631_p1(10 - 1 downto 0);
    q_p0n5n10n15n20MHz_address2 <= tmp_45_cast_fu_1158_p1(10 - 1 downto 0);
    q_p0n5n10n15n20MHz_address3 <= tmp_46_cast_fu_1163_p1(10 - 1 downto 0);
    q_p0n5n10n15n20MHz_address4 <= tmp_47_cast_fu_1168_p1(10 - 1 downto 0);
    q_p0n5n10n15n20MHz_address5 <= tmp_48_cast_fu_1173_p1(10 - 1 downto 0);

    q_p0n5n10n15n20MHz_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            q_p0n5n10n15n20MHz_ce0 <= ap_const_logic_1;
        else 
            q_p0n5n10n15n20MHz_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_p0n5n10n15n20MHz_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            q_p0n5n10n15n20MHz_ce1 <= ap_const_logic_1;
        else 
            q_p0n5n10n15n20MHz_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    q_p0n5n10n15n20MHz_ce2_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            q_p0n5n10n15n20MHz_ce2 <= ap_const_logic_1;
        else 
            q_p0n5n10n15n20MHz_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    q_p0n5n10n15n20MHz_ce3_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            q_p0n5n10n15n20MHz_ce3 <= ap_const_logic_1;
        else 
            q_p0n5n10n15n20MHz_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    q_p0n5n10n15n20MHz_ce4_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            q_p0n5n10n15n20MHz_ce4 <= ap_const_logic_1;
        else 
            q_p0n5n10n15n20MHz_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    q_p0n5n10n15n20MHz_ce5_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            q_p0n5n10n15n20MHz_ce5 <= ap_const_logic_1;
        else 
            q_p0n5n10n15n20MHz_ce5 <= ap_const_logic_0;
        end if; 
    end process;

    q_p2MHz_address0 <= tmp_4_fu_602_p1(8 - 1 downto 0);

    q_p2MHz_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            q_p2MHz_ce0 <= ap_const_logic_1;
        else 
            q_p2MHz_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        r_V_15_cast_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_15_fu_880_p2),31));

    r_V_15_fu_880_p2 <= std_logic_vector(shift_right(signed(p_Result_7_reg_2006),to_integer(unsigned('0' & tmp_9_cast_fu_586_p1(16-1 downto 0)))));
    r_V_16_fu_888_p2 <= std_logic_vector(shift_left(unsigned(bw02_a11_M_imag_V_c_fu_759_p1),to_integer(unsigned('0' & tmp_cast_fu_456_p1(31-1 downto 0)))));
        r_V_18_cast_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_18_fu_901_p2),31));

    r_V_18_fu_901_p2 <= std_logic_vector(shift_right(signed(p_Result_8_reg_2012),to_integer(unsigned('0' & tmp_9_cast_fu_586_p1(16-1 downto 0)))));
    r_V_19_fu_909_p2 <= std_logic_vector(shift_left(unsigned(bw02_a12_M_real_V_c_fu_762_p1),to_integer(unsigned('0' & tmp_cast_fu_456_p1(31-1 downto 0)))));
        r_V_1_cast_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_1_fu_775_p2),31));

    r_V_1_fu_775_p2 <= std_logic_vector(shift_right(signed(tmp_48_reg_1976),to_integer(unsigned('0' & tmp_9_cast_fu_586_p1(16-1 downto 0)))));
        r_V_21_cast_fu_926_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_21_fu_922_p2),31));

    r_V_21_fu_922_p2 <= std_logic_vector(shift_right(signed(p_Result_9_reg_2018),to_integer(unsigned('0' & tmp_9_cast_fu_586_p1(16-1 downto 0)))));
    r_V_22_fu_930_p2 <= std_logic_vector(shift_left(unsigned(tmp_12_cast5_fu_765_p1),to_integer(unsigned('0' & tmp_cast_fu_456_p1(31-1 downto 0)))));
    r_V_24_fu_948_p3 <= 
        mt1_fu_943_p2 when (tmp_3_fu_364_p3(0) = '1') else 
        q_p2MHz_load_reg_2029;
    r_V_25_fu_954_p3 <= 
        mt1_fu_943_p2 when (tmp_33_fu_396_p3(0) = '1') else 
        q_p2MHz_load_reg_2029;
    r_V_26_fu_1005_p3 <= 
        mt2_fu_1000_p2 when (tmp_1_fu_356_p3(0) = '1') else 
        q_p0n5n10n15n20MHz_l_reg_2091;
    r_V_27_fu_1016_p3 <= 
        mt3_fu_1011_p2 when (tmp_32_fu_388_p3(0) = '1') else 
        q_p0n5n10n15n20MHz_l_1_reg_2102;
    r_V_28_fu_1183_p3 <= 
        mt4_fu_1178_p2 when (tmp_11_fu_372_p3(0) = '1') else 
        q_p0n5n10n15n20MHz_l_2_reg_2335;
    r_V_29_fu_1194_p3 <= 
        mt5_fu_1189_p2 when (tmp_31_fu_380_p3(0) = '1') else 
        q_p0n5n10n15n20MHz_l_3_reg_2346;
    r_V_2_fu_804_p2 <= std_logic_vector(shift_left(unsigned(bw02_a01_M_imag_V_c_fu_747_p1),to_integer(unsigned('0' & tmp_cast_fu_456_p1(31-1 downto 0)))));
    r_V_30_fu_1205_p3 <= 
        mt6_fu_1200_p2 when (tmp_34_fu_404_p3(0) = '1') else 
        q_p0n5n10n15n20MHz_l_4_reg_2357;
    r_V_31_fu_1216_p3 <= 
        mt_fu_1211_p2 when (tmp_35_fu_412_p3(0) = '1') else 
        q_p0n5n10n15n20MHz_l_5_reg_2368;
        r_V_32_cast_fu_1270_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_32_fu_1266_p2),32));

    r_V_32_fu_1266_p2 <= std_logic_vector(shift_right(signed(p_r_V_reg_2374),to_integer(unsigned('0' & tmp_8_cast_fu_576_p1(24-1 downto 0)))));
    r_V_33_fu_1274_p2 <= std_logic_vector(shift_left(unsigned(p_r_V_cast_fu_1222_p1),to_integer(unsigned('0' & tmp_7_fu_566_p1(31-1 downto 0)))));
    r_V_34_fu_1279_p3 <= 
        r_V_32_cast_fu_1270_p1 when (tmp_50_fu_960_p3(0) = '1') else 
        r_V_33_fu_1274_p2;
        r_V_35_cast_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_35_fu_1304_p2),32));

    r_V_35_fu_1304_p2 <= std_logic_vector(shift_right(signed(complex_M_imag_V_wr_reg_2380),to_integer(unsigned('0' & tmp_8_cast_fu_576_p1(24-1 downto 0)))));
    r_V_36_fu_1312_p2 <= std_logic_vector(shift_left(unsigned(complex_M_imag_V_wr_1_fu_1225_p1),to_integer(unsigned('0' & tmp_7_fu_566_p1(31-1 downto 0)))));
    r_V_37_fu_1317_p3 <= 
        r_V_35_cast_fu_1308_p1 when (tmp_50_fu_960_p3(0) = '1') else 
        r_V_36_fu_1312_p2;
        r_V_38_cast_fu_1346_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_38_fu_1342_p2),32));

    r_V_38_fu_1342_p2 <= std_logic_vector(shift_right(signed(p_r_V_5_reg_2426),to_integer(unsigned('0' & tmp_8_cast_fu_576_p1(24-1 downto 0)))));
    r_V_39_fu_1350_p2 <= std_logic_vector(shift_left(unsigned(p_r_V_5_cast_fu_1244_p1),to_integer(unsigned('0' & tmp_7_fu_566_p1(31-1 downto 0)))));
        r_V_3_cast_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_3_fu_796_p2),31));

    r_V_3_fu_796_p2 <= std_logic_vector(shift_right(signed(p_Result_3_reg_1982),to_integer(unsigned('0' & tmp_9_cast_fu_586_p1(16-1 downto 0)))));
    r_V_40_fu_1355_p3 <= 
        r_V_38_cast_fu_1346_p1 when (tmp_50_fu_960_p3(0) = '1') else 
        r_V_39_fu_1350_p2;
        r_V_41_cast_fu_1384_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_41_fu_1380_p2),32));

    r_V_41_fu_1380_p2 <= std_logic_vector(shift_right(signed(complex_M_imag_V_wr_2_reg_2432),to_integer(unsigned('0' & tmp_8_cast_fu_576_p1(24-1 downto 0)))));
    r_V_42_fu_1388_p2 <= std_logic_vector(shift_left(unsigned(complex_M_imag_V_wr_3_fu_1247_p1),to_integer(unsigned('0' & tmp_7_fu_566_p1(31-1 downto 0)))));
    r_V_43_fu_1393_p3 <= 
        r_V_41_cast_fu_1384_p1 when (tmp_50_fu_960_p3(0) = '1') else 
        r_V_42_fu_1388_p2;
        r_V_44_cast_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_44_reg_2036),32));

    r_V_44_fu_788_p3 <= 
        r_V_1_cast_fu_779_p1 when (tmp_49_fu_768_p3(0) = '1') else 
        r_V_fu_783_p2;
        r_V_45_cast_fu_970_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_45_reg_2041),32));

    r_V_45_fu_809_p3 <= 
        r_V_3_cast_fu_800_p1 when (tmp_49_fu_768_p3(0) = '1') else 
        r_V_2_fu_804_p2;
        r_V_46_cast_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_46_reg_2046),32));

    r_V_46_fu_830_p3 <= 
        r_V_5_cast_fu_821_p1 when (tmp_49_fu_768_p3(0) = '1') else 
        r_V_4_fu_825_p2;
        r_V_47_cast_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_47_reg_2051),32));

    r_V_47_fu_851_p3 <= 
        r_V_7_cast_fu_842_p1 when (tmp_49_fu_768_p3(0) = '1') else 
        r_V_6_fu_846_p2;
        r_V_48_cast_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_48_reg_2056),32));

    r_V_48_fu_872_p3 <= 
        r_V_9_cast_fu_863_p1 when (tmp_49_fu_768_p3(0) = '1') else 
        r_V_8_fu_867_p2;
        r_V_49_cast_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_49_reg_2061),32));

    r_V_49_fu_893_p3 <= 
        r_V_15_cast_fu_884_p1 when (tmp_49_fu_768_p3(0) = '1') else 
        r_V_16_fu_888_p2;
    r_V_4_fu_825_p2 <= std_logic_vector(shift_left(unsigned(bw02_a02_M_real_V_c_fu_750_p1),to_integer(unsigned('0' & tmp_cast_fu_456_p1(31-1 downto 0)))));
        r_V_50_cast_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_50_reg_2066),32));

    r_V_50_fu_914_p3 <= 
        r_V_18_cast_fu_905_p1 when (tmp_49_fu_768_p3(0) = '1') else 
        r_V_19_fu_909_p2;
        r_V_51_cast_fu_988_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_51_reg_2071),32));

    r_V_51_fu_935_p3 <= 
        r_V_21_cast_fu_926_p1 when (tmp_49_fu_768_p3(0) = '1') else 
        r_V_22_fu_930_p2;
        r_V_5_cast_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_5_fu_817_p2),31));

    r_V_5_fu_817_p2 <= std_logic_vector(shift_right(signed(p_Result_4_reg_1988),to_integer(unsigned('0' & tmp_9_cast_fu_586_p1(16-1 downto 0)))));
    r_V_6_fu_846_p2 <= std_logic_vector(shift_left(unsigned(bw02_a02_M_imag_V_c_fu_753_p1),to_integer(unsigned('0' & tmp_cast_fu_456_p1(31-1 downto 0)))));
        r_V_7_cast_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_7_fu_838_p2),31));

    r_V_7_fu_838_p2 <= std_logic_vector(shift_right(signed(p_Result_5_reg_1994),to_integer(unsigned('0' & tmp_9_cast_fu_586_p1(16-1 downto 0)))));
    r_V_8_fu_867_p2 <= std_logic_vector(shift_left(unsigned(bw02_a11_M_real_V_c_fu_756_p1),to_integer(unsigned('0' & tmp_cast_fu_456_p1(31-1 downto 0)))));
        r_V_9_cast_fu_863_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_9_fu_859_p2),31));

    r_V_9_fu_859_p2 <= std_logic_vector(shift_right(signed(p_Result_6_reg_2000),to_integer(unsigned('0' & tmp_9_cast_fu_586_p1(16-1 downto 0)))));
    r_V_fu_783_p2 <= std_logic_vector(shift_left(unsigned(bw02_a01_M_real_V_c_fu_744_p1),to_integer(unsigned('0' & tmp_cast_fu_456_p1(31-1 downto 0)))));
    sh_V_1_fu_580_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(bw02_num_shift_to_le_fu_446_p4));
    sh_V_3_fu_570_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(bw20_num_shift_to_le_fu_436_p4));
    tmp1_fu_1690_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter14_tmp_18_reg_2674) + unsigned(tmp_57_reg_2784));
    tmp2_fu_1699_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter14_tmp_22_reg_2679) + unsigned(tmp_58_reg_2789));
    tmp3_fu_1708_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter14_tmp_26_reg_2684) + unsigned(tmp_61_reg_2804));
    tmp4_fu_1717_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter14_tmp_30_reg_2689) + unsigned(tmp_62_reg_2809));
    tmp_10_fu_504_p3 <= (tmp_9_fu_494_p4 & ap_const_lv7_0);
    tmp_11_fu_372_p3 <= cfg0_V(4 downto 4);
        tmp_12_cast5_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_9_reg_2018),31));

        tmp_12_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_27_reg_2197),24));

    tmp_13_fu_516_p3 <= (tmp_9_fu_494_p4 & ap_const_lv5_0);
    tmp_14_fu_528_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_512_p1) + unsigned(p_shl1_cast_fu_524_p1));
    tmp_16_fu_1582_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_15_reg_2654));
    tmp_18_fu_1587_p3 <= 
        tmp_16_fu_1582_p2 when (ap_reg_pp0_iter9_tmp_51_reg_2551(0) = '1') else 
        ap_reg_pp0_iter9_tmp_17_reg_2556;
    tmp_1_fu_356_p3 <= cfg0_V(2 downto 2);
    tmp_20_fu_1593_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_19_reg_2659));
    tmp_22_fu_1598_p3 <= 
        tmp_20_fu_1593_p2 when (ap_reg_pp0_iter9_tmp_52_reg_2566(0) = '1') else 
        ap_reg_pp0_iter9_tmp_21_reg_2571;
    tmp_24_fu_1604_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_23_reg_2664));
    tmp_26_fu_1609_p3 <= 
        tmp_24_fu_1604_p2 when (ap_reg_pp0_iter9_tmp_53_reg_2581(0) = '1') else 
        ap_reg_pp0_iter9_tmp_25_reg_2586;
    tmp_28_fu_1615_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_27_reg_2669));
    tmp_2_fu_464_p3 <= (tmp_38_fu_460_p1 & ap_const_lv7_0);
    tmp_30_fu_1620_p3 <= 
        tmp_28_fu_1615_p2 when (ap_reg_pp0_iter9_tmp_54_reg_2596(0) = '1') else 
        ap_reg_pp0_iter9_tmp_29_reg_2601;
    tmp_31_fu_380_p3 <= cfg0_V(5 downto 5);
    tmp_32_fu_388_p3 <= cfg0_V(10 downto 10);
    tmp_33_fu_396_p3 <= cfg0_V(11 downto 11);
    tmp_34_fu_404_p3 <= cfg0_V(12 downto 12);
    tmp_35_fu_412_p3 <= cfg0_V(13 downto 13);
    tmp_36_fu_420_p3 <= cfg0_V(16 downto 16);
    tmp_37_fu_428_p3 <= cfg0_V(17 downto 17);
    tmp_38_fu_460_p1 <= cfg0_V(2 - 1 downto 0);
    tmp_39_cast_fu_534_p3 <= 
        ap_const_lv9_A0 when (tmp_36_fu_420_p3(0) = '1') else 
        ap_const_lv9_0;
    tmp_39_fu_542_p3 <= 
        ap_const_lv9_140 when (tmp_36_fu_420_p3(0) = '1') else 
        ap_const_lv9_A0;
    tmp_3_fu_364_p3 <= cfg0_V(3 downto 3);
    tmp_40_fu_558_p3 <= 
        ap_const_lv9_140 when (tmp_37_fu_428_p3(0) = '1') else 
        ap_const_lv9_A0;
    tmp_41_cast_fu_550_p3 <= 
        ap_const_lv9_A0 when (tmp_37_fu_428_p3(0) = '1') else 
        ap_const_lv9_0;
    tmp_41_fu_616_p2 <= std_logic_vector(unsigned(tmp_4_cast_fu_612_p1) + unsigned(tmp_6_fu_488_p2));
    tmp_42_fu_621_p2 <= std_logic_vector(unsigned(tmp_4_cast_fu_612_p1) + unsigned(tmp_14_fu_528_p2));
    tmp_43_cast_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_reg_1916),64));
    tmp_43_fu_1136_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter4_tmp_4_cast4_reg_1908) + unsigned(tmp_39_cast_fu_534_p3));
    tmp_44_cast_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_reg_1921),64));
    tmp_44_fu_1140_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter4_tmp_4_cast4_reg_1908) + unsigned(tmp_39_fu_542_p3));
    tmp_45_cast_fu_1158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_reg_2238),64));
    tmp_45_fu_1144_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter4_tmp_4_cast4_reg_1908) + unsigned(tmp_41_cast_fu_550_p3));
    tmp_46_cast_fu_1163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_reg_2243),64));
    tmp_46_fu_1148_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter4_tmp_4_cast4_reg_1908) + unsigned(tmp_40_fu_558_p3));
    tmp_47_cast_fu_1168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_reg_2248),64));
    tmp_47_fu_636_p1 <= d_i0_V_0_data_out(16 - 1 downto 0);
    tmp_48_cast_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_reg_2253),64));
    tmp_48_fu_670_p1 <= d_i1_V_0_data_out(16 - 1 downto 0);
    tmp_49_fu_768_p3 <= cfg0_V(27 downto 27);
    tmp_4_cast4_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_345),9));
    tmp_4_cast_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_345),10));
    tmp_4_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_345),64));
    tmp_50_fu_960_p3 <= cfg0_V(31 downto 31);
    tmp_55_fu_1658_p1 <= p_r_V_11_fu_1626_p2(16 - 1 downto 0);
    tmp_56_fu_1662_p1 <= p01_M_imag_V_fu_1630_p2(16 - 1 downto 0);
    tmp_57_fu_1666_p1 <= p_r_V_13_fu_1634_p2(16 - 1 downto 0);
    tmp_58_fu_1670_p1 <= p02_M_imag_V_fu_1638_p2(16 - 1 downto 0);
    tmp_59_fu_1674_p1 <= p_r_V_15_fu_1642_p2(16 - 1 downto 0);
    tmp_5_fu_476_p3 <= (tmp_38_fu_460_p1 & ap_const_lv5_0);
    tmp_60_fu_1678_p1 <= p11_M_imag_V_fu_1646_p2(16 - 1 downto 0);
    tmp_61_fu_1682_p1 <= p_r_V_17_fu_1650_p2(16 - 1 downto 0);
    tmp_62_fu_1686_p1 <= p12_M_imag_V_fu_1654_p2(16 - 1 downto 0);
    tmp_6_fu_488_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_472_p1) + unsigned(p_shl3_cast_fu_484_p1));
    tmp_7_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bw20_num_shift_to_le_fu_436_p4),32));
    tmp_8_cast_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_V_3_fu_570_p2),24));
        tmp_8_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_26_reg_2192),24));

    tmp_9_cast_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_V_1_fu_580_p2),16));
    tmp_9_fu_494_p4 <= cfg0_V(9 downto 8);
    tmp_cast_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bw02_num_shift_to_le_fu_446_p4),31));
    tmp_s_fu_590_p2 <= "1" when (i_reg_345 = ap_const_lv8_A0) else "0";
        val_assign_1_cast_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2086),24));

        val_assign_2_cast_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2097),24));

end behav;
