// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mixer_duc,hls_ip_2017_4_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.360000,HLS_SYN_LAT=177,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=136,HLS_SYN_FF=10301,HLS_SYN_LUT=3906}" *)

module mixer_duc (
        ap_clk,
        ap_rst_n,
        d_i0_V_TDATA,
        d_i0_V_TVALID,
        d_i0_V_TREADY,
        d_i1_V_TDATA,
        d_i1_V_TVALID,
        d_i1_V_TREADY,
        cfg0_V,
        d_o_V_din,
        d_o_V_full_n,
        d_o_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state19 = 3'd4;

input   ap_clk;
input   ap_rst_n;
input  [63:0] d_i0_V_TDATA;
input   d_i0_V_TVALID;
output   d_i0_V_TREADY;
input  [127:0] d_i1_V_TDATA;
input   d_i1_V_TVALID;
output   d_i1_V_TREADY;
input  [31:0] cfg0_V;
output  [63:0] d_o_V_din;
input   d_o_V_full_n;
output   d_o_V_write;

reg d_o_V_write;

reg    ap_rst_n_inv;
reg   [63:0] d_i0_V_0_data_out;
wire    d_i0_V_0_vld_in;
wire    d_i0_V_0_vld_out;
wire    d_i0_V_0_ack_in;
reg    d_i0_V_0_ack_out;
reg   [63:0] d_i0_V_0_payload_A;
reg   [63:0] d_i0_V_0_payload_B;
reg    d_i0_V_0_sel_rd;
reg    d_i0_V_0_sel_wr;
wire    d_i0_V_0_sel;
wire    d_i0_V_0_load_A;
wire    d_i0_V_0_load_B;
reg   [1:0] d_i0_V_0_state;
wire    d_i0_V_0_state_cmp_full;
reg   [127:0] d_i1_V_0_data_out;
wire    d_i1_V_0_vld_in;
wire    d_i1_V_0_vld_out;
wire    d_i1_V_0_ack_in;
reg    d_i1_V_0_ack_out;
reg   [127:0] d_i1_V_0_payload_A;
reg   [127:0] d_i1_V_0_payload_B;
reg    d_i1_V_0_sel_rd;
reg    d_i1_V_0_sel_wr;
wire    d_i1_V_0_sel;
wire    d_i1_V_0_load_A;
wire    d_i1_V_0_load_B;
reg   [1:0] d_i1_V_0_state;
wire    d_i1_V_0_state_cmp_full;
wire   [7:0] i_p2MHz_address0;
reg    i_p2MHz_ce0;
wire   [7:0] i_p2MHz_q0;
wire   [7:0] q_p2MHz_address0;
reg    q_p2MHz_ce0;
wire   [7:0] q_p2MHz_q0;
wire   [9:0] i_p0n5n10n15n20MHz_address0;
reg    i_p0n5n10n15n20MHz_ce0;
wire   [7:0] i_p0n5n10n15n20MHz_q0;
wire   [9:0] i_p0n5n10n15n20MHz_address1;
reg    i_p0n5n10n15n20MHz_ce1;
wire   [7:0] i_p0n5n10n15n20MHz_q1;
wire   [9:0] i_p0n5n10n15n20MHz_address2;
reg    i_p0n5n10n15n20MHz_ce2;
wire   [7:0] i_p0n5n10n15n20MHz_q2;
wire   [9:0] i_p0n5n10n15n20MHz_address3;
reg    i_p0n5n10n15n20MHz_ce3;
wire   [7:0] i_p0n5n10n15n20MHz_q3;
wire   [9:0] i_p0n5n10n15n20MHz_address4;
reg    i_p0n5n10n15n20MHz_ce4;
wire   [7:0] i_p0n5n10n15n20MHz_q4;
wire   [9:0] i_p0n5n10n15n20MHz_address5;
reg    i_p0n5n10n15n20MHz_ce5;
wire   [7:0] i_p0n5n10n15n20MHz_q5;
wire   [9:0] q_p0n5n10n15n20MHz_address0;
reg    q_p0n5n10n15n20MHz_ce0;
wire   [7:0] q_p0n5n10n15n20MHz_q0;
wire   [9:0] q_p0n5n10n15n20MHz_address1;
reg    q_p0n5n10n15n20MHz_ce1;
wire   [7:0] q_p0n5n10n15n20MHz_q1;
wire   [9:0] q_p0n5n10n15n20MHz_address2;
reg    q_p0n5n10n15n20MHz_ce2;
wire   [7:0] q_p0n5n10n15n20MHz_q2;
wire   [9:0] q_p0n5n10n15n20MHz_address3;
reg    q_p0n5n10n15n20MHz_ce3;
wire   [7:0] q_p0n5n10n15n20MHz_q3;
wire   [9:0] q_p0n5n10n15n20MHz_address4;
reg    q_p0n5n10n15n20MHz_ce4;
wire   [7:0] q_p0n5n10n15n20MHz_q4;
wire   [9:0] q_p0n5n10n15n20MHz_address5;
reg    q_p0n5n10n15n20MHz_ce5;
wire   [7:0] q_p0n5n10n15n20MHz_q5;
reg    d_i0_V_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_s_reg_1899;
reg    d_i1_V_TDATA_blk_n;
reg    d_o_V_blk_n;
reg    ap_enable_reg_pp0_iter16;
reg   [0:0] ap_reg_pp0_iter15_tmp_s_reg_1899;
reg   [7:0] i_reg_345;
wire    ap_CS_fsm_state1;
wire   [0:0] tmp_1_fu_356_p3;
wire   [0:0] tmp_3_fu_364_p3;
wire   [0:0] tmp_11_fu_372_p3;
wire   [0:0] tmp_31_fu_380_p3;
wire   [0:0] tmp_32_fu_388_p3;
wire   [0:0] tmp_33_fu_396_p3;
wire   [0:0] tmp_34_fu_404_p3;
wire   [0:0] tmp_35_fu_412_p3;
wire   [30:0] tmp_cast_fu_456_p1;
wire   [9:0] tmp_6_fu_488_p2;
wire   [9:0] tmp_14_fu_528_p2;
wire   [8:0] tmp_39_cast_fu_534_p3;
wire   [8:0] tmp_39_fu_542_p3;
wire   [8:0] tmp_41_cast_fu_550_p3;
wire   [8:0] tmp_40_fu_558_p3;
wire   [31:0] tmp_7_fu_566_p1;
wire   [23:0] tmp_8_cast_fu_576_p1;
wire   [15:0] tmp_9_cast_fu_586_p1;
wire   [0:0] tmp_s_fu_590_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
reg    ap_block_state18_pp0_stage0_iter16;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_tmp_s_reg_1899;
reg   [0:0] ap_reg_pp0_iter2_tmp_s_reg_1899;
reg   [0:0] ap_reg_pp0_iter3_tmp_s_reg_1899;
reg   [0:0] ap_reg_pp0_iter4_tmp_s_reg_1899;
reg   [0:0] ap_reg_pp0_iter5_tmp_s_reg_1899;
reg   [0:0] ap_reg_pp0_iter6_tmp_s_reg_1899;
reg   [0:0] ap_reg_pp0_iter7_tmp_s_reg_1899;
reg   [0:0] ap_reg_pp0_iter8_tmp_s_reg_1899;
reg   [0:0] ap_reg_pp0_iter9_tmp_s_reg_1899;
reg   [0:0] ap_reg_pp0_iter10_tmp_s_reg_1899;
reg   [0:0] ap_reg_pp0_iter11_tmp_s_reg_1899;
reg   [0:0] ap_reg_pp0_iter12_tmp_s_reg_1899;
reg   [0:0] ap_reg_pp0_iter13_tmp_s_reg_1899;
reg   [0:0] ap_reg_pp0_iter14_tmp_s_reg_1899;
wire   [7:0] i_1_fu_596_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [8:0] tmp_4_cast4_fu_608_p1;
reg   [8:0] tmp_4_cast4_reg_1908;
reg   [8:0] ap_reg_pp0_iter1_tmp_4_cast4_reg_1908;
reg   [8:0] ap_reg_pp0_iter2_tmp_4_cast4_reg_1908;
reg   [8:0] ap_reg_pp0_iter3_tmp_4_cast4_reg_1908;
reg   [8:0] ap_reg_pp0_iter4_tmp_4_cast4_reg_1908;
wire   [9:0] tmp_41_fu_616_p2;
reg   [9:0] tmp_41_reg_1916;
wire   [9:0] tmp_42_fu_621_p2;
reg   [9:0] tmp_42_reg_1921;
wire   [15:0] tmp_47_fu_636_p1;
reg   [15:0] tmp_47_reg_1956;
reg   [15:0] ap_reg_pp0_iter2_tmp_47_reg_1956;
reg   [15:0] ap_reg_pp0_iter3_tmp_47_reg_1956;
reg   [15:0] p_Result_s_reg_1961;
reg   [15:0] ap_reg_pp0_iter2_p_Result_s_reg_1961;
reg   [15:0] ap_reg_pp0_iter3_p_Result_s_reg_1961;
reg   [15:0] ap_reg_pp0_iter4_p_Result_s_reg_1961;
reg   [15:0] p_Result_1_reg_1966;
reg   [15:0] ap_reg_pp0_iter2_p_Result_1_reg_1966;
reg   [15:0] ap_reg_pp0_iter3_p_Result_1_reg_1966;
reg   [15:0] p_Result_2_reg_1971;
reg   [15:0] ap_reg_pp0_iter2_p_Result_2_reg_1971;
reg   [15:0] ap_reg_pp0_iter3_p_Result_2_reg_1971;
reg   [15:0] ap_reg_pp0_iter4_p_Result_2_reg_1971;
wire   [15:0] tmp_48_fu_670_p1;
reg   [15:0] tmp_48_reg_1976;
reg   [15:0] p_Result_3_reg_1982;
reg   [15:0] p_Result_4_reg_1988;
reg   [15:0] p_Result_5_reg_1994;
reg   [15:0] p_Result_6_reg_2000;
reg   [15:0] p_Result_7_reg_2006;
reg   [15:0] p_Result_8_reg_2012;
reg   [15:0] p_Result_9_reg_2018;
reg   [7:0] i_p2MHz_load_reg_2024;
reg   [7:0] ap_reg_pp0_iter2_i_p2MHz_load_reg_2024;
reg   [7:0] q_p2MHz_load_reg_2029;
wire   [30:0] r_V_44_fu_788_p3;
reg   [30:0] r_V_44_reg_2036;
wire   [30:0] r_V_45_fu_809_p3;
reg   [30:0] r_V_45_reg_2041;
wire   [30:0] r_V_46_fu_830_p3;
reg   [30:0] r_V_46_reg_2046;
wire   [30:0] r_V_47_fu_851_p3;
reg   [30:0] r_V_47_reg_2051;
wire   [30:0] r_V_48_fu_872_p3;
reg   [30:0] r_V_48_reg_2056;
wire   [30:0] r_V_49_fu_893_p3;
reg   [30:0] r_V_49_reg_2061;
wire   [30:0] r_V_50_fu_914_p3;
reg   [30:0] r_V_50_reg_2066;
wire   [30:0] r_V_51_fu_935_p3;
reg   [30:0] r_V_51_reg_2071;
wire   [7:0] r_V_24_fu_948_p3;
reg   [7:0] r_V_24_reg_2076;
wire   [7:0] r_V_25_fu_954_p3;
reg   [7:0] r_V_25_reg_2081;
reg   [7:0] i_p0n5n10n15n20MHz_l_reg_2086;
reg    ap_enable_reg_pp0_iter2;
reg  signed [7:0] ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2086;
reg   [7:0] q_p0n5n10n15n20MHz_l_reg_2091;
reg   [7:0] i_p0n5n10n15n20MHz_l_1_reg_2097;
reg  signed [7:0] ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2097;
reg   [7:0] q_p0n5n10n15n20MHz_l_1_reg_2102;
wire   [0:0] tmp_50_fu_960_p3;
wire  signed [31:0] r_V_44_cast_fu_967_p1;
wire  signed [31:0] r_V_45_cast_fu_970_p1;
wire  signed [31:0] r_V_46_cast_fu_973_p1;
wire  signed [31:0] r_V_47_cast_fu_976_p1;
wire  signed [31:0] r_V_48_cast_fu_979_p1;
wire  signed [31:0] r_V_49_cast_fu_982_p1;
wire  signed [31:0] r_V_50_cast_fu_985_p1;
wire  signed [31:0] r_V_51_cast_fu_988_p1;
wire  signed [31:0] b1_M_real_V_fu_991_p1;
wire  signed [31:0] b0_M_imag_V_fu_994_p1;
wire  signed [31:0] b1_M_imag_V_fu_997_p1;
wire   [7:0] r_V_26_fu_1005_p3;
reg  signed [7:0] r_V_26_reg_2192;
wire   [7:0] r_V_27_fu_1016_p3;
reg  signed [7:0] r_V_27_reg_2197;
wire  signed [23:0] bw20_a0_M_real_V_ca_fu_1118_p1;
wire  signed [23:0] bw20_a1_M_real_V_ca_fu_1121_p1;
wire  signed [23:0] val_assign_1_cast_fu_1124_p1;
reg  signed [23:0] val_assign_1_cast_reg_2214;
wire  signed [23:0] val_assign_2_cast_fu_1127_p1;
reg  signed [23:0] val_assign_2_cast_reg_2220;
wire  signed [23:0] tmp_8_fu_1130_p1;
reg  signed [23:0] tmp_8_reg_2226;
wire  signed [23:0] tmp_12_fu_1133_p1;
reg  signed [23:0] tmp_12_reg_2232;
wire   [8:0] tmp_43_fu_1136_p2;
reg   [8:0] tmp_43_reg_2238;
wire   [8:0] tmp_44_fu_1140_p2;
reg   [8:0] tmp_44_reg_2243;
wire   [8:0] tmp_45_fu_1144_p2;
reg   [8:0] tmp_45_reg_2248;
wire   [8:0] tmp_46_fu_1148_p2;
reg   [8:0] tmp_46_reg_2253;
wire  signed [23:0] bw20_a0_M_imag_V_ca_fu_1152_p1;
wire  signed [23:0] bw20_a1_M_imag_V_ca_fu_1155_p1;
wire  signed [23:0] grp_fu_1735_p2;
reg  signed [23:0] p_i_i_reg_2310;
wire  signed [23:0] grp_fu_1741_p2;
reg  signed [23:0] p_2_i_i_cast_reg_2315;
wire  signed [23:0] grp_fu_1747_p2;
reg  signed [23:0] p_i_i5_reg_2320;
wire  signed [23:0] grp_fu_1753_p2;
reg  signed [23:0] p_2_i_i5_cast_reg_2325;
reg   [7:0] i_p0n5n10n15n20MHz_l_2_reg_2330;
reg    ap_enable_reg_pp0_iter7;
reg   [7:0] ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_2_reg_2330;
reg   [7:0] q_p0n5n10n15n20MHz_l_2_reg_2335;
reg   [7:0] i_p0n5n10n15n20MHz_l_3_reg_2341;
reg   [7:0] ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_3_reg_2341;
reg   [7:0] q_p0n5n10n15n20MHz_l_3_reg_2346;
reg   [7:0] i_p0n5n10n15n20MHz_l_4_reg_2352;
reg   [7:0] ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_4_reg_2352;
reg   [7:0] q_p0n5n10n15n20MHz_l_4_reg_2357;
reg   [7:0] i_p0n5n10n15n20MHz_l_5_reg_2363;
reg   [7:0] ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_5_reg_2363;
reg   [7:0] q_p0n5n10n15n20MHz_l_5_reg_2368;
wire  signed [23:0] grp_fu_1759_p3;
reg  signed [23:0] p_r_V_reg_2374;
wire  signed [23:0] grp_fu_1765_p3;
reg  signed [23:0] complex_M_imag_V_wr_reg_2380;
wire   [31:0] grp_fu_1022_p2;
reg   [31:0] p_i_i1_reg_2386;
wire   [31:0] grp_fu_1028_p2;
reg   [31:0] p_1_i_i1_reg_2391;
wire   [31:0] grp_fu_1034_p2;
reg   [31:0] p_2_i_i1_reg_2396;
wire   [31:0] grp_fu_1040_p2;
reg   [31:0] p_3_i_i1_reg_2401;
wire   [31:0] grp_fu_1046_p2;
reg   [31:0] p_i_i3_reg_2406;
wire   [31:0] grp_fu_1052_p2;
reg   [31:0] p_1_i_i3_reg_2411;
wire   [31:0] grp_fu_1058_p2;
reg   [31:0] p_2_i_i3_reg_2416;
wire   [31:0] grp_fu_1064_p2;
reg   [31:0] p_3_i_i3_reg_2421;
wire  signed [23:0] grp_fu_1771_p3;
reg  signed [23:0] p_r_V_5_reg_2426;
wire  signed [23:0] grp_fu_1777_p3;
reg  signed [23:0] complex_M_imag_V_wr_2_reg_2432;
wire   [31:0] grp_fu_1070_p2;
reg   [31:0] p_i_i6_reg_2438;
wire   [31:0] grp_fu_1076_p2;
reg   [31:0] p_1_i_i6_reg_2443;
wire   [31:0] grp_fu_1082_p2;
reg   [31:0] p_2_i_i6_reg_2448;
wire   [31:0] grp_fu_1088_p2;
reg   [31:0] p_3_i_i6_reg_2453;
wire   [31:0] grp_fu_1094_p2;
reg   [31:0] p_i_i8_reg_2458;
wire   [31:0] grp_fu_1100_p2;
reg   [31:0] p_1_i_i8_reg_2463;
wire   [31:0] grp_fu_1106_p2;
reg   [31:0] p_2_i_i8_reg_2468;
wire   [31:0] grp_fu_1112_p2;
reg   [31:0] p_3_i_i8_reg_2473;
wire   [7:0] r_V_28_fu_1183_p3;
reg   [7:0] r_V_28_reg_2478;
wire   [7:0] r_V_29_fu_1194_p3;
reg   [7:0] r_V_29_reg_2483;
wire   [7:0] r_V_30_fu_1205_p3;
reg   [7:0] r_V_30_reg_2488;
wire   [7:0] r_V_31_fu_1216_p3;
reg   [7:0] r_V_31_reg_2493;
wire  signed [31:0] p_r_V_10_fu_1228_p2;
reg  signed [31:0] p_r_V_10_reg_2498;
wire  signed [31:0] p_r_M_imag_V_1_fu_1232_p2;
reg  signed [31:0] p_r_M_imag_V_1_reg_2504;
wire  signed [31:0] p_r_V_12_fu_1236_p2;
reg  signed [31:0] p_r_V_12_reg_2510;
wire  signed [31:0] p_r_M_imag_V_3_fu_1240_p2;
reg  signed [31:0] p_r_M_imag_V_3_reg_2516;
wire  signed [31:0] p_r_V_14_fu_1250_p2;
reg  signed [31:0] p_r_V_14_reg_2522;
wire  signed [31:0] p_r_M_imag_V_5_fu_1254_p2;
reg  signed [31:0] p_r_M_imag_V_5_reg_2528;
wire  signed [31:0] p_r_V_16_fu_1258_p2;
reg  signed [31:0] p_r_V_16_reg_2534;
wire  signed [31:0] p_r_M_imag_V_7_fu_1262_p2;
reg  signed [31:0] p_r_M_imag_V_7_reg_2540;
wire   [31:0] r_V_34_fu_1279_p3;
reg   [31:0] r_V_34_reg_2546;
reg   [0:0] tmp_51_reg_2551;
reg   [0:0] ap_reg_pp0_iter9_tmp_51_reg_2551;
reg   [15:0] tmp_17_reg_2556;
reg   [15:0] ap_reg_pp0_iter9_tmp_17_reg_2556;
wire   [31:0] r_V_37_fu_1317_p3;
reg   [31:0] r_V_37_reg_2561;
reg   [0:0] tmp_52_reg_2566;
reg   [0:0] ap_reg_pp0_iter9_tmp_52_reg_2566;
reg   [15:0] tmp_21_reg_2571;
reg   [15:0] ap_reg_pp0_iter9_tmp_21_reg_2571;
wire   [31:0] r_V_40_fu_1355_p3;
reg   [31:0] r_V_40_reg_2576;
reg   [0:0] tmp_53_reg_2581;
reg   [0:0] ap_reg_pp0_iter9_tmp_53_reg_2581;
reg   [15:0] tmp_25_reg_2586;
reg   [15:0] ap_reg_pp0_iter9_tmp_25_reg_2586;
wire   [31:0] r_V_43_fu_1393_p3;
reg   [31:0] r_V_43_reg_2591;
reg   [0:0] tmp_54_reg_2596;
reg   [0:0] ap_reg_pp0_iter9_tmp_54_reg_2596;
reg   [15:0] tmp_29_reg_2601;
reg   [15:0] ap_reg_pp0_iter9_tmp_29_reg_2601;
wire  signed [31:0] c01_M_real_V_fu_1418_p1;
wire  signed [31:0] c01_M_imag_V_fu_1421_p1;
wire  signed [31:0] c02_M_real_V_fu_1424_p1;
wire  signed [31:0] c02_M_imag_V_fu_1427_p1;
wire  signed [31:0] c11_M_real_V_fu_1430_p1;
wire  signed [31:0] c11_M_imag_V_fu_1433_p1;
wire  signed [31:0] c12_M_real_V_fu_1436_p1;
wire  signed [31:0] c12_M_imag_V_fu_1439_p1;
reg   [15:0] tmp_15_reg_2654;
reg   [15:0] tmp_19_reg_2659;
reg   [15:0] tmp_23_reg_2664;
reg   [15:0] tmp_27_reg_2669;
wire   [15:0] tmp_18_fu_1587_p3;
reg   [15:0] tmp_18_reg_2674;
reg   [15:0] ap_reg_pp0_iter11_tmp_18_reg_2674;
reg   [15:0] ap_reg_pp0_iter12_tmp_18_reg_2674;
reg   [15:0] ap_reg_pp0_iter13_tmp_18_reg_2674;
reg   [15:0] ap_reg_pp0_iter14_tmp_18_reg_2674;
wire   [15:0] tmp_22_fu_1598_p3;
reg   [15:0] tmp_22_reg_2679;
reg   [15:0] ap_reg_pp0_iter11_tmp_22_reg_2679;
reg   [15:0] ap_reg_pp0_iter12_tmp_22_reg_2679;
reg   [15:0] ap_reg_pp0_iter13_tmp_22_reg_2679;
reg   [15:0] ap_reg_pp0_iter14_tmp_22_reg_2679;
wire   [15:0] tmp_26_fu_1609_p3;
reg   [15:0] tmp_26_reg_2684;
reg   [15:0] ap_reg_pp0_iter11_tmp_26_reg_2684;
reg   [15:0] ap_reg_pp0_iter12_tmp_26_reg_2684;
reg   [15:0] ap_reg_pp0_iter13_tmp_26_reg_2684;
reg   [15:0] ap_reg_pp0_iter14_tmp_26_reg_2684;
wire   [15:0] tmp_30_fu_1620_p3;
reg   [15:0] tmp_30_reg_2689;
reg   [15:0] ap_reg_pp0_iter11_tmp_30_reg_2689;
reg   [15:0] ap_reg_pp0_iter12_tmp_30_reg_2689;
reg   [15:0] ap_reg_pp0_iter13_tmp_30_reg_2689;
reg   [15:0] ap_reg_pp0_iter14_tmp_30_reg_2689;
wire   [31:0] grp_fu_1442_p2;
reg   [31:0] p_i_i2_reg_2694;
wire   [31:0] grp_fu_1447_p2;
reg   [31:0] p_1_i_i2_reg_2699;
wire   [31:0] grp_fu_1452_p2;
reg   [31:0] p_2_i_i2_reg_2704;
wire   [31:0] grp_fu_1457_p2;
reg   [31:0] p_3_i_i2_reg_2709;
wire   [31:0] grp_fu_1462_p2;
reg   [31:0] p_i_i4_reg_2714;
wire   [31:0] grp_fu_1467_p2;
reg   [31:0] p_1_i_i4_reg_2719;
wire   [31:0] grp_fu_1472_p2;
reg   [31:0] p_2_i_i4_reg_2724;
wire   [31:0] grp_fu_1477_p2;
reg   [31:0] p_3_i_i4_reg_2729;
wire   [31:0] grp_fu_1482_p2;
reg   [31:0] p_i_i7_reg_2734;
wire   [31:0] grp_fu_1487_p2;
reg   [31:0] p_1_i_i7_reg_2739;
wire   [31:0] grp_fu_1492_p2;
reg   [31:0] p_2_i_i7_reg_2744;
wire   [31:0] grp_fu_1497_p2;
reg   [31:0] p_3_i_i7_reg_2749;
wire   [31:0] grp_fu_1502_p2;
reg   [31:0] p_i_i9_reg_2754;
wire   [31:0] grp_fu_1507_p2;
reg   [31:0] p_1_i_i9_reg_2759;
wire   [31:0] grp_fu_1512_p2;
reg   [31:0] p_2_i_i9_reg_2764;
wire   [31:0] grp_fu_1517_p2;
reg   [31:0] p_3_i_i9_reg_2769;
wire   [15:0] tmp_55_fu_1658_p1;
reg   [15:0] tmp_55_reg_2774;
wire   [15:0] tmp_56_fu_1662_p1;
reg   [15:0] tmp_56_reg_2779;
wire   [15:0] tmp_57_fu_1666_p1;
reg   [15:0] tmp_57_reg_2784;
wire   [15:0] tmp_58_fu_1670_p1;
reg   [15:0] tmp_58_reg_2789;
wire   [15:0] tmp_59_fu_1674_p1;
reg   [15:0] tmp_59_reg_2794;
wire   [15:0] tmp_60_fu_1678_p1;
reg   [15:0] tmp_60_reg_2799;
wire   [15:0] tmp_61_fu_1682_p1;
reg   [15:0] tmp_61_reg_2804;
wire   [15:0] tmp_62_fu_1686_p1;
reg   [15:0] tmp_62_reg_2809;
wire   [15:0] loc_V_trunc_fu_1694_p2;
reg   [15:0] loc_V_trunc_reg_2814;
wire   [15:0] loc_V_1_trunc_fu_1703_p2;
reg   [15:0] loc_V_1_trunc_reg_2819;
wire   [15:0] loc_V_2_trunc_fu_1712_p2;
reg   [15:0] loc_V_2_trunc_reg_2824;
wire   [15:0] loc_V_3_trunc_fu_1721_p2;
reg   [15:0] loc_V_3_trunc_reg_2829;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
wire   [63:0] tmp_4_fu_602_p1;
wire   [63:0] tmp_43_cast_fu_626_p1;
wire   [63:0] tmp_44_cast_fu_631_p1;
wire   [63:0] tmp_45_cast_fu_1158_p1;
wire   [63:0] tmp_46_cast_fu_1163_p1;
wire   [63:0] tmp_47_cast_fu_1168_p1;
wire   [63:0] tmp_48_cast_fu_1173_p1;
reg    ap_block_pp0_stage0_01001;
wire   [3:0] bw02_num_shift_to_le_fu_446_p4;
wire   [1:0] tmp_38_fu_460_p1;
wire   [8:0] tmp_2_fu_464_p3;
wire   [6:0] tmp_5_fu_476_p3;
wire   [9:0] p_shl2_cast_fu_472_p1;
wire   [9:0] p_shl3_cast_fu_484_p1;
wire   [1:0] tmp_9_fu_494_p4;
wire   [8:0] tmp_10_fu_504_p3;
wire   [6:0] tmp_13_fu_516_p3;
wire   [9:0] p_shl_cast_fu_512_p1;
wire   [9:0] p_shl1_cast_fu_524_p1;
wire   [0:0] tmp_36_fu_420_p3;
wire   [0:0] tmp_37_fu_428_p3;
wire   [3:0] bw20_num_shift_to_le_fu_436_p4;
wire   [3:0] sh_V_3_fu_570_p2;
wire   [3:0] sh_V_1_fu_580_p2;
wire   [9:0] tmp_4_cast_fu_612_p1;
wire   [15:0] r_V_1_fu_775_p2;
wire  signed [30:0] bw02_a01_M_real_V_c_fu_744_p1;
wire   [0:0] tmp_49_fu_768_p3;
wire  signed [30:0] r_V_1_cast_fu_779_p1;
wire   [30:0] r_V_fu_783_p2;
wire   [15:0] r_V_3_fu_796_p2;
wire  signed [30:0] bw02_a01_M_imag_V_c_fu_747_p1;
wire  signed [30:0] r_V_3_cast_fu_800_p1;
wire   [30:0] r_V_2_fu_804_p2;
wire   [15:0] r_V_5_fu_817_p2;
wire  signed [30:0] bw02_a02_M_real_V_c_fu_750_p1;
wire  signed [30:0] r_V_5_cast_fu_821_p1;
wire   [30:0] r_V_4_fu_825_p2;
wire   [15:0] r_V_7_fu_838_p2;
wire  signed [30:0] bw02_a02_M_imag_V_c_fu_753_p1;
wire  signed [30:0] r_V_7_cast_fu_842_p1;
wire   [30:0] r_V_6_fu_846_p2;
wire   [15:0] r_V_9_fu_859_p2;
wire  signed [30:0] bw02_a11_M_real_V_c_fu_756_p1;
wire  signed [30:0] r_V_9_cast_fu_863_p1;
wire   [30:0] r_V_8_fu_867_p2;
wire   [15:0] r_V_15_fu_880_p2;
wire  signed [30:0] bw02_a11_M_imag_V_c_fu_759_p1;
wire  signed [30:0] r_V_15_cast_fu_884_p1;
wire   [30:0] r_V_16_fu_888_p2;
wire   [15:0] r_V_18_fu_901_p2;
wire  signed [30:0] bw02_a12_M_real_V_c_fu_762_p1;
wire  signed [30:0] r_V_18_cast_fu_905_p1;
wire   [30:0] r_V_19_fu_909_p2;
wire   [15:0] r_V_21_fu_922_p2;
wire  signed [30:0] tmp_12_cast5_fu_765_p1;
wire  signed [30:0] r_V_21_cast_fu_926_p1;
wire   [30:0] r_V_22_fu_930_p2;
wire   [7:0] mt1_fu_943_p2;
wire   [7:0] mt2_fu_1000_p2;
wire   [7:0] mt3_fu_1011_p2;
wire  signed [30:0] grp_fu_1022_p0;
wire  signed [7:0] grp_fu_1022_p1;
wire  signed [30:0] grp_fu_1028_p0;
wire  signed [7:0] grp_fu_1028_p1;
wire  signed [30:0] grp_fu_1034_p0;
wire  signed [7:0] grp_fu_1034_p1;
wire  signed [30:0] grp_fu_1040_p0;
wire  signed [7:0] grp_fu_1040_p1;
wire  signed [30:0] grp_fu_1046_p0;
wire  signed [7:0] grp_fu_1046_p1;
wire  signed [30:0] grp_fu_1052_p0;
wire  signed [7:0] grp_fu_1052_p1;
wire  signed [30:0] grp_fu_1058_p0;
wire  signed [7:0] grp_fu_1058_p1;
wire  signed [30:0] grp_fu_1064_p0;
wire  signed [7:0] grp_fu_1064_p1;
wire  signed [30:0] grp_fu_1070_p0;
wire  signed [7:0] grp_fu_1070_p1;
wire  signed [30:0] grp_fu_1076_p0;
wire  signed [7:0] grp_fu_1076_p1;
wire  signed [30:0] grp_fu_1082_p0;
wire  signed [7:0] grp_fu_1082_p1;
wire  signed [30:0] grp_fu_1088_p0;
wire  signed [7:0] grp_fu_1088_p1;
wire  signed [30:0] grp_fu_1094_p0;
wire  signed [7:0] grp_fu_1094_p1;
wire  signed [30:0] grp_fu_1100_p0;
wire  signed [7:0] grp_fu_1100_p1;
wire  signed [30:0] grp_fu_1106_p0;
wire  signed [7:0] grp_fu_1106_p1;
wire  signed [30:0] grp_fu_1112_p0;
wire  signed [7:0] grp_fu_1112_p1;
wire   [7:0] mt4_fu_1178_p2;
wire   [7:0] mt5_fu_1189_p2;
wire   [7:0] mt6_fu_1200_p2;
wire   [7:0] mt_fu_1211_p2;
wire   [23:0] r_V_32_fu_1266_p2;
wire  signed [31:0] p_r_V_cast_fu_1222_p1;
wire  signed [31:0] r_V_32_cast_fu_1270_p1;
wire   [31:0] r_V_33_fu_1274_p2;
wire   [23:0] r_V_35_fu_1304_p2;
wire  signed [31:0] complex_M_imag_V_wr_1_fu_1225_p1;
wire  signed [31:0] r_V_35_cast_fu_1308_p1;
wire   [31:0] r_V_36_fu_1312_p2;
wire   [23:0] r_V_38_fu_1342_p2;
wire  signed [31:0] p_r_V_5_cast_fu_1244_p1;
wire  signed [31:0] r_V_38_cast_fu_1346_p1;
wire   [31:0] r_V_39_fu_1350_p2;
wire   [23:0] r_V_41_fu_1380_p2;
wire  signed [31:0] complex_M_imag_V_wr_3_fu_1247_p1;
wire  signed [31:0] r_V_41_cast_fu_1384_p1;
wire   [31:0] r_V_42_fu_1388_p2;
wire  signed [7:0] grp_fu_1442_p1;
wire  signed [7:0] grp_fu_1447_p1;
wire  signed [7:0] grp_fu_1452_p1;
wire  signed [7:0] grp_fu_1457_p1;
wire  signed [7:0] grp_fu_1462_p1;
wire  signed [7:0] grp_fu_1467_p1;
wire  signed [7:0] grp_fu_1472_p1;
wire  signed [7:0] grp_fu_1477_p1;
wire  signed [7:0] grp_fu_1482_p1;
wire  signed [7:0] grp_fu_1487_p1;
wire  signed [7:0] grp_fu_1492_p1;
wire  signed [7:0] grp_fu_1497_p1;
wire  signed [7:0] grp_fu_1502_p1;
wire  signed [7:0] grp_fu_1507_p1;
wire  signed [7:0] grp_fu_1512_p1;
wire  signed [7:0] grp_fu_1517_p1;
wire   [31:0] p_neg1_fu_1522_p2;
wire   [31:0] p_neg2_fu_1537_p2;
wire   [31:0] p_neg3_fu_1552_p2;
wire   [31:0] p_neg_fu_1567_p2;
wire   [15:0] tmp_16_fu_1582_p2;
wire   [15:0] tmp_20_fu_1593_p2;
wire   [15:0] tmp_24_fu_1604_p2;
wire   [15:0] tmp_28_fu_1615_p2;
wire   [31:0] p_r_V_11_fu_1626_p2;
wire   [31:0] p01_M_imag_V_fu_1630_p2;
wire   [31:0] p_r_V_13_fu_1634_p2;
wire   [31:0] p02_M_imag_V_fu_1638_p2;
wire   [31:0] p_r_V_15_fu_1642_p2;
wire   [31:0] p11_M_imag_V_fu_1646_p2;
wire   [31:0] p_r_V_17_fu_1650_p2;
wire   [31:0] p12_M_imag_V_fu_1654_p2;
wire   [15:0] tmp1_fu_1690_p2;
wire   [15:0] tmp2_fu_1699_p2;
wire   [15:0] tmp3_fu_1708_p2;
wire   [15:0] tmp4_fu_1717_p2;
wire  signed [15:0] grp_fu_1735_p0;
wire  signed [15:0] grp_fu_1741_p0;
wire  signed [15:0] grp_fu_1747_p0;
wire  signed [15:0] grp_fu_1753_p0;
wire  signed [15:0] grp_fu_1759_p0;
wire  signed [7:0] grp_fu_1759_p1;
wire  signed [15:0] grp_fu_1765_p0;
wire  signed [7:0] grp_fu_1765_p1;
wire  signed [15:0] grp_fu_1771_p0;
wire  signed [7:0] grp_fu_1771_p1;
wire  signed [15:0] grp_fu_1777_p0;
wire  signed [7:0] grp_fu_1777_p1;
reg    grp_fu_1022_ce;
reg    grp_fu_1028_ce;
reg    grp_fu_1034_ce;
reg    grp_fu_1040_ce;
reg    grp_fu_1046_ce;
reg    grp_fu_1052_ce;
reg    grp_fu_1058_ce;
reg    grp_fu_1064_ce;
reg    grp_fu_1070_ce;
reg    grp_fu_1076_ce;
reg    grp_fu_1082_ce;
reg    grp_fu_1088_ce;
reg    grp_fu_1094_ce;
reg    grp_fu_1100_ce;
reg    grp_fu_1106_ce;
reg    grp_fu_1112_ce;
reg    grp_fu_1442_ce;
reg    grp_fu_1447_ce;
reg    grp_fu_1452_ce;
reg    grp_fu_1457_ce;
reg    grp_fu_1462_ce;
reg    grp_fu_1467_ce;
reg    grp_fu_1472_ce;
reg    grp_fu_1477_ce;
reg    grp_fu_1482_ce;
reg    grp_fu_1487_ce;
reg    grp_fu_1492_ce;
reg    grp_fu_1497_ce;
reg    grp_fu_1502_ce;
reg    grp_fu_1507_ce;
reg    grp_fu_1512_ce;
reg    grp_fu_1517_ce;
reg    grp_fu_1735_ce;
reg    grp_fu_1741_ce;
reg    grp_fu_1747_ce;
reg    grp_fu_1753_ce;
reg    grp_fu_1759_ce;
reg    grp_fu_1765_ce;
reg    grp_fu_1771_ce;
reg    grp_fu_1777_ce;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 d_i0_V_0_sel_rd = 1'b0;
#0 d_i0_V_0_sel_wr = 1'b0;
#0 d_i0_V_0_state = 2'd0;
#0 d_i1_V_0_sel_rd = 1'b0;
#0 d_i1_V_0_sel_wr = 1'b0;
#0 d_i1_V_0_state = 2'd0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
end

mixer_duc_i_p2MHz #(
    .DataWidth( 8 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
i_p2MHz_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(i_p2MHz_address0),
    .ce0(i_p2MHz_ce0),
    .q0(i_p2MHz_q0)
);

mixer_duc_q_p2MHz #(
    .DataWidth( 8 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
q_p2MHz_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(q_p2MHz_address0),
    .ce0(q_p2MHz_ce0),
    .q0(q_p2MHz_q0)
);

mixer_duc_i_p0n5nbkb #(
    .DataWidth( 8 ),
    .AddressRange( 800 ),
    .AddressWidth( 10 ))
i_p0n5n10n15n20MHz_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(i_p0n5n10n15n20MHz_address0),
    .ce0(i_p0n5n10n15n20MHz_ce0),
    .q0(i_p0n5n10n15n20MHz_q0),
    .address1(i_p0n5n10n15n20MHz_address1),
    .ce1(i_p0n5n10n15n20MHz_ce1),
    .q1(i_p0n5n10n15n20MHz_q1),
    .address2(i_p0n5n10n15n20MHz_address2),
    .ce2(i_p0n5n10n15n20MHz_ce2),
    .q2(i_p0n5n10n15n20MHz_q2),
    .address3(i_p0n5n10n15n20MHz_address3),
    .ce3(i_p0n5n10n15n20MHz_ce3),
    .q3(i_p0n5n10n15n20MHz_q3),
    .address4(i_p0n5n10n15n20MHz_address4),
    .ce4(i_p0n5n10n15n20MHz_ce4),
    .q4(i_p0n5n10n15n20MHz_q4),
    .address5(i_p0n5n10n15n20MHz_address5),
    .ce5(i_p0n5n10n15n20MHz_ce5),
    .q5(i_p0n5n10n15n20MHz_q5)
);

mixer_duc_q_p0n5ncud #(
    .DataWidth( 8 ),
    .AddressRange( 800 ),
    .AddressWidth( 10 ))
q_p0n5n10n15n20MHz_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(q_p0n5n10n15n20MHz_address0),
    .ce0(q_p0n5n10n15n20MHz_ce0),
    .q0(q_p0n5n10n15n20MHz_q0),
    .address1(q_p0n5n10n15n20MHz_address1),
    .ce1(q_p0n5n10n15n20MHz_ce1),
    .q1(q_p0n5n10n15n20MHz_q1),
    .address2(q_p0n5n10n15n20MHz_address2),
    .ce2(q_p0n5n10n15n20MHz_ce2),
    .q2(q_p0n5n10n15n20MHz_q2),
    .address3(q_p0n5n10n15n20MHz_address3),
    .ce3(q_p0n5n10n15n20MHz_ce3),
    .q3(q_p0n5n10n15n20MHz_q3),
    .address4(q_p0n5n10n15n20MHz_address4),
    .ce4(q_p0n5n10n15n20MHz_ce4),
    .q4(q_p0n5n10n15n20MHz_q4),
    .address5(q_p0n5n10n15n20MHz_address5),
    .ce5(q_p0n5n10n15n20MHz_ce5),
    .q5(q_p0n5n10n15n20MHz_q5)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1022_p0),
    .din1(grp_fu_1022_p1),
    .ce(grp_fu_1022_ce),
    .dout(grp_fu_1022_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1028_p0),
    .din1(grp_fu_1028_p1),
    .ce(grp_fu_1028_ce),
    .dout(grp_fu_1028_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1034_p0),
    .din1(grp_fu_1034_p1),
    .ce(grp_fu_1034_ce),
    .dout(grp_fu_1034_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1040_p0),
    .din1(grp_fu_1040_p1),
    .ce(grp_fu_1040_ce),
    .dout(grp_fu_1040_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1046_p0),
    .din1(grp_fu_1046_p1),
    .ce(grp_fu_1046_ce),
    .dout(grp_fu_1046_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1052_p0),
    .din1(grp_fu_1052_p1),
    .ce(grp_fu_1052_ce),
    .dout(grp_fu_1052_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1058_p0),
    .din1(grp_fu_1058_p1),
    .ce(grp_fu_1058_ce),
    .dout(grp_fu_1058_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1064_p0),
    .din1(grp_fu_1064_p1),
    .ce(grp_fu_1064_ce),
    .dout(grp_fu_1064_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1070_p0),
    .din1(grp_fu_1070_p1),
    .ce(grp_fu_1070_ce),
    .dout(grp_fu_1070_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1076_p0),
    .din1(grp_fu_1076_p1),
    .ce(grp_fu_1076_ce),
    .dout(grp_fu_1076_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1082_p0),
    .din1(grp_fu_1082_p1),
    .ce(grp_fu_1082_ce),
    .dout(grp_fu_1082_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1088_p0),
    .din1(grp_fu_1088_p1),
    .ce(grp_fu_1088_ce),
    .dout(grp_fu_1088_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1094_p0),
    .din1(grp_fu_1094_p1),
    .ce(grp_fu_1094_ce),
    .dout(grp_fu_1094_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1100_p0),
    .din1(grp_fu_1100_p1),
    .ce(grp_fu_1100_ce),
    .dout(grp_fu_1100_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1106_p0),
    .din1(grp_fu_1106_p1),
    .ce(grp_fu_1106_ce),
    .dout(grp_fu_1106_p2)
);

mixer_duc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_31sdEe_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1112_p0),
    .din1(grp_fu_1112_p1),
    .ce(grp_fu_1112_ce),
    .dout(grp_fu_1112_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_10_reg_2498),
    .din1(grp_fu_1442_p1),
    .ce(grp_fu_1442_ce),
    .dout(grp_fu_1442_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_1_reg_2504),
    .din1(grp_fu_1447_p1),
    .ce(grp_fu_1447_ce),
    .dout(grp_fu_1447_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_10_reg_2498),
    .din1(grp_fu_1452_p1),
    .ce(grp_fu_1452_ce),
    .dout(grp_fu_1452_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_1_reg_2504),
    .din1(grp_fu_1457_p1),
    .ce(grp_fu_1457_ce),
    .dout(grp_fu_1457_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_12_reg_2510),
    .din1(grp_fu_1462_p1),
    .ce(grp_fu_1462_ce),
    .dout(grp_fu_1462_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_3_reg_2516),
    .din1(grp_fu_1467_p1),
    .ce(grp_fu_1467_ce),
    .dout(grp_fu_1467_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_12_reg_2510),
    .din1(grp_fu_1472_p1),
    .ce(grp_fu_1472_ce),
    .dout(grp_fu_1472_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_3_reg_2516),
    .din1(grp_fu_1477_p1),
    .ce(grp_fu_1477_ce),
    .dout(grp_fu_1477_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_14_reg_2522),
    .din1(grp_fu_1482_p1),
    .ce(grp_fu_1482_ce),
    .dout(grp_fu_1482_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_5_reg_2528),
    .din1(grp_fu_1487_p1),
    .ce(grp_fu_1487_ce),
    .dout(grp_fu_1487_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_14_reg_2522),
    .din1(grp_fu_1492_p1),
    .ce(grp_fu_1492_ce),
    .dout(grp_fu_1492_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_5_reg_2528),
    .din1(grp_fu_1497_p1),
    .ce(grp_fu_1497_ce),
    .dout(grp_fu_1497_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_16_reg_2534),
    .din1(grp_fu_1502_p1),
    .ce(grp_fu_1502_ce),
    .dout(grp_fu_1502_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_7_reg_2540),
    .din1(grp_fu_1507_p1),
    .ce(grp_fu_1507_ce),
    .dout(grp_fu_1507_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_16_reg_2534),
    .din1(grp_fu_1512_p1),
    .ce(grp_fu_1512_ce),
    .dout(grp_fu_1512_p2)
);

mixer_duc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_duc_mul_32seOg_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_7_reg_2540),
    .din1(grp_fu_1517_p1),
    .ce(grp_fu_1517_ce),
    .dout(grp_fu_1517_p2)
);

mixer_duc_mul_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mixer_duc_mul_mulfYi_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1735_p0),
    .din1(ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2086),
    .ce(grp_fu_1735_ce),
    .dout(grp_fu_1735_p2)
);

mixer_duc_mul_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mixer_duc_mul_mulfYi_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1741_p0),
    .din1(r_V_26_reg_2192),
    .ce(grp_fu_1741_ce),
    .dout(grp_fu_1741_p2)
);

mixer_duc_mul_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mixer_duc_mul_mulfYi_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1747_p0),
    .din1(ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2097),
    .ce(grp_fu_1747_ce),
    .dout(grp_fu_1747_p2)
);

mixer_duc_mul_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mixer_duc_mul_mulfYi_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1753_p0),
    .din1(r_V_27_reg_2197),
    .ce(grp_fu_1753_ce),
    .dout(grp_fu_1753_p2)
);

mixer_duc_mac_mulg8j #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mixer_duc_mac_mulg8j_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1759_p0),
    .din1(grp_fu_1759_p1),
    .din2(p_i_i_reg_2310),
    .ce(grp_fu_1759_ce),
    .dout(grp_fu_1759_p3)
);

mixer_duc_mac_mulhbi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mixer_duc_mac_mulhbi_U38(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1765_p0),
    .din1(grp_fu_1765_p1),
    .din2(p_2_i_i_cast_reg_2315),
    .ce(grp_fu_1765_ce),
    .dout(grp_fu_1765_p3)
);

mixer_duc_mac_mulg8j #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mixer_duc_mac_mulg8j_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1771_p0),
    .din1(grp_fu_1771_p1),
    .din2(p_i_i5_reg_2320),
    .ce(grp_fu_1771_ce),
    .dout(grp_fu_1771_p3)
);

mixer_duc_mac_mulhbi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mixer_duc_mac_mulhbi_U40(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1777_p0),
    .din1(grp_fu_1777_p1),
    .din2(p_2_i_i5_cast_reg_2325),
    .ce(grp_fu_1777_ce),
    .dout(grp_fu_1777_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter16 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_i0_V_0_sel_rd <= 1'b0;
    end else begin
        if (((d_i0_V_0_ack_out == 1'b1) & (d_i0_V_0_vld_out == 1'b1))) begin
            d_i0_V_0_sel_rd <= ~d_i0_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_i0_V_0_sel_wr <= 1'b0;
    end else begin
        if (((d_i0_V_0_ack_in == 1'b1) & (d_i0_V_0_vld_in == 1'b1))) begin
            d_i0_V_0_sel_wr <= ~d_i0_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_i0_V_0_state <= 2'd0;
    end else begin
        if ((((d_i0_V_0_vld_in == 1'b0) & (d_i0_V_0_state == 2'd2)) | ((d_i0_V_0_vld_in == 1'b0) & (d_i0_V_0_state == 2'd3) & (d_i0_V_0_ack_out == 1'b1)))) begin
            d_i0_V_0_state <= 2'd2;
        end else if ((((d_i0_V_0_ack_out == 1'b0) & (d_i0_V_0_state == 2'd1)) | ((d_i0_V_0_ack_out == 1'b0) & (d_i0_V_0_state == 2'd3) & (d_i0_V_0_vld_in == 1'b1)))) begin
            d_i0_V_0_state <= 2'd1;
        end else if (((~((d_i0_V_0_vld_in == 1'b0) & (d_i0_V_0_ack_out == 1'b1)) & ~((d_i0_V_0_ack_out == 1'b0) & (d_i0_V_0_vld_in == 1'b1)) & (d_i0_V_0_state == 2'd3)) | ((d_i0_V_0_state == 2'd1) & (d_i0_V_0_ack_out == 1'b1)) | ((d_i0_V_0_state == 2'd2) & (d_i0_V_0_vld_in == 1'b1)))) begin
            d_i0_V_0_state <= 2'd3;
        end else begin
            d_i0_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_i1_V_0_sel_rd <= 1'b0;
    end else begin
        if (((d_i1_V_0_ack_out == 1'b1) & (d_i1_V_0_vld_out == 1'b1))) begin
            d_i1_V_0_sel_rd <= ~d_i1_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_i1_V_0_sel_wr <= 1'b0;
    end else begin
        if (((d_i1_V_0_ack_in == 1'b1) & (d_i1_V_0_vld_in == 1'b1))) begin
            d_i1_V_0_sel_wr <= ~d_i1_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_i1_V_0_state <= 2'd0;
    end else begin
        if ((((d_i1_V_0_state == 2'd2) & (d_i1_V_0_vld_in == 1'b0)) | ((d_i1_V_0_state == 2'd3) & (d_i1_V_0_vld_in == 1'b0) & (d_i1_V_0_ack_out == 1'b1)))) begin
            d_i1_V_0_state <= 2'd2;
        end else if ((((d_i1_V_0_state == 2'd3) & (d_i1_V_0_ack_out == 1'b0) & (d_i1_V_0_vld_in == 1'b1)) | ((d_i1_V_0_state == 2'd1) & (d_i1_V_0_ack_out == 1'b0)))) begin
            d_i1_V_0_state <= 2'd1;
        end else if ((((d_i1_V_0_state == 2'd2) & (d_i1_V_0_vld_in == 1'b1)) | (~((d_i1_V_0_vld_in == 1'b0) & (d_i1_V_0_ack_out == 1'b1)) & ~((d_i1_V_0_ack_out == 1'b0) & (d_i1_V_0_vld_in == 1'b1)) & (d_i1_V_0_state == 2'd3)) | ((d_i1_V_0_state == 2'd1) & (d_i1_V_0_ack_out == 1'b1)))) begin
            d_i1_V_0_state <= 2'd3;
        end else begin
            d_i1_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_590_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_345 <= i_1_fu_596_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        i_reg_345 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter10_tmp_s_reg_1899 <= ap_reg_pp0_iter9_tmp_s_reg_1899;
        ap_reg_pp0_iter11_tmp_18_reg_2674 <= tmp_18_reg_2674;
        ap_reg_pp0_iter11_tmp_22_reg_2679 <= tmp_22_reg_2679;
        ap_reg_pp0_iter11_tmp_26_reg_2684 <= tmp_26_reg_2684;
        ap_reg_pp0_iter11_tmp_30_reg_2689 <= tmp_30_reg_2689;
        ap_reg_pp0_iter11_tmp_s_reg_1899 <= ap_reg_pp0_iter10_tmp_s_reg_1899;
        ap_reg_pp0_iter12_tmp_18_reg_2674 <= ap_reg_pp0_iter11_tmp_18_reg_2674;
        ap_reg_pp0_iter12_tmp_22_reg_2679 <= ap_reg_pp0_iter11_tmp_22_reg_2679;
        ap_reg_pp0_iter12_tmp_26_reg_2684 <= ap_reg_pp0_iter11_tmp_26_reg_2684;
        ap_reg_pp0_iter12_tmp_30_reg_2689 <= ap_reg_pp0_iter11_tmp_30_reg_2689;
        ap_reg_pp0_iter12_tmp_s_reg_1899 <= ap_reg_pp0_iter11_tmp_s_reg_1899;
        ap_reg_pp0_iter13_tmp_18_reg_2674 <= ap_reg_pp0_iter12_tmp_18_reg_2674;
        ap_reg_pp0_iter13_tmp_22_reg_2679 <= ap_reg_pp0_iter12_tmp_22_reg_2679;
        ap_reg_pp0_iter13_tmp_26_reg_2684 <= ap_reg_pp0_iter12_tmp_26_reg_2684;
        ap_reg_pp0_iter13_tmp_30_reg_2689 <= ap_reg_pp0_iter12_tmp_30_reg_2689;
        ap_reg_pp0_iter13_tmp_s_reg_1899 <= ap_reg_pp0_iter12_tmp_s_reg_1899;
        ap_reg_pp0_iter14_tmp_18_reg_2674 <= ap_reg_pp0_iter13_tmp_18_reg_2674;
        ap_reg_pp0_iter14_tmp_22_reg_2679 <= ap_reg_pp0_iter13_tmp_22_reg_2679;
        ap_reg_pp0_iter14_tmp_26_reg_2684 <= ap_reg_pp0_iter13_tmp_26_reg_2684;
        ap_reg_pp0_iter14_tmp_30_reg_2689 <= ap_reg_pp0_iter13_tmp_30_reg_2689;
        ap_reg_pp0_iter14_tmp_s_reg_1899 <= ap_reg_pp0_iter13_tmp_s_reg_1899;
        ap_reg_pp0_iter15_tmp_s_reg_1899 <= ap_reg_pp0_iter14_tmp_s_reg_1899;
        ap_reg_pp0_iter2_i_p2MHz_load_reg_2024 <= i_p2MHz_load_reg_2024;
        ap_reg_pp0_iter2_p_Result_1_reg_1966 <= p_Result_1_reg_1966;
        ap_reg_pp0_iter2_p_Result_2_reg_1971 <= p_Result_2_reg_1971;
        ap_reg_pp0_iter2_p_Result_s_reg_1961 <= p_Result_s_reg_1961;
        ap_reg_pp0_iter2_tmp_47_reg_1956 <= tmp_47_reg_1956;
        ap_reg_pp0_iter2_tmp_4_cast4_reg_1908[7 : 0] <= ap_reg_pp0_iter1_tmp_4_cast4_reg_1908[7 : 0];
        ap_reg_pp0_iter2_tmp_s_reg_1899 <= ap_reg_pp0_iter1_tmp_s_reg_1899;
        ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2097 <= i_p0n5n10n15n20MHz_l_1_reg_2097;
        ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2086 <= i_p0n5n10n15n20MHz_l_reg_2086;
        ap_reg_pp0_iter3_p_Result_1_reg_1966 <= ap_reg_pp0_iter2_p_Result_1_reg_1966;
        ap_reg_pp0_iter3_p_Result_2_reg_1971 <= ap_reg_pp0_iter2_p_Result_2_reg_1971;
        ap_reg_pp0_iter3_p_Result_s_reg_1961 <= ap_reg_pp0_iter2_p_Result_s_reg_1961;
        ap_reg_pp0_iter3_tmp_47_reg_1956 <= ap_reg_pp0_iter2_tmp_47_reg_1956;
        ap_reg_pp0_iter3_tmp_4_cast4_reg_1908[7 : 0] <= ap_reg_pp0_iter2_tmp_4_cast4_reg_1908[7 : 0];
        ap_reg_pp0_iter3_tmp_s_reg_1899 <= ap_reg_pp0_iter2_tmp_s_reg_1899;
        ap_reg_pp0_iter4_p_Result_2_reg_1971 <= ap_reg_pp0_iter3_p_Result_2_reg_1971;
        ap_reg_pp0_iter4_p_Result_s_reg_1961 <= ap_reg_pp0_iter3_p_Result_s_reg_1961;
        ap_reg_pp0_iter4_tmp_4_cast4_reg_1908[7 : 0] <= ap_reg_pp0_iter3_tmp_4_cast4_reg_1908[7 : 0];
        ap_reg_pp0_iter4_tmp_s_reg_1899 <= ap_reg_pp0_iter3_tmp_s_reg_1899;
        ap_reg_pp0_iter5_tmp_s_reg_1899 <= ap_reg_pp0_iter4_tmp_s_reg_1899;
        ap_reg_pp0_iter6_tmp_s_reg_1899 <= ap_reg_pp0_iter5_tmp_s_reg_1899;
        ap_reg_pp0_iter7_tmp_s_reg_1899 <= ap_reg_pp0_iter6_tmp_s_reg_1899;
        ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_2_reg_2330 <= i_p0n5n10n15n20MHz_l_2_reg_2330;
        ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_3_reg_2341 <= i_p0n5n10n15n20MHz_l_3_reg_2341;
        ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_4_reg_2352 <= i_p0n5n10n15n20MHz_l_4_reg_2352;
        ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_5_reg_2363 <= i_p0n5n10n15n20MHz_l_5_reg_2363;
        ap_reg_pp0_iter8_tmp_s_reg_1899 <= ap_reg_pp0_iter7_tmp_s_reg_1899;
        ap_reg_pp0_iter9_tmp_17_reg_2556 <= tmp_17_reg_2556;
        ap_reg_pp0_iter9_tmp_21_reg_2571 <= tmp_21_reg_2571;
        ap_reg_pp0_iter9_tmp_25_reg_2586 <= tmp_25_reg_2586;
        ap_reg_pp0_iter9_tmp_29_reg_2601 <= tmp_29_reg_2601;
        ap_reg_pp0_iter9_tmp_51_reg_2551 <= tmp_51_reg_2551;
        ap_reg_pp0_iter9_tmp_52_reg_2566 <= tmp_52_reg_2566;
        ap_reg_pp0_iter9_tmp_53_reg_2581 <= tmp_53_reg_2581;
        ap_reg_pp0_iter9_tmp_54_reg_2596 <= tmp_54_reg_2596;
        ap_reg_pp0_iter9_tmp_s_reg_1899 <= ap_reg_pp0_iter8_tmp_s_reg_1899;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_tmp_4_cast4_reg_1908[7 : 0] <= tmp_4_cast4_reg_1908[7 : 0];
        ap_reg_pp0_iter1_tmp_s_reg_1899 <= tmp_s_reg_1899;
        tmp_s_reg_1899 <= tmp_s_fu_590_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter6_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        complex_M_imag_V_wr_2_reg_2432 <= grp_fu_1777_p3;
        complex_M_imag_V_wr_reg_2380 <= grp_fu_1765_p3;
        i_p0n5n10n15n20MHz_l_2_reg_2330 <= i_p0n5n10n15n20MHz_q2;
        i_p0n5n10n15n20MHz_l_3_reg_2341 <= i_p0n5n10n15n20MHz_q3;
        i_p0n5n10n15n20MHz_l_4_reg_2352 <= i_p0n5n10n15n20MHz_q4;
        i_p0n5n10n15n20MHz_l_5_reg_2363 <= i_p0n5n10n15n20MHz_q5;
        p_r_V_5_reg_2426 <= grp_fu_1771_p3;
        p_r_V_reg_2374 <= grp_fu_1759_p3;
        q_p0n5n10n15n20MHz_l_2_reg_2335 <= q_p0n5n10n15n20MHz_q2;
        q_p0n5n10n15n20MHz_l_3_reg_2346 <= q_p0n5n10n15n20MHz_q3;
        q_p0n5n10n15n20MHz_l_4_reg_2357 <= q_p0n5n10n15n20MHz_q4;
        q_p0n5n10n15n20MHz_l_5_reg_2368 <= q_p0n5n10n15n20MHz_q5;
    end
end

always @ (posedge ap_clk) begin
    if ((d_i0_V_0_load_A == 1'b1)) begin
        d_i0_V_0_payload_A <= d_i0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((d_i0_V_0_load_B == 1'b1)) begin
        d_i0_V_0_payload_B <= d_i0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((d_i1_V_0_load_A == 1'b1)) begin
        d_i1_V_0_payload_A <= d_i1_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((d_i1_V_0_load_B == 1'b1)) begin
        d_i1_V_0_payload_B <= d_i1_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        i_p0n5n10n15n20MHz_l_1_reg_2097 <= i_p0n5n10n15n20MHz_q1;
        i_p0n5n10n15n20MHz_l_reg_2086 <= i_p0n5n10n15n20MHz_q0;
        q_p0n5n10n15n20MHz_l_1_reg_2102 <= q_p0n5n10n15n20MHz_q1;
        q_p0n5n10n15n20MHz_l_reg_2091 <= q_p0n5n10n15n20MHz_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_p2MHz_load_reg_2024 <= i_p2MHz_q0;
        p_Result_1_reg_1966 <= {{d_i0_V_0_data_out[47:32]}};
        p_Result_2_reg_1971 <= {{d_i0_V_0_data_out[63:48]}};
        p_Result_3_reg_1982 <= {{d_i1_V_0_data_out[31:16]}};
        p_Result_4_reg_1988 <= {{d_i1_V_0_data_out[47:32]}};
        p_Result_5_reg_1994 <= {{d_i1_V_0_data_out[63:48]}};
        p_Result_6_reg_2000 <= {{d_i1_V_0_data_out[79:64]}};
        p_Result_7_reg_2006 <= {{d_i1_V_0_data_out[95:80]}};
        p_Result_8_reg_2012 <= {{d_i1_V_0_data_out[111:96]}};
        p_Result_9_reg_2018 <= {{d_i1_V_0_data_out[127:112]}};
        p_Result_s_reg_1961 <= {{d_i0_V_0_data_out[31:16]}};
        q_p2MHz_load_reg_2029 <= q_p2MHz_q0;
        tmp_47_reg_1956 <= tmp_47_fu_636_p1;
        tmp_48_reg_1976 <= tmp_48_fu_670_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter14_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        loc_V_1_trunc_reg_2819 <= loc_V_1_trunc_fu_1703_p2;
        loc_V_2_trunc_reg_2824 <= loc_V_2_trunc_fu_1712_p2;
        loc_V_3_trunc_reg_2829 <= loc_V_3_trunc_fu_1721_p2;
        loc_V_trunc_reg_2814 <= loc_V_trunc_fu_1694_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter6_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_1_i_i1_reg_2391 <= grp_fu_1028_p2;
        p_1_i_i3_reg_2411 <= grp_fu_1052_p2;
        p_1_i_i6_reg_2443 <= grp_fu_1076_p2;
        p_1_i_i8_reg_2463 <= grp_fu_1100_p2;
        p_2_i_i1_reg_2396 <= grp_fu_1034_p2;
        p_2_i_i3_reg_2416 <= grp_fu_1058_p2;
        p_2_i_i6_reg_2448 <= grp_fu_1082_p2;
        p_2_i_i8_reg_2468 <= grp_fu_1106_p2;
        p_3_i_i1_reg_2401 <= grp_fu_1040_p2;
        p_3_i_i3_reg_2421 <= grp_fu_1064_p2;
        p_3_i_i6_reg_2453 <= grp_fu_1088_p2;
        p_3_i_i8_reg_2473 <= grp_fu_1112_p2;
        p_i_i1_reg_2386 <= grp_fu_1022_p2;
        p_i_i3_reg_2406 <= grp_fu_1046_p2;
        p_i_i6_reg_2438 <= grp_fu_1070_p2;
        p_i_i8_reg_2458 <= grp_fu_1094_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter12_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_1_i_i2_reg_2699 <= grp_fu_1447_p2;
        p_1_i_i4_reg_2719 <= grp_fu_1467_p2;
        p_1_i_i7_reg_2739 <= grp_fu_1487_p2;
        p_1_i_i9_reg_2759 <= grp_fu_1507_p2;
        p_2_i_i2_reg_2704 <= grp_fu_1452_p2;
        p_2_i_i4_reg_2724 <= grp_fu_1472_p2;
        p_2_i_i7_reg_2744 <= grp_fu_1492_p2;
        p_2_i_i9_reg_2764 <= grp_fu_1512_p2;
        p_3_i_i2_reg_2709 <= grp_fu_1457_p2;
        p_3_i_i4_reg_2729 <= grp_fu_1477_p2;
        p_3_i_i7_reg_2749 <= grp_fu_1497_p2;
        p_3_i_i9_reg_2769 <= grp_fu_1517_p2;
        p_i_i2_reg_2694 <= grp_fu_1442_p2;
        p_i_i4_reg_2714 <= grp_fu_1462_p2;
        p_i_i7_reg_2734 <= grp_fu_1482_p2;
        p_i_i9_reg_2754 <= grp_fu_1502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter5_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_2_i_i5_cast_reg_2325 <= grp_fu_1753_p2;
        p_2_i_i_cast_reg_2315 <= grp_fu_1741_p2;
        p_i_i5_reg_2320 <= grp_fu_1747_p2;
        p_i_i_reg_2310 <= grp_fu_1735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter7_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_r_M_imag_V_1_reg_2504 <= p_r_M_imag_V_1_fu_1232_p2;
        p_r_M_imag_V_3_reg_2516 <= p_r_M_imag_V_3_fu_1240_p2;
        p_r_M_imag_V_5_reg_2528 <= p_r_M_imag_V_5_fu_1254_p2;
        p_r_M_imag_V_7_reg_2540 <= p_r_M_imag_V_7_fu_1262_p2;
        p_r_V_10_reg_2498 <= p_r_V_10_fu_1228_p2;
        p_r_V_12_reg_2510 <= p_r_V_12_fu_1236_p2;
        p_r_V_14_reg_2522 <= p_r_V_14_fu_1250_p2;
        p_r_V_16_reg_2534 <= p_r_V_16_fu_1258_p2;
        r_V_28_reg_2478 <= r_V_28_fu_1183_p3;
        r_V_29_reg_2483 <= r_V_29_fu_1194_p3;
        r_V_30_reg_2488 <= r_V_30_fu_1205_p3;
        r_V_31_reg_2493 <= r_V_31_fu_1216_p3;
        r_V_34_reg_2546 <= r_V_34_fu_1279_p3;
        r_V_37_reg_2561 <= r_V_37_fu_1317_p3;
        r_V_40_reg_2576 <= r_V_40_fu_1355_p3;
        r_V_43_reg_2591 <= r_V_43_fu_1393_p3;
        tmp_17_reg_2556 <= {{r_V_34_fu_1279_p3[21:6]}};
        tmp_21_reg_2571 <= {{r_V_37_fu_1317_p3[21:6]}};
        tmp_25_reg_2586 <= {{r_V_40_fu_1355_p3[21:6]}};
        tmp_29_reg_2601 <= {{r_V_43_fu_1393_p3[21:6]}};
        tmp_51_reg_2551 <= r_V_34_fu_1279_p3[32'd31];
        tmp_52_reg_2566 <= r_V_37_fu_1317_p3[32'd31];
        tmp_53_reg_2581 <= r_V_40_fu_1355_p3[32'd31];
        tmp_54_reg_2596 <= r_V_43_fu_1393_p3[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_24_reg_2076 <= r_V_24_fu_948_p3;
        r_V_25_reg_2081 <= r_V_25_fu_954_p3;
        r_V_44_reg_2036 <= r_V_44_fu_788_p3;
        r_V_45_reg_2041 <= r_V_45_fu_809_p3;
        r_V_46_reg_2046 <= r_V_46_fu_830_p3;
        r_V_47_reg_2051 <= r_V_47_fu_851_p3;
        r_V_48_reg_2056 <= r_V_48_fu_872_p3;
        r_V_49_reg_2061 <= r_V_49_fu_893_p3;
        r_V_50_reg_2066 <= r_V_50_fu_914_p3;
        r_V_51_reg_2071 <= r_V_51_fu_935_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_26_reg_2192 <= r_V_26_fu_1005_p3;
        r_V_27_reg_2197 <= r_V_27_fu_1016_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_12_reg_2232 <= tmp_12_fu_1133_p1;
        tmp_8_reg_2226 <= tmp_8_fu_1130_p1;
        val_assign_1_cast_reg_2214 <= val_assign_1_cast_fu_1124_p1;
        val_assign_2_cast_reg_2220 <= val_assign_2_cast_fu_1127_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_51_reg_2551 == 1'd1) & (ap_reg_pp0_iter8_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_15_reg_2654 <= {{p_neg1_fu_1522_p2[21:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter9_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_18_reg_2674 <= tmp_18_fu_1587_p3;
        tmp_22_reg_2679 <= tmp_22_fu_1598_p3;
        tmp_26_reg_2684 <= tmp_26_fu_1609_p3;
        tmp_30_reg_2689 <= tmp_30_fu_1620_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_52_reg_2566 == 1'd1) & (ap_reg_pp0_iter8_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_19_reg_2659 <= {{p_neg2_fu_1537_p2[21:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_53_reg_2581 == 1'd1) & (ap_reg_pp0_iter8_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_23_reg_2664 <= {{p_neg3_fu_1552_p2[21:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_54_reg_2596 == 1'd1) & (ap_reg_pp0_iter8_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_27_reg_2669 <= {{p_neg_fu_1567_p2[21:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_590_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_41_reg_1916 <= tmp_41_fu_616_p2;
        tmp_42_reg_1921 <= tmp_42_fu_621_p2;
        tmp_4_cast4_reg_1908[7 : 0] <= tmp_4_cast4_fu_608_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_43_reg_2238 <= tmp_43_fu_1136_p2;
        tmp_44_reg_2243 <= tmp_44_fu_1140_p2;
        tmp_45_reg_2248 <= tmp_45_fu_1144_p2;
        tmp_46_reg_2253 <= tmp_46_fu_1148_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter13_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_55_reg_2774 <= tmp_55_fu_1658_p1;
        tmp_56_reg_2779 <= tmp_56_fu_1662_p1;
        tmp_57_reg_2784 <= tmp_57_fu_1666_p1;
        tmp_58_reg_2789 <= tmp_58_fu_1670_p1;
        tmp_59_reg_2794 <= tmp_59_fu_1674_p1;
        tmp_60_reg_2799 <= tmp_60_fu_1678_p1;
        tmp_61_reg_2804 <= tmp_61_fu_1682_p1;
        tmp_62_reg_2809 <= tmp_62_fu_1686_p1;
    end
end

always @ (*) begin
    if ((tmp_s_fu_590_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_i0_V_0_ack_out = 1'b1;
    end else begin
        d_i0_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((d_i0_V_0_sel == 1'b1)) begin
        d_i0_V_0_data_out = d_i0_V_0_payload_B;
    end else begin
        d_i0_V_0_data_out = d_i0_V_0_payload_A;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_i0_V_TDATA_blk_n = d_i0_V_0_state[1'd0];
    end else begin
        d_i0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_i1_V_0_ack_out = 1'b1;
    end else begin
        d_i1_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((d_i1_V_0_sel == 1'b1)) begin
        d_i1_V_0_data_out = d_i1_V_0_payload_B;
    end else begin
        d_i1_V_0_data_out = d_i1_V_0_payload_A;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_i1_V_TDATA_blk_n = d_i1_V_0_state[1'd0];
    end else begin
        d_i1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter15_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        d_o_V_blk_n = d_o_V_full_n;
    end else begin
        d_o_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter15_tmp_s_reg_1899 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        d_o_V_write = 1'b1;
    end else begin
        d_o_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1022_ce = 1'b1;
    end else begin
        grp_fu_1022_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1028_ce = 1'b1;
    end else begin
        grp_fu_1028_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1034_ce = 1'b1;
    end else begin
        grp_fu_1034_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1040_ce = 1'b1;
    end else begin
        grp_fu_1040_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1046_ce = 1'b1;
    end else begin
        grp_fu_1046_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1052_ce = 1'b1;
    end else begin
        grp_fu_1052_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1058_ce = 1'b1;
    end else begin
        grp_fu_1058_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1064_ce = 1'b1;
    end else begin
        grp_fu_1064_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1070_ce = 1'b1;
    end else begin
        grp_fu_1070_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1076_ce = 1'b1;
    end else begin
        grp_fu_1076_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1082_ce = 1'b1;
    end else begin
        grp_fu_1082_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1088_ce = 1'b1;
    end else begin
        grp_fu_1088_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1094_ce = 1'b1;
    end else begin
        grp_fu_1094_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1100_ce = 1'b1;
    end else begin
        grp_fu_1100_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1106_ce = 1'b1;
    end else begin
        grp_fu_1106_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1112_ce = 1'b1;
    end else begin
        grp_fu_1112_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1442_ce = 1'b1;
    end else begin
        grp_fu_1442_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1447_ce = 1'b1;
    end else begin
        grp_fu_1447_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1452_ce = 1'b1;
    end else begin
        grp_fu_1452_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1457_ce = 1'b1;
    end else begin
        grp_fu_1457_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1462_ce = 1'b1;
    end else begin
        grp_fu_1462_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1467_ce = 1'b1;
    end else begin
        grp_fu_1467_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1472_ce = 1'b1;
    end else begin
        grp_fu_1472_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1477_ce = 1'b1;
    end else begin
        grp_fu_1477_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1482_ce = 1'b1;
    end else begin
        grp_fu_1482_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1487_ce = 1'b1;
    end else begin
        grp_fu_1487_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1492_ce = 1'b1;
    end else begin
        grp_fu_1492_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1497_ce = 1'b1;
    end else begin
        grp_fu_1497_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1502_ce = 1'b1;
    end else begin
        grp_fu_1502_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1507_ce = 1'b1;
    end else begin
        grp_fu_1507_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1512_ce = 1'b1;
    end else begin
        grp_fu_1512_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1517_ce = 1'b1;
    end else begin
        grp_fu_1517_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1735_ce = 1'b1;
    end else begin
        grp_fu_1735_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1741_ce = 1'b1;
    end else begin
        grp_fu_1741_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1747_ce = 1'b1;
    end else begin
        grp_fu_1747_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1753_ce = 1'b1;
    end else begin
        grp_fu_1753_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1759_ce = 1'b1;
    end else begin
        grp_fu_1759_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1765_ce = 1'b1;
    end else begin
        grp_fu_1765_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1771_ce = 1'b1;
    end else begin
        grp_fu_1771_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1777_ce = 1'b1;
    end else begin
        grp_fu_1777_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_p0n5n10n15n20MHz_ce0 = 1'b1;
    end else begin
        i_p0n5n10n15n20MHz_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_p0n5n10n15n20MHz_ce1 = 1'b1;
    end else begin
        i_p0n5n10n15n20MHz_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        i_p0n5n10n15n20MHz_ce2 = 1'b1;
    end else begin
        i_p0n5n10n15n20MHz_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        i_p0n5n10n15n20MHz_ce3 = 1'b1;
    end else begin
        i_p0n5n10n15n20MHz_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        i_p0n5n10n15n20MHz_ce4 = 1'b1;
    end else begin
        i_p0n5n10n15n20MHz_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        i_p0n5n10n15n20MHz_ce5 = 1'b1;
    end else begin
        i_p0n5n10n15n20MHz_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_p2MHz_ce0 = 1'b1;
    end else begin
        i_p2MHz_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_p0n5n10n15n20MHz_ce0 = 1'b1;
    end else begin
        q_p0n5n10n15n20MHz_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_p0n5n10n15n20MHz_ce1 = 1'b1;
    end else begin
        q_p0n5n10n15n20MHz_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        q_p0n5n10n15n20MHz_ce2 = 1'b1;
    end else begin
        q_p0n5n10n15n20MHz_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        q_p0n5n10n15n20MHz_ce3 = 1'b1;
    end else begin
        q_p0n5n10n15n20MHz_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        q_p0n5n10n15n20MHz_ce4 = 1'b1;
    end else begin
        q_p0n5n10n15n20MHz_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        q_p0n5n10n15n20MHz_ce5 = 1'b1;
    end else begin
        q_p0n5n10n15n20MHz_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_p2MHz_ce0 = 1'b1;
    end else begin
        q_p2MHz_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_s_fu_590_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter15 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter16 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_s_fu_590_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter15 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter16 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_reg_pp0_iter15_tmp_s_reg_1899 == 1'd0) & (d_o_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_s_reg_1899 == 1'd0) & (d_i1_V_0_vld_out == 1'b0)) | ((tmp_s_reg_1899 == 1'd0) & (d_i0_V_0_vld_out == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_reg_pp0_iter15_tmp_s_reg_1899 == 1'd0) & (d_o_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_s_reg_1899 == 1'd0) & (d_i1_V_0_vld_out == 1'b0)) | ((tmp_s_reg_1899 == 1'd0) & (d_i0_V_0_vld_out == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_reg_pp0_iter15_tmp_s_reg_1899 == 1'd0) & (d_o_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_s_reg_1899 == 1'd0) & (d_i1_V_0_vld_out == 1'b0)) | ((tmp_s_reg_1899 == 1'd0) & (d_i0_V_0_vld_out == 1'b0)))));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp0_stage0_iter16 = ((ap_reg_pp0_iter15_tmp_s_reg_1899 == 1'd0) & (d_o_V_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((tmp_s_reg_1899 == 1'd0) & (d_i1_V_0_vld_out == 1'b0)) | ((tmp_s_reg_1899 == 1'd0) & (d_i0_V_0_vld_out == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign b0_M_imag_V_fu_994_p1 = $signed(r_V_24_reg_2076);

assign b1_M_imag_V_fu_997_p1 = $signed(r_V_25_reg_2081);

assign b1_M_real_V_fu_991_p1 = $signed(ap_reg_pp0_iter2_i_p2MHz_load_reg_2024);

assign bw02_a01_M_imag_V_c_fu_747_p1 = $signed(p_Result_3_reg_1982);

assign bw02_a01_M_real_V_c_fu_744_p1 = $signed(tmp_48_reg_1976);

assign bw02_a02_M_imag_V_c_fu_753_p1 = $signed(p_Result_5_reg_1994);

assign bw02_a02_M_real_V_c_fu_750_p1 = $signed(p_Result_4_reg_1988);

assign bw02_a11_M_imag_V_c_fu_759_p1 = $signed(p_Result_7_reg_2006);

assign bw02_a11_M_real_V_c_fu_756_p1 = $signed(p_Result_6_reg_2000);

assign bw02_a12_M_real_V_c_fu_762_p1 = $signed(p_Result_8_reg_2012);

assign bw02_num_shift_to_le_fu_446_p4 = {{cfg0_V[27:24]}};

assign bw20_a0_M_imag_V_ca_fu_1152_p1 = $signed(ap_reg_pp0_iter4_p_Result_s_reg_1961);

assign bw20_a0_M_real_V_ca_fu_1118_p1 = $signed(ap_reg_pp0_iter3_tmp_47_reg_1956);

assign bw20_a1_M_imag_V_ca_fu_1155_p1 = $signed(ap_reg_pp0_iter4_p_Result_2_reg_1971);

assign bw20_a1_M_real_V_ca_fu_1121_p1 = $signed(ap_reg_pp0_iter3_p_Result_1_reg_1966);

assign bw20_num_shift_to_le_fu_436_p4 = {{cfg0_V[31:28]}};

assign c01_M_imag_V_fu_1421_p1 = $signed(r_V_28_reg_2478);

assign c01_M_real_V_fu_1418_p1 = $signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_2_reg_2330);

assign c02_M_imag_V_fu_1427_p1 = $signed(r_V_29_reg_2483);

assign c02_M_real_V_fu_1424_p1 = $signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_3_reg_2341);

assign c11_M_imag_V_fu_1433_p1 = $signed(r_V_30_reg_2488);

assign c11_M_real_V_fu_1430_p1 = $signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_4_reg_2352);

assign c12_M_imag_V_fu_1439_p1 = $signed(r_V_31_reg_2493);

assign c12_M_real_V_fu_1436_p1 = $signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_5_reg_2363);

assign complex_M_imag_V_wr_1_fu_1225_p1 = complex_M_imag_V_wr_reg_2380;

assign complex_M_imag_V_wr_3_fu_1247_p1 = complex_M_imag_V_wr_2_reg_2432;

assign d_i0_V_0_ack_in = d_i0_V_0_state[1'd1];

assign d_i0_V_0_load_A = (~d_i0_V_0_sel_wr & d_i0_V_0_state_cmp_full);

assign d_i0_V_0_load_B = (d_i0_V_0_state_cmp_full & d_i0_V_0_sel_wr);

assign d_i0_V_0_sel = d_i0_V_0_sel_rd;

assign d_i0_V_0_state_cmp_full = ((d_i0_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign d_i0_V_0_vld_in = d_i0_V_TVALID;

assign d_i0_V_0_vld_out = d_i0_V_0_state[1'd0];

assign d_i0_V_TREADY = d_i0_V_0_state[1'd1];

assign d_i1_V_0_ack_in = d_i1_V_0_state[1'd1];

assign d_i1_V_0_load_A = (~d_i1_V_0_sel_wr & d_i1_V_0_state_cmp_full);

assign d_i1_V_0_load_B = (d_i1_V_0_state_cmp_full & d_i1_V_0_sel_wr);

assign d_i1_V_0_sel = d_i1_V_0_sel_rd;

assign d_i1_V_0_state_cmp_full = ((d_i1_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign d_i1_V_0_vld_in = d_i1_V_TVALID;

assign d_i1_V_0_vld_out = d_i1_V_0_state[1'd0];

assign d_i1_V_TREADY = d_i1_V_0_state[1'd1];

assign d_o_V_din = {{{{loc_V_3_trunc_reg_2829}, {loc_V_2_trunc_reg_2824}}, {loc_V_1_trunc_reg_2819}}, {loc_V_trunc_reg_2814}};

assign grp_fu_1022_p0 = r_V_44_cast_fu_967_p1;

assign grp_fu_1022_p1 = b1_M_real_V_fu_991_p1;

assign grp_fu_1028_p0 = r_V_45_cast_fu_970_p1;

assign grp_fu_1028_p1 = b0_M_imag_V_fu_994_p1;

assign grp_fu_1034_p0 = r_V_44_cast_fu_967_p1;

assign grp_fu_1034_p1 = b0_M_imag_V_fu_994_p1;

assign grp_fu_1040_p0 = r_V_45_cast_fu_970_p1;

assign grp_fu_1040_p1 = b1_M_real_V_fu_991_p1;

assign grp_fu_1046_p0 = r_V_46_cast_fu_973_p1;

assign grp_fu_1046_p1 = b1_M_real_V_fu_991_p1;

assign grp_fu_1052_p0 = r_V_47_cast_fu_976_p1;

assign grp_fu_1052_p1 = b0_M_imag_V_fu_994_p1;

assign grp_fu_1058_p0 = r_V_46_cast_fu_973_p1;

assign grp_fu_1058_p1 = b0_M_imag_V_fu_994_p1;

assign grp_fu_1064_p0 = r_V_47_cast_fu_976_p1;

assign grp_fu_1064_p1 = b1_M_real_V_fu_991_p1;

assign grp_fu_1070_p0 = r_V_48_cast_fu_979_p1;

assign grp_fu_1070_p1 = b1_M_real_V_fu_991_p1;

assign grp_fu_1076_p0 = r_V_49_cast_fu_982_p1;

assign grp_fu_1076_p1 = b1_M_imag_V_fu_997_p1;

assign grp_fu_1082_p0 = r_V_48_cast_fu_979_p1;

assign grp_fu_1082_p1 = b1_M_imag_V_fu_997_p1;

assign grp_fu_1088_p0 = r_V_49_cast_fu_982_p1;

assign grp_fu_1088_p1 = b1_M_real_V_fu_991_p1;

assign grp_fu_1094_p0 = r_V_50_cast_fu_985_p1;

assign grp_fu_1094_p1 = b1_M_real_V_fu_991_p1;

assign grp_fu_1100_p0 = r_V_51_cast_fu_988_p1;

assign grp_fu_1100_p1 = b1_M_imag_V_fu_997_p1;

assign grp_fu_1106_p0 = r_V_50_cast_fu_985_p1;

assign grp_fu_1106_p1 = b1_M_imag_V_fu_997_p1;

assign grp_fu_1112_p0 = r_V_51_cast_fu_988_p1;

assign grp_fu_1112_p1 = b1_M_real_V_fu_991_p1;

assign grp_fu_1442_p1 = c01_M_real_V_fu_1418_p1;

assign grp_fu_1447_p1 = c01_M_imag_V_fu_1421_p1;

assign grp_fu_1452_p1 = c01_M_imag_V_fu_1421_p1;

assign grp_fu_1457_p1 = c01_M_real_V_fu_1418_p1;

assign grp_fu_1462_p1 = c02_M_real_V_fu_1424_p1;

assign grp_fu_1467_p1 = c02_M_imag_V_fu_1427_p1;

assign grp_fu_1472_p1 = c02_M_imag_V_fu_1427_p1;

assign grp_fu_1477_p1 = c02_M_real_V_fu_1424_p1;

assign grp_fu_1482_p1 = c11_M_real_V_fu_1430_p1;

assign grp_fu_1487_p1 = c11_M_imag_V_fu_1433_p1;

assign grp_fu_1492_p1 = c11_M_imag_V_fu_1433_p1;

assign grp_fu_1497_p1 = c11_M_real_V_fu_1430_p1;

assign grp_fu_1502_p1 = c12_M_real_V_fu_1436_p1;

assign grp_fu_1507_p1 = c12_M_imag_V_fu_1439_p1;

assign grp_fu_1512_p1 = c12_M_imag_V_fu_1439_p1;

assign grp_fu_1517_p1 = c12_M_real_V_fu_1436_p1;

assign grp_fu_1735_p0 = bw20_a0_M_real_V_ca_fu_1118_p1;

assign grp_fu_1741_p0 = bw20_a0_M_real_V_ca_fu_1118_p1;

assign grp_fu_1747_p0 = bw20_a1_M_real_V_ca_fu_1121_p1;

assign grp_fu_1753_p0 = bw20_a1_M_real_V_ca_fu_1121_p1;

assign grp_fu_1759_p0 = bw20_a0_M_imag_V_ca_fu_1152_p1;

assign grp_fu_1759_p1 = tmp_8_reg_2226;

assign grp_fu_1765_p0 = bw20_a0_M_imag_V_ca_fu_1152_p1;

assign grp_fu_1765_p1 = val_assign_1_cast_reg_2214;

assign grp_fu_1771_p0 = bw20_a1_M_imag_V_ca_fu_1155_p1;

assign grp_fu_1771_p1 = tmp_12_reg_2232;

assign grp_fu_1777_p0 = bw20_a1_M_imag_V_ca_fu_1155_p1;

assign grp_fu_1777_p1 = val_assign_2_cast_reg_2220;

assign i_1_fu_596_p2 = (i_reg_345 + 8'd1);

assign i_p0n5n10n15n20MHz_address0 = tmp_43_cast_fu_626_p1;

assign i_p0n5n10n15n20MHz_address1 = tmp_44_cast_fu_631_p1;

assign i_p0n5n10n15n20MHz_address2 = tmp_45_cast_fu_1158_p1;

assign i_p0n5n10n15n20MHz_address3 = tmp_46_cast_fu_1163_p1;

assign i_p0n5n10n15n20MHz_address4 = tmp_47_cast_fu_1168_p1;

assign i_p0n5n10n15n20MHz_address5 = tmp_48_cast_fu_1173_p1;

assign i_p2MHz_address0 = tmp_4_fu_602_p1;

assign loc_V_1_trunc_fu_1703_p2 = (tmp2_fu_1699_p2 + tmp_56_reg_2779);

assign loc_V_2_trunc_fu_1712_p2 = (tmp3_fu_1708_p2 + tmp_59_reg_2794);

assign loc_V_3_trunc_fu_1721_p2 = (tmp4_fu_1717_p2 + tmp_60_reg_2799);

assign loc_V_trunc_fu_1694_p2 = (tmp1_fu_1690_p2 + tmp_55_reg_2774);

assign mt1_fu_943_p2 = (8'd0 - q_p2MHz_load_reg_2029);

assign mt2_fu_1000_p2 = (8'd0 - q_p0n5n10n15n20MHz_l_reg_2091);

assign mt3_fu_1011_p2 = (8'd0 - q_p0n5n10n15n20MHz_l_1_reg_2102);

assign mt4_fu_1178_p2 = (8'd0 - q_p0n5n10n15n20MHz_l_2_reg_2335);

assign mt5_fu_1189_p2 = (8'd0 - q_p0n5n10n15n20MHz_l_3_reg_2346);

assign mt6_fu_1200_p2 = (8'd0 - q_p0n5n10n15n20MHz_l_4_reg_2357);

assign mt_fu_1211_p2 = (8'd0 - q_p0n5n10n15n20MHz_l_5_reg_2368);

assign p01_M_imag_V_fu_1630_p2 = (p_2_i_i2_reg_2704 + p_3_i_i2_reg_2709);

assign p02_M_imag_V_fu_1638_p2 = (p_2_i_i4_reg_2724 + p_3_i_i4_reg_2729);

assign p11_M_imag_V_fu_1646_p2 = (p_2_i_i7_reg_2744 + p_3_i_i7_reg_2749);

assign p12_M_imag_V_fu_1654_p2 = (p_2_i_i9_reg_2764 + p_3_i_i9_reg_2769);

assign p_neg1_fu_1522_p2 = (32'd0 - r_V_34_reg_2546);

assign p_neg2_fu_1537_p2 = (32'd0 - r_V_37_reg_2561);

assign p_neg3_fu_1552_p2 = (32'd0 - r_V_40_reg_2576);

assign p_neg_fu_1567_p2 = (32'd0 - r_V_43_reg_2591);

assign p_r_M_imag_V_1_fu_1232_p2 = (p_2_i_i1_reg_2396 + p_3_i_i1_reg_2401);

assign p_r_M_imag_V_3_fu_1240_p2 = (p_2_i_i3_reg_2416 + p_3_i_i3_reg_2421);

assign p_r_M_imag_V_5_fu_1254_p2 = (p_2_i_i6_reg_2448 + p_3_i_i6_reg_2453);

assign p_r_M_imag_V_7_fu_1262_p2 = (p_2_i_i8_reg_2468 + p_3_i_i8_reg_2473);

assign p_r_V_10_fu_1228_p2 = (p_i_i1_reg_2386 - p_1_i_i1_reg_2391);

assign p_r_V_11_fu_1626_p2 = (p_i_i2_reg_2694 - p_1_i_i2_reg_2699);

assign p_r_V_12_fu_1236_p2 = (p_i_i3_reg_2406 - p_1_i_i3_reg_2411);

assign p_r_V_13_fu_1634_p2 = (p_i_i4_reg_2714 - p_1_i_i4_reg_2719);

assign p_r_V_14_fu_1250_p2 = (p_i_i6_reg_2438 - p_1_i_i6_reg_2443);

assign p_r_V_15_fu_1642_p2 = (p_i_i7_reg_2734 - p_1_i_i7_reg_2739);

assign p_r_V_16_fu_1258_p2 = (p_i_i8_reg_2458 - p_1_i_i8_reg_2463);

assign p_r_V_17_fu_1650_p2 = (p_i_i9_reg_2754 - p_1_i_i9_reg_2759);

assign p_r_V_5_cast_fu_1244_p1 = p_r_V_5_reg_2426;

assign p_r_V_cast_fu_1222_p1 = p_r_V_reg_2374;

assign p_shl1_cast_fu_524_p1 = tmp_13_fu_516_p3;

assign p_shl2_cast_fu_472_p1 = tmp_2_fu_464_p3;

assign p_shl3_cast_fu_484_p1 = tmp_5_fu_476_p3;

assign p_shl_cast_fu_512_p1 = tmp_10_fu_504_p3;

assign q_p0n5n10n15n20MHz_address0 = tmp_43_cast_fu_626_p1;

assign q_p0n5n10n15n20MHz_address1 = tmp_44_cast_fu_631_p1;

assign q_p0n5n10n15n20MHz_address2 = tmp_45_cast_fu_1158_p1;

assign q_p0n5n10n15n20MHz_address3 = tmp_46_cast_fu_1163_p1;

assign q_p0n5n10n15n20MHz_address4 = tmp_47_cast_fu_1168_p1;

assign q_p0n5n10n15n20MHz_address5 = tmp_48_cast_fu_1173_p1;

assign q_p2MHz_address0 = tmp_4_fu_602_p1;

assign r_V_15_cast_fu_884_p1 = $signed(r_V_15_fu_880_p2);

assign r_V_15_fu_880_p2 = $signed(p_Result_7_reg_2006) >>> tmp_9_cast_fu_586_p1;

assign r_V_16_fu_888_p2 = bw02_a11_M_imag_V_c_fu_759_p1 << tmp_cast_fu_456_p1;

assign r_V_18_cast_fu_905_p1 = $signed(r_V_18_fu_901_p2);

assign r_V_18_fu_901_p2 = $signed(p_Result_8_reg_2012) >>> tmp_9_cast_fu_586_p1;

assign r_V_19_fu_909_p2 = bw02_a12_M_real_V_c_fu_762_p1 << tmp_cast_fu_456_p1;

assign r_V_1_cast_fu_779_p1 = $signed(r_V_1_fu_775_p2);

assign r_V_1_fu_775_p2 = $signed(tmp_48_reg_1976) >>> tmp_9_cast_fu_586_p1;

assign r_V_21_cast_fu_926_p1 = $signed(r_V_21_fu_922_p2);

assign r_V_21_fu_922_p2 = $signed(p_Result_9_reg_2018) >>> tmp_9_cast_fu_586_p1;

assign r_V_22_fu_930_p2 = tmp_12_cast5_fu_765_p1 << tmp_cast_fu_456_p1;

assign r_V_24_fu_948_p3 = ((tmp_3_fu_364_p3[0:0] === 1'b1) ? mt1_fu_943_p2 : q_p2MHz_load_reg_2029);

assign r_V_25_fu_954_p3 = ((tmp_33_fu_396_p3[0:0] === 1'b1) ? mt1_fu_943_p2 : q_p2MHz_load_reg_2029);

assign r_V_26_fu_1005_p3 = ((tmp_1_fu_356_p3[0:0] === 1'b1) ? mt2_fu_1000_p2 : q_p0n5n10n15n20MHz_l_reg_2091);

assign r_V_27_fu_1016_p3 = ((tmp_32_fu_388_p3[0:0] === 1'b1) ? mt3_fu_1011_p2 : q_p0n5n10n15n20MHz_l_1_reg_2102);

assign r_V_28_fu_1183_p3 = ((tmp_11_fu_372_p3[0:0] === 1'b1) ? mt4_fu_1178_p2 : q_p0n5n10n15n20MHz_l_2_reg_2335);

assign r_V_29_fu_1194_p3 = ((tmp_31_fu_380_p3[0:0] === 1'b1) ? mt5_fu_1189_p2 : q_p0n5n10n15n20MHz_l_3_reg_2346);

assign r_V_2_fu_804_p2 = bw02_a01_M_imag_V_c_fu_747_p1 << tmp_cast_fu_456_p1;

assign r_V_30_fu_1205_p3 = ((tmp_34_fu_404_p3[0:0] === 1'b1) ? mt6_fu_1200_p2 : q_p0n5n10n15n20MHz_l_4_reg_2357);

assign r_V_31_fu_1216_p3 = ((tmp_35_fu_412_p3[0:0] === 1'b1) ? mt_fu_1211_p2 : q_p0n5n10n15n20MHz_l_5_reg_2368);

assign r_V_32_cast_fu_1270_p1 = $signed(r_V_32_fu_1266_p2);

assign r_V_32_fu_1266_p2 = $signed(p_r_V_reg_2374) >>> tmp_8_cast_fu_576_p1;

assign r_V_33_fu_1274_p2 = p_r_V_cast_fu_1222_p1 << tmp_7_fu_566_p1;

assign r_V_34_fu_1279_p3 = ((tmp_50_fu_960_p3[0:0] === 1'b1) ? r_V_32_cast_fu_1270_p1 : r_V_33_fu_1274_p2);

assign r_V_35_cast_fu_1308_p1 = $signed(r_V_35_fu_1304_p2);

assign r_V_35_fu_1304_p2 = $signed(complex_M_imag_V_wr_reg_2380) >>> tmp_8_cast_fu_576_p1;

assign r_V_36_fu_1312_p2 = complex_M_imag_V_wr_1_fu_1225_p1 << tmp_7_fu_566_p1;

assign r_V_37_fu_1317_p3 = ((tmp_50_fu_960_p3[0:0] === 1'b1) ? r_V_35_cast_fu_1308_p1 : r_V_36_fu_1312_p2);

assign r_V_38_cast_fu_1346_p1 = $signed(r_V_38_fu_1342_p2);

assign r_V_38_fu_1342_p2 = $signed(p_r_V_5_reg_2426) >>> tmp_8_cast_fu_576_p1;

assign r_V_39_fu_1350_p2 = p_r_V_5_cast_fu_1244_p1 << tmp_7_fu_566_p1;

assign r_V_3_cast_fu_800_p1 = $signed(r_V_3_fu_796_p2);

assign r_V_3_fu_796_p2 = $signed(p_Result_3_reg_1982) >>> tmp_9_cast_fu_586_p1;

assign r_V_40_fu_1355_p3 = ((tmp_50_fu_960_p3[0:0] === 1'b1) ? r_V_38_cast_fu_1346_p1 : r_V_39_fu_1350_p2);

assign r_V_41_cast_fu_1384_p1 = $signed(r_V_41_fu_1380_p2);

assign r_V_41_fu_1380_p2 = $signed(complex_M_imag_V_wr_2_reg_2432) >>> tmp_8_cast_fu_576_p1;

assign r_V_42_fu_1388_p2 = complex_M_imag_V_wr_3_fu_1247_p1 << tmp_7_fu_566_p1;

assign r_V_43_fu_1393_p3 = ((tmp_50_fu_960_p3[0:0] === 1'b1) ? r_V_41_cast_fu_1384_p1 : r_V_42_fu_1388_p2);

assign r_V_44_cast_fu_967_p1 = $signed(r_V_44_reg_2036);

assign r_V_44_fu_788_p3 = ((tmp_49_fu_768_p3[0:0] === 1'b1) ? r_V_1_cast_fu_779_p1 : r_V_fu_783_p2);

assign r_V_45_cast_fu_970_p1 = $signed(r_V_45_reg_2041);

assign r_V_45_fu_809_p3 = ((tmp_49_fu_768_p3[0:0] === 1'b1) ? r_V_3_cast_fu_800_p1 : r_V_2_fu_804_p2);

assign r_V_46_cast_fu_973_p1 = $signed(r_V_46_reg_2046);

assign r_V_46_fu_830_p3 = ((tmp_49_fu_768_p3[0:0] === 1'b1) ? r_V_5_cast_fu_821_p1 : r_V_4_fu_825_p2);

assign r_V_47_cast_fu_976_p1 = $signed(r_V_47_reg_2051);

assign r_V_47_fu_851_p3 = ((tmp_49_fu_768_p3[0:0] === 1'b1) ? r_V_7_cast_fu_842_p1 : r_V_6_fu_846_p2);

assign r_V_48_cast_fu_979_p1 = $signed(r_V_48_reg_2056);

assign r_V_48_fu_872_p3 = ((tmp_49_fu_768_p3[0:0] === 1'b1) ? r_V_9_cast_fu_863_p1 : r_V_8_fu_867_p2);

assign r_V_49_cast_fu_982_p1 = $signed(r_V_49_reg_2061);

assign r_V_49_fu_893_p3 = ((tmp_49_fu_768_p3[0:0] === 1'b1) ? r_V_15_cast_fu_884_p1 : r_V_16_fu_888_p2);

assign r_V_4_fu_825_p2 = bw02_a02_M_real_V_c_fu_750_p1 << tmp_cast_fu_456_p1;

assign r_V_50_cast_fu_985_p1 = $signed(r_V_50_reg_2066);

assign r_V_50_fu_914_p3 = ((tmp_49_fu_768_p3[0:0] === 1'b1) ? r_V_18_cast_fu_905_p1 : r_V_19_fu_909_p2);

assign r_V_51_cast_fu_988_p1 = $signed(r_V_51_reg_2071);

assign r_V_51_fu_935_p3 = ((tmp_49_fu_768_p3[0:0] === 1'b1) ? r_V_21_cast_fu_926_p1 : r_V_22_fu_930_p2);

assign r_V_5_cast_fu_821_p1 = $signed(r_V_5_fu_817_p2);

assign r_V_5_fu_817_p2 = $signed(p_Result_4_reg_1988) >>> tmp_9_cast_fu_586_p1;

assign r_V_6_fu_846_p2 = bw02_a02_M_imag_V_c_fu_753_p1 << tmp_cast_fu_456_p1;

assign r_V_7_cast_fu_842_p1 = $signed(r_V_7_fu_838_p2);

assign r_V_7_fu_838_p2 = $signed(p_Result_5_reg_1994) >>> tmp_9_cast_fu_586_p1;

assign r_V_8_fu_867_p2 = bw02_a11_M_real_V_c_fu_756_p1 << tmp_cast_fu_456_p1;

assign r_V_9_cast_fu_863_p1 = $signed(r_V_9_fu_859_p2);

assign r_V_9_fu_859_p2 = $signed(p_Result_6_reg_2000) >>> tmp_9_cast_fu_586_p1;

assign r_V_fu_783_p2 = bw02_a01_M_real_V_c_fu_744_p1 << tmp_cast_fu_456_p1;

assign sh_V_1_fu_580_p2 = (4'd0 - bw02_num_shift_to_le_fu_446_p4);

assign sh_V_3_fu_570_p2 = (4'd0 - bw20_num_shift_to_le_fu_436_p4);

assign tmp1_fu_1690_p2 = (ap_reg_pp0_iter14_tmp_18_reg_2674 + tmp_57_reg_2784);

assign tmp2_fu_1699_p2 = (ap_reg_pp0_iter14_tmp_22_reg_2679 + tmp_58_reg_2789);

assign tmp3_fu_1708_p2 = (ap_reg_pp0_iter14_tmp_26_reg_2684 + tmp_61_reg_2804);

assign tmp4_fu_1717_p2 = (ap_reg_pp0_iter14_tmp_30_reg_2689 + tmp_62_reg_2809);

assign tmp_10_fu_504_p3 = {{tmp_9_fu_494_p4}, {7'd0}};

assign tmp_11_fu_372_p3 = cfg0_V[32'd4];

assign tmp_12_cast5_fu_765_p1 = $signed(p_Result_9_reg_2018);

assign tmp_12_fu_1133_p1 = r_V_27_reg_2197;

assign tmp_13_fu_516_p3 = {{tmp_9_fu_494_p4}, {5'd0}};

assign tmp_14_fu_528_p2 = (p_shl_cast_fu_512_p1 + p_shl1_cast_fu_524_p1);

assign tmp_16_fu_1582_p2 = (16'd0 - tmp_15_reg_2654);

assign tmp_18_fu_1587_p3 = ((ap_reg_pp0_iter9_tmp_51_reg_2551[0:0] === 1'b1) ? tmp_16_fu_1582_p2 : ap_reg_pp0_iter9_tmp_17_reg_2556);

assign tmp_1_fu_356_p3 = cfg0_V[32'd2];

assign tmp_20_fu_1593_p2 = (16'd0 - tmp_19_reg_2659);

assign tmp_22_fu_1598_p3 = ((ap_reg_pp0_iter9_tmp_52_reg_2566[0:0] === 1'b1) ? tmp_20_fu_1593_p2 : ap_reg_pp0_iter9_tmp_21_reg_2571);

assign tmp_24_fu_1604_p2 = (16'd0 - tmp_23_reg_2664);

assign tmp_26_fu_1609_p3 = ((ap_reg_pp0_iter9_tmp_53_reg_2581[0:0] === 1'b1) ? tmp_24_fu_1604_p2 : ap_reg_pp0_iter9_tmp_25_reg_2586);

assign tmp_28_fu_1615_p2 = (16'd0 - tmp_27_reg_2669);

assign tmp_2_fu_464_p3 = {{tmp_38_fu_460_p1}, {7'd0}};

assign tmp_30_fu_1620_p3 = ((ap_reg_pp0_iter9_tmp_54_reg_2596[0:0] === 1'b1) ? tmp_28_fu_1615_p2 : ap_reg_pp0_iter9_tmp_29_reg_2601);

assign tmp_31_fu_380_p3 = cfg0_V[32'd5];

assign tmp_32_fu_388_p3 = cfg0_V[32'd10];

assign tmp_33_fu_396_p3 = cfg0_V[32'd11];

assign tmp_34_fu_404_p3 = cfg0_V[32'd12];

assign tmp_35_fu_412_p3 = cfg0_V[32'd13];

assign tmp_36_fu_420_p3 = cfg0_V[32'd16];

assign tmp_37_fu_428_p3 = cfg0_V[32'd17];

assign tmp_38_fu_460_p1 = cfg0_V[1:0];

assign tmp_39_cast_fu_534_p3 = ((tmp_36_fu_420_p3[0:0] === 1'b1) ? 9'd160 : 9'd0);

assign tmp_39_fu_542_p3 = ((tmp_36_fu_420_p3[0:0] === 1'b1) ? 9'd320 : 9'd160);

assign tmp_3_fu_364_p3 = cfg0_V[32'd3];

assign tmp_40_fu_558_p3 = ((tmp_37_fu_428_p3[0:0] === 1'b1) ? 9'd320 : 9'd160);

assign tmp_41_cast_fu_550_p3 = ((tmp_37_fu_428_p3[0:0] === 1'b1) ? 9'd160 : 9'd0);

assign tmp_41_fu_616_p2 = (tmp_4_cast_fu_612_p1 + tmp_6_fu_488_p2);

assign tmp_42_fu_621_p2 = (tmp_4_cast_fu_612_p1 + tmp_14_fu_528_p2);

assign tmp_43_cast_fu_626_p1 = tmp_41_reg_1916;

assign tmp_43_fu_1136_p2 = (ap_reg_pp0_iter4_tmp_4_cast4_reg_1908 + tmp_39_cast_fu_534_p3);

assign tmp_44_cast_fu_631_p1 = tmp_42_reg_1921;

assign tmp_44_fu_1140_p2 = (ap_reg_pp0_iter4_tmp_4_cast4_reg_1908 + tmp_39_fu_542_p3);

assign tmp_45_cast_fu_1158_p1 = tmp_43_reg_2238;

assign tmp_45_fu_1144_p2 = (ap_reg_pp0_iter4_tmp_4_cast4_reg_1908 + tmp_41_cast_fu_550_p3);

assign tmp_46_cast_fu_1163_p1 = tmp_44_reg_2243;

assign tmp_46_fu_1148_p2 = (ap_reg_pp0_iter4_tmp_4_cast4_reg_1908 + tmp_40_fu_558_p3);

assign tmp_47_cast_fu_1168_p1 = tmp_45_reg_2248;

assign tmp_47_fu_636_p1 = d_i0_V_0_data_out[15:0];

assign tmp_48_cast_fu_1173_p1 = tmp_46_reg_2253;

assign tmp_48_fu_670_p1 = d_i1_V_0_data_out[15:0];

assign tmp_49_fu_768_p3 = cfg0_V[32'd27];

assign tmp_4_cast4_fu_608_p1 = i_reg_345;

assign tmp_4_cast_fu_612_p1 = i_reg_345;

assign tmp_4_fu_602_p1 = i_reg_345;

assign tmp_50_fu_960_p3 = cfg0_V[32'd31];

assign tmp_55_fu_1658_p1 = p_r_V_11_fu_1626_p2[15:0];

assign tmp_56_fu_1662_p1 = p01_M_imag_V_fu_1630_p2[15:0];

assign tmp_57_fu_1666_p1 = p_r_V_13_fu_1634_p2[15:0];

assign tmp_58_fu_1670_p1 = p02_M_imag_V_fu_1638_p2[15:0];

assign tmp_59_fu_1674_p1 = p_r_V_15_fu_1642_p2[15:0];

assign tmp_5_fu_476_p3 = {{tmp_38_fu_460_p1}, {5'd0}};

assign tmp_60_fu_1678_p1 = p11_M_imag_V_fu_1646_p2[15:0];

assign tmp_61_fu_1682_p1 = p_r_V_17_fu_1650_p2[15:0];

assign tmp_62_fu_1686_p1 = p12_M_imag_V_fu_1654_p2[15:0];

assign tmp_6_fu_488_p2 = (p_shl2_cast_fu_472_p1 + p_shl3_cast_fu_484_p1);

assign tmp_7_fu_566_p1 = bw20_num_shift_to_le_fu_436_p4;

assign tmp_8_cast_fu_576_p1 = sh_V_3_fu_570_p2;

assign tmp_8_fu_1130_p1 = r_V_26_reg_2192;

assign tmp_9_cast_fu_586_p1 = sh_V_1_fu_580_p2;

assign tmp_9_fu_494_p4 = {{cfg0_V[9:8]}};

assign tmp_cast_fu_456_p1 = bw02_num_shift_to_le_fu_446_p4;

assign tmp_s_fu_590_p2 = ((i_reg_345 == 8'd160) ? 1'b1 : 1'b0);

assign val_assign_1_cast_fu_1124_p1 = ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2086;

assign val_assign_2_cast_fu_1127_p1 = ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2097;

always @ (posedge ap_clk) begin
    tmp_4_cast4_reg_1908[8] <= 1'b0;
    ap_reg_pp0_iter1_tmp_4_cast4_reg_1908[8] <= 1'b0;
    ap_reg_pp0_iter2_tmp_4_cast4_reg_1908[8] <= 1'b0;
    ap_reg_pp0_iter3_tmp_4_cast4_reg_1908[8] <= 1'b0;
    ap_reg_pp0_iter4_tmp_4_cast4_reg_1908[8] <= 1'b0;
end

endmodule //mixer_duc
