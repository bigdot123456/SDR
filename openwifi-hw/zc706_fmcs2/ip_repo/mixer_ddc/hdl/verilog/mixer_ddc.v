// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mixer_ddc,hls_ip_2017_4_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.360000,HLS_SYN_LAT=178,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=104,HLS_SYN_FF=8674,HLS_SYN_LUT=3678}" *)

module mixer_ddc (
        ap_clk,
        ap_rst_n,
        d_i_V_dout,
        d_i_V_empty_n,
        d_i_V_read,
        cfg0_V,
        d_o0_V_TDATA,
        d_o0_V_TVALID,
        d_o0_V_TREADY,
        d_o1_V_TDATA,
        d_o1_V_TVALID,
        d_o1_V_TREADY
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state20 = 3'd4;

input   ap_clk;
input   ap_rst_n;
input  [63:0] d_i_V_dout;
input   d_i_V_empty_n;
output   d_i_V_read;
input  [31:0] cfg0_V;
output  [63:0] d_o0_V_TDATA;
output   d_o0_V_TVALID;
input   d_o0_V_TREADY;
output  [127:0] d_o1_V_TDATA;
output   d_o1_V_TVALID;
input   d_o1_V_TREADY;

reg d_i_V_read;

reg    ap_rst_n_inv;
reg   [63:0] d_o0_V_1_data_out;
reg    d_o0_V_1_vld_in;
wire    d_o0_V_1_vld_out;
wire    d_o0_V_1_ack_in;
wire    d_o0_V_1_ack_out;
reg   [63:0] d_o0_V_1_payload_A;
reg   [63:0] d_o0_V_1_payload_B;
reg    d_o0_V_1_sel_rd;
reg    d_o0_V_1_sel_wr;
wire    d_o0_V_1_sel;
wire    d_o0_V_1_load_A;
wire    d_o0_V_1_load_B;
reg   [1:0] d_o0_V_1_state;
wire    d_o0_V_1_state_cmp_full;
reg   [127:0] d_o1_V_1_data_out;
reg    d_o1_V_1_vld_in;
wire    d_o1_V_1_vld_out;
wire    d_o1_V_1_ack_in;
wire    d_o1_V_1_ack_out;
reg   [127:0] d_o1_V_1_payload_A;
reg   [127:0] d_o1_V_1_payload_B;
reg    d_o1_V_1_sel_rd;
reg    d_o1_V_1_sel_wr;
wire    d_o1_V_1_sel;
wire    d_o1_V_1_load_A;
wire    d_o1_V_1_load_B;
reg   [1:0] d_o1_V_1_state;
wire    d_o1_V_1_state_cmp_full;
wire   [7:0] i_p2MHz_address0;
reg    i_p2MHz_ce0;
wire   [7:0] i_p2MHz_q0;
wire   [7:0] q_p2MHz_address0;
reg    q_p2MHz_ce0;
wire   [7:0] q_p2MHz_q0;
wire   [9:0] i_p0n5n10n15n20MHz_address0;
reg    i_p0n5n10n15n20MHz_ce0;
wire   [7:0] i_p0n5n10n15n20MHz_q0;
wire   [9:0] i_p0n5n10n15n20MHz_address1;
reg    i_p0n5n10n15n20MHz_ce1;
wire   [7:0] i_p0n5n10n15n20MHz_q1;
wire   [9:0] i_p0n5n10n15n20MHz_address2;
reg    i_p0n5n10n15n20MHz_ce2;
wire   [7:0] i_p0n5n10n15n20MHz_q2;
wire   [9:0] i_p0n5n10n15n20MHz_address3;
reg    i_p0n5n10n15n20MHz_ce3;
wire   [7:0] i_p0n5n10n15n20MHz_q3;
wire   [9:0] i_p0n5n10n15n20MHz_address4;
reg    i_p0n5n10n15n20MHz_ce4;
wire   [7:0] i_p0n5n10n15n20MHz_q4;
wire   [9:0] i_p0n5n10n15n20MHz_address5;
reg    i_p0n5n10n15n20MHz_ce5;
wire   [7:0] i_p0n5n10n15n20MHz_q5;
wire   [9:0] q_p0n5n10n15n20MHz_address0;
reg    q_p0n5n10n15n20MHz_ce0;
wire   [7:0] q_p0n5n10n15n20MHz_q0;
wire   [9:0] q_p0n5n10n15n20MHz_address1;
reg    q_p0n5n10n15n20MHz_ce1;
wire   [7:0] q_p0n5n10n15n20MHz_q1;
wire   [9:0] q_p0n5n10n15n20MHz_address2;
reg    q_p0n5n10n15n20MHz_ce2;
wire   [7:0] q_p0n5n10n15n20MHz_q2;
wire   [9:0] q_p0n5n10n15n20MHz_address3;
reg    q_p0n5n10n15n20MHz_ce3;
wire   [7:0] q_p0n5n10n15n20MHz_q3;
wire   [9:0] q_p0n5n10n15n20MHz_address4;
reg    q_p0n5n10n15n20MHz_ce4;
wire   [7:0] q_p0n5n10n15n20MHz_q4;
wire   [9:0] q_p0n5n10n15n20MHz_address5;
reg    q_p0n5n10n15n20MHz_ce5;
wire   [7:0] q_p0n5n10n15n20MHz_q5;
reg    d_i_V_blk_n;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_s_reg_1935;
reg    d_o0_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter16;
reg   [0:0] ap_reg_pp0_iter15_tmp_s_reg_1935;
reg    ap_enable_reg_pp0_iter17;
reg   [0:0] ap_reg_pp0_iter16_tmp_s_reg_1935;
reg    d_o1_V_TDATA_blk_n;
reg   [7:0] i_reg_330;
wire    ap_CS_fsm_state1;
wire   [0:0] tmp_1_fu_341_p3;
wire   [0:0] tmp_3_fu_349_p3;
wire   [0:0] tmp_11_fu_357_p3;
wire   [0:0] tmp_63_fu_365_p3;
wire   [0:0] tmp_65_fu_373_p3;
wire   [0:0] tmp_73_fu_381_p3;
wire   [0:0] tmp_74_fu_389_p3;
wire   [0:0] tmp_75_fu_397_p3;
wire   [30:0] tmp_cast_fu_441_p1;
wire   [9:0] tmp_6_fu_473_p2;
wire   [9:0] tmp_62_fu_513_p2;
wire   [8:0] tmp_63_cast_fu_519_p3;
wire   [8:0] tmp_64_fu_527_p3;
wire   [8:0] tmp_65_cast_fu_535_p3;
wire   [8:0] tmp_66_fu_543_p3;
wire   [31:0] tmp_7_fu_551_p1;
wire   [23:0] tmp_8_cast_fu_561_p1;
wire   [15:0] tmp_9_cast_fu_571_p1;
wire   [0:0] tmp_s_fu_575_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
reg    ap_block_state18_io;
wire    ap_block_state19_pp0_stage0_iter17;
reg    ap_block_state19_io;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_tmp_s_reg_1935;
reg   [0:0] ap_reg_pp0_iter2_tmp_s_reg_1935;
reg   [0:0] ap_reg_pp0_iter3_tmp_s_reg_1935;
reg   [0:0] ap_reg_pp0_iter4_tmp_s_reg_1935;
reg   [0:0] ap_reg_pp0_iter5_tmp_s_reg_1935;
reg   [0:0] ap_reg_pp0_iter6_tmp_s_reg_1935;
reg   [0:0] ap_reg_pp0_iter7_tmp_s_reg_1935;
reg   [0:0] ap_reg_pp0_iter8_tmp_s_reg_1935;
reg   [0:0] ap_reg_pp0_iter9_tmp_s_reg_1935;
reg   [0:0] ap_reg_pp0_iter10_tmp_s_reg_1935;
reg   [0:0] ap_reg_pp0_iter11_tmp_s_reg_1935;
reg   [0:0] ap_reg_pp0_iter12_tmp_s_reg_1935;
reg   [0:0] ap_reg_pp0_iter13_tmp_s_reg_1935;
reg   [0:0] ap_reg_pp0_iter14_tmp_s_reg_1935;
wire   [7:0] i_1_fu_581_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [8:0] tmp_4_cast4_fu_593_p1;
reg   [8:0] tmp_4_cast4_reg_1944;
reg   [8:0] ap_reg_pp0_iter1_tmp_4_cast4_reg_1944;
reg   [8:0] ap_reg_pp0_iter2_tmp_4_cast4_reg_1944;
reg   [8:0] ap_reg_pp0_iter3_tmp_4_cast4_reg_1944;
reg   [8:0] ap_reg_pp0_iter4_tmp_4_cast4_reg_1944;
wire   [9:0] tmp_67_fu_601_p2;
reg   [9:0] tmp_67_reg_1952;
wire   [9:0] tmp_68_fu_606_p2;
reg   [9:0] tmp_68_reg_1957;
wire   [15:0] tmp_79_fu_621_p1;
reg   [15:0] tmp_79_reg_1992;
reg   [15:0] ap_reg_pp0_iter2_tmp_79_reg_1992;
reg   [15:0] ap_reg_pp0_iter3_tmp_79_reg_1992;
reg   [15:0] p_Result_s_reg_1999;
reg   [15:0] ap_reg_pp0_iter2_p_Result_s_reg_1999;
reg   [15:0] ap_reg_pp0_iter3_p_Result_s_reg_1999;
reg   [15:0] ap_reg_pp0_iter4_p_Result_s_reg_1999;
reg   [15:0] p_Result_1_reg_2006;
reg   [15:0] ap_reg_pp0_iter2_p_Result_1_reg_2006;
reg   [15:0] ap_reg_pp0_iter3_p_Result_1_reg_2006;
reg   [15:0] p_Result_2_reg_2013;
reg   [15:0] ap_reg_pp0_iter2_p_Result_2_reg_2013;
reg   [15:0] ap_reg_pp0_iter3_p_Result_2_reg_2013;
reg   [15:0] ap_reg_pp0_iter4_p_Result_2_reg_2013;
reg   [7:0] i_p2MHz_load_reg_2020;
reg   [7:0] ap_reg_pp0_iter2_i_p2MHz_load_reg_2020;
reg   [7:0] q_p2MHz_load_reg_2025;
wire   [30:0] r_V_32_fu_687_p3;
reg   [30:0] r_V_32_reg_2032;
wire   [30:0] r_V_33_fu_708_p3;
reg   [30:0] r_V_33_reg_2037;
wire   [30:0] r_V_34_fu_729_p3;
reg   [30:0] r_V_34_reg_2042;
wire   [30:0] r_V_35_fu_750_p3;
reg   [30:0] r_V_35_reg_2047;
wire   [7:0] r_V_8_fu_763_p3;
reg   [7:0] r_V_8_reg_2052;
wire   [7:0] r_V_9_fu_769_p3;
reg   [7:0] r_V_9_reg_2057;
reg   [7:0] i_p0n5n10n15n20MHz_l_reg_2062;
reg    ap_enable_reg_pp0_iter2;
reg  signed [7:0] ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2062;
reg   [7:0] q_p0n5n10n15n20MHz_l_reg_2067;
reg   [7:0] i_p0n5n10n15n20MHz_l_1_reg_2073;
reg  signed [7:0] ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2073;
reg   [7:0] q_p0n5n10n15n20MHz_l_1_reg_2078;
wire   [0:0] tmp_81_fu_775_p3;
wire  signed [31:0] r_V_32_cast_fu_782_p1;
wire  signed [31:0] r_V_33_cast_fu_785_p1;
wire  signed [31:0] r_V_34_cast_fu_788_p1;
wire  signed [31:0] r_V_35_cast_fu_791_p1;
wire  signed [31:0] b1_M_real_V_fu_794_p1;
wire  signed [31:0] b0_M_imag_V_fu_797_p1;
wire  signed [31:0] b1_M_imag_V_fu_800_p1;
wire   [7:0] r_V_14_fu_808_p3;
reg  signed [7:0] r_V_14_reg_2136;
wire   [7:0] r_V_15_fu_819_p3;
reg  signed [7:0] r_V_15_reg_2141;
wire  signed [23:0] bw20_a0_M_real_V_ca_fu_873_p1;
wire  signed [23:0] bw20_a1_M_real_V_ca_fu_876_p1;
wire  signed [23:0] val_assign_1_cast_fu_879_p1;
reg  signed [23:0] val_assign_1_cast_reg_2158;
wire  signed [23:0] val_assign_2_cast_fu_882_p1;
reg  signed [23:0] val_assign_2_cast_reg_2164;
wire  signed [23:0] tmp_8_fu_885_p1;
reg  signed [23:0] tmp_8_reg_2170;
wire  signed [23:0] tmp_60_fu_888_p1;
reg  signed [23:0] tmp_60_reg_2176;
wire   [8:0] tmp_69_fu_891_p2;
reg   [8:0] tmp_69_reg_2182;
wire   [8:0] tmp_70_fu_895_p2;
reg   [8:0] tmp_70_reg_2187;
wire   [8:0] tmp_71_fu_899_p2;
reg   [8:0] tmp_71_reg_2192;
wire   [8:0] tmp_72_fu_903_p2;
reg   [8:0] tmp_72_reg_2197;
wire  signed [23:0] bw20_a0_M_imag_V_ca_fu_907_p1;
wire  signed [23:0] bw20_a1_M_imag_V_ca_fu_910_p1;
wire  signed [23:0] grp_fu_1779_p2;
reg  signed [23:0] p_i_i_reg_2254;
wire  signed [23:0] grp_fu_1785_p2;
reg  signed [23:0] p_2_i_i_cast_reg_2259;
wire  signed [23:0] grp_fu_1791_p2;
reg  signed [23:0] p_i_i4_reg_2264;
wire  signed [23:0] grp_fu_1797_p2;
reg  signed [23:0] p_2_i_i4_cast_reg_2269;
reg   [7:0] i_p0n5n10n15n20MHz_l_2_reg_2274;
reg    ap_enable_reg_pp0_iter7;
reg   [7:0] ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_2_reg_2274;
reg   [7:0] q_p0n5n10n15n20MHz_l_2_reg_2279;
reg   [7:0] i_p0n5n10n15n20MHz_l_3_reg_2285;
reg   [7:0] ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_3_reg_2285;
reg   [7:0] q_p0n5n10n15n20MHz_l_3_reg_2290;
reg   [7:0] i_p0n5n10n15n20MHz_l_4_reg_2296;
reg   [7:0] ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_4_reg_2296;
reg   [7:0] q_p0n5n10n15n20MHz_l_4_reg_2301;
reg   [7:0] i_p0n5n10n15n20MHz_l_5_reg_2307;
reg   [7:0] ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_5_reg_2307;
reg   [7:0] q_p0n5n10n15n20MHz_l_5_reg_2312;
wire  signed [23:0] grp_fu_1803_p3;
reg  signed [23:0] p_r_V_reg_2318;
wire  signed [23:0] grp_fu_1809_p3;
reg  signed [23:0] complex_M_imag_V_wr_reg_2324;
wire   [31:0] grp_fu_825_p2;
reg   [31:0] p_i_i1_reg_2330;
wire   [31:0] grp_fu_831_p2;
reg   [31:0] p_1_i_i1_reg_2335;
wire   [31:0] grp_fu_837_p2;
reg   [31:0] p_2_i_i1_reg_2340;
wire   [31:0] grp_fu_843_p2;
reg   [31:0] p_3_i_i1_reg_2345;
wire  signed [23:0] grp_fu_1815_p3;
reg  signed [23:0] p_r_V_4_reg_2350;
wire  signed [23:0] grp_fu_1821_p3;
reg  signed [23:0] complex_M_imag_V_wr_4_reg_2356;
wire   [31:0] grp_fu_849_p2;
reg   [31:0] p_i_i5_reg_2362;
wire   [31:0] grp_fu_855_p2;
reg   [31:0] p_1_i_i5_reg_2367;
wire   [31:0] grp_fu_861_p2;
reg   [31:0] p_2_i_i5_reg_2372;
wire   [31:0] grp_fu_867_p2;
reg   [31:0] p_3_i_i5_reg_2377;
wire   [7:0] r_V_16_fu_938_p3;
reg   [7:0] r_V_16_reg_2382;
wire   [7:0] r_V_17_fu_949_p3;
reg   [7:0] r_V_17_reg_2387;
wire   [7:0] r_V_18_fu_960_p3;
reg   [7:0] r_V_18_reg_2392;
wire   [7:0] r_V_19_fu_971_p3;
reg   [7:0] r_V_19_reg_2397;
wire  signed [31:0] p_r_V_8_fu_983_p2;
reg  signed [31:0] p_r_V_8_reg_2402;
wire  signed [31:0] p_r_M_imag_V_1_fu_987_p2;
reg  signed [31:0] p_r_M_imag_V_1_reg_2410;
wire  signed [31:0] p_r_V_9_fu_997_p2;
reg  signed [31:0] p_r_V_9_reg_2418;
wire  signed [31:0] p_r_M_imag_V_3_fu_1001_p2;
reg  signed [31:0] p_r_M_imag_V_3_reg_2426;
wire   [31:0] r_V_22_fu_1018_p3;
reg   [31:0] r_V_22_reg_2434;
reg   [0:0] tmp_82_reg_2439;
reg   [0:0] ap_reg_pp0_iter9_tmp_82_reg_2439;
reg   [15:0] tmp_14_reg_2444;
reg   [15:0] ap_reg_pp0_iter9_tmp_14_reg_2444;
wire   [31:0] r_V_25_fu_1056_p3;
reg   [31:0] r_V_25_reg_2449;
reg   [0:0] tmp_83_reg_2454;
reg   [0:0] ap_reg_pp0_iter9_tmp_83_reg_2454;
reg   [15:0] tmp_18_reg_2459;
reg   [15:0] ap_reg_pp0_iter9_tmp_18_reg_2459;
wire   [31:0] r_V_28_fu_1094_p3;
reg   [31:0] r_V_28_reg_2464;
reg   [0:0] tmp_84_reg_2469;
reg   [0:0] ap_reg_pp0_iter9_tmp_84_reg_2469;
reg   [15:0] tmp_22_reg_2474;
reg   [15:0] ap_reg_pp0_iter9_tmp_22_reg_2474;
wire   [31:0] r_V_31_fu_1132_p3;
reg   [31:0] r_V_31_reg_2479;
reg   [0:0] tmp_85_reg_2484;
reg   [0:0] ap_reg_pp0_iter9_tmp_85_reg_2484;
reg   [15:0] tmp_26_reg_2489;
reg   [15:0] ap_reg_pp0_iter9_tmp_26_reg_2489;
wire  signed [31:0] c01_M_real_V_fu_1157_p1;
wire  signed [31:0] c01_M_imag_V_fu_1160_p1;
wire  signed [31:0] c02_M_real_V_fu_1163_p1;
wire  signed [31:0] c02_M_imag_V_fu_1166_p1;
wire  signed [31:0] c11_M_real_V_fu_1169_p1;
wire  signed [31:0] c11_M_imag_V_fu_1172_p1;
wire  signed [31:0] c12_M_real_V_fu_1175_p1;
wire  signed [31:0] c12_M_imag_V_fu_1178_p1;
reg   [15:0] tmp_12_reg_2542;
reg   [15:0] tmp_16_reg_2547;
reg   [15:0] tmp_20_reg_2552;
reg   [15:0] tmp_24_reg_2557;
wire   [15:0] tmp_15_fu_1326_p3;
reg   [15:0] tmp_15_reg_2562;
reg   [15:0] ap_reg_pp0_iter11_tmp_15_reg_2562;
reg   [15:0] ap_reg_pp0_iter12_tmp_15_reg_2562;
reg   [15:0] ap_reg_pp0_iter13_tmp_15_reg_2562;
reg   [15:0] ap_reg_pp0_iter14_tmp_15_reg_2562;
reg   [15:0] ap_reg_pp0_iter15_tmp_15_reg_2562;
wire   [15:0] tmp_19_fu_1337_p3;
reg   [15:0] tmp_19_reg_2567;
reg   [15:0] ap_reg_pp0_iter11_tmp_19_reg_2567;
reg   [15:0] ap_reg_pp0_iter12_tmp_19_reg_2567;
reg   [15:0] ap_reg_pp0_iter13_tmp_19_reg_2567;
reg   [15:0] ap_reg_pp0_iter14_tmp_19_reg_2567;
reg   [15:0] ap_reg_pp0_iter15_tmp_19_reg_2567;
wire   [15:0] tmp_23_fu_1348_p3;
reg   [15:0] tmp_23_reg_2572;
reg   [15:0] ap_reg_pp0_iter11_tmp_23_reg_2572;
reg   [15:0] ap_reg_pp0_iter12_tmp_23_reg_2572;
reg   [15:0] ap_reg_pp0_iter13_tmp_23_reg_2572;
reg   [15:0] ap_reg_pp0_iter14_tmp_23_reg_2572;
reg   [15:0] ap_reg_pp0_iter15_tmp_23_reg_2572;
wire   [15:0] tmp_27_fu_1359_p3;
reg   [15:0] tmp_27_reg_2577;
reg   [15:0] ap_reg_pp0_iter11_tmp_27_reg_2577;
reg   [15:0] ap_reg_pp0_iter12_tmp_27_reg_2577;
reg   [15:0] ap_reg_pp0_iter13_tmp_27_reg_2577;
reg   [15:0] ap_reg_pp0_iter14_tmp_27_reg_2577;
reg   [15:0] ap_reg_pp0_iter15_tmp_27_reg_2577;
wire   [31:0] grp_fu_1181_p2;
reg   [31:0] p_i_i2_reg_2582;
wire   [31:0] grp_fu_1186_p2;
reg   [31:0] p_1_i_i2_reg_2587;
wire   [31:0] grp_fu_1191_p2;
reg   [31:0] p_2_i_i2_reg_2592;
wire   [31:0] grp_fu_1196_p2;
reg   [31:0] p_3_i_i2_reg_2597;
wire   [31:0] grp_fu_1201_p2;
reg   [31:0] p_i_i3_reg_2602;
wire   [31:0] grp_fu_1206_p2;
reg   [31:0] p_1_i_i3_reg_2607;
wire   [31:0] grp_fu_1211_p2;
reg   [31:0] p_2_i_i3_reg_2612;
wire   [31:0] grp_fu_1216_p2;
reg   [31:0] p_3_i_i3_reg_2617;
wire   [31:0] grp_fu_1221_p2;
reg   [31:0] p_i_i6_reg_2622;
wire   [31:0] grp_fu_1226_p2;
reg   [31:0] p_1_i_i6_reg_2627;
wire   [31:0] grp_fu_1231_p2;
reg   [31:0] p_2_i_i6_reg_2632;
wire   [31:0] grp_fu_1236_p2;
reg   [31:0] p_3_i_i6_reg_2637;
wire   [31:0] grp_fu_1241_p2;
reg   [31:0] p_i_i7_reg_2642;
wire   [31:0] grp_fu_1246_p2;
reg   [31:0] p_1_i_i7_reg_2647;
wire   [31:0] grp_fu_1251_p2;
reg   [31:0] p_2_i_i7_reg_2652;
wire   [31:0] grp_fu_1256_p2;
reg   [31:0] p_3_i_i7_reg_2657;
wire   [31:0] p_r_V_2_fu_1365_p2;
reg   [31:0] p_r_V_2_reg_2662;
wire   [31:0] complex_M_imag_V_wr_2_fu_1369_p2;
reg   [31:0] complex_M_imag_V_wr_2_reg_2667;
wire   [31:0] p_r_V_3_fu_1373_p2;
reg   [31:0] p_r_V_3_reg_2672;
wire   [31:0] complex_M_imag_V_wr_3_fu_1377_p2;
reg   [31:0] complex_M_imag_V_wr_3_reg_2677;
wire   [31:0] p_r_V_6_fu_1381_p2;
reg   [31:0] p_r_V_6_reg_2682;
wire   [31:0] complex_M_imag_V_wr_6_fu_1385_p2;
reg   [31:0] complex_M_imag_V_wr_6_reg_2687;
wire   [31:0] p_r_V_7_fu_1389_p2;
reg   [31:0] p_r_V_7_reg_2692;
wire   [31:0] complex_M_imag_V_wr_7_fu_1393_p2;
reg   [31:0] complex_M_imag_V_wr_7_reg_2697;
reg   [0:0] tmp_86_reg_2702;
reg   [0:0] ap_reg_pp0_iter15_tmp_86_reg_2702;
reg   [15:0] tmp_30_reg_2707;
reg   [15:0] ap_reg_pp0_iter15_tmp_30_reg_2707;
reg   [0:0] tmp_87_reg_2712;
reg   [0:0] ap_reg_pp0_iter15_tmp_87_reg_2712;
reg   [15:0] tmp_34_reg_2717;
reg   [15:0] ap_reg_pp0_iter15_tmp_34_reg_2717;
reg   [0:0] tmp_88_reg_2722;
reg   [0:0] ap_reg_pp0_iter15_tmp_88_reg_2722;
reg   [15:0] tmp_38_reg_2727;
reg   [15:0] ap_reg_pp0_iter15_tmp_38_reg_2727;
reg   [0:0] tmp_89_reg_2732;
reg   [0:0] ap_reg_pp0_iter15_tmp_89_reg_2732;
reg   [15:0] tmp_42_reg_2737;
reg   [15:0] ap_reg_pp0_iter15_tmp_42_reg_2737;
reg   [0:0] tmp_90_reg_2742;
reg   [0:0] ap_reg_pp0_iter15_tmp_90_reg_2742;
reg   [15:0] tmp_46_reg_2747;
reg   [15:0] ap_reg_pp0_iter15_tmp_46_reg_2747;
reg   [0:0] tmp_91_reg_2752;
reg   [0:0] ap_reg_pp0_iter15_tmp_91_reg_2752;
reg   [15:0] tmp_50_reg_2757;
reg   [15:0] ap_reg_pp0_iter15_tmp_50_reg_2757;
reg   [0:0] tmp_92_reg_2762;
reg   [0:0] ap_reg_pp0_iter15_tmp_92_reg_2762;
reg   [15:0] tmp_54_reg_2767;
reg   [15:0] ap_reg_pp0_iter15_tmp_54_reg_2767;
reg   [0:0] tmp_93_reg_2772;
reg   [0:0] ap_reg_pp0_iter15_tmp_93_reg_2772;
reg   [15:0] tmp_58_reg_2777;
reg   [15:0] ap_reg_pp0_iter15_tmp_58_reg_2777;
reg   [15:0] tmp_28_reg_2782;
reg   [15:0] tmp_32_reg_2787;
reg   [15:0] tmp_36_reg_2792;
reg   [15:0] tmp_40_reg_2797;
reg   [15:0] tmp_44_reg_2802;
reg   [15:0] tmp_48_reg_2807;
reg   [15:0] tmp_52_reg_2812;
reg   [15:0] tmp_56_reg_2817;
wire   [63:0] p_Result_s_6_fu_1661_p5;
wire   [127:0] p_Result_3_fu_1758_p9;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
wire   [63:0] tmp_4_fu_587_p1;
wire   [63:0] tmp_67_cast_fu_611_p1;
wire   [63:0] tmp_68_cast_fu_616_p1;
wire   [63:0] tmp_69_cast_fu_913_p1;
wire   [63:0] tmp_70_cast_fu_918_p1;
wire   [63:0] tmp_71_cast_fu_923_p1;
wire   [63:0] tmp_72_cast_fu_928_p1;
reg    ap_block_pp0_stage0_01001;
wire   [3:0] bw02_num_shift_to_le_fu_431_p4;
wire   [1:0] tmp_78_fu_445_p1;
wire   [8:0] tmp_2_fu_449_p3;
wire   [6:0] tmp_5_fu_461_p3;
wire   [9:0] p_shl2_cast_fu_457_p1;
wire   [9:0] p_shl3_cast_fu_469_p1;
wire   [1:0] tmp_9_fu_479_p4;
wire   [8:0] tmp_10_fu_489_p3;
wire   [6:0] tmp_61_fu_501_p3;
wire   [9:0] p_shl_cast_fu_497_p1;
wire   [9:0] p_shl1_cast_fu_509_p1;
wire   [0:0] tmp_76_fu_405_p3;
wire   [0:0] tmp_77_fu_413_p3;
wire   [3:0] bw20_num_shift_to_le_fu_421_p4;
wire   [3:0] sh_V_3_fu_555_p2;
wire   [3:0] sh_V_1_fu_565_p2;
wire   [9:0] tmp_4_cast_fu_597_p1;
wire   [15:0] r_V_1_fu_674_p2;
wire  signed [30:0] bw20_a0_M_real_V_ca_1_fu_655_p1;
wire   [0:0] tmp_80_fu_667_p3;
wire  signed [30:0] r_V_1_cast_fu_678_p1;
wire   [30:0] r_V_fu_682_p2;
wire   [15:0] r_V_3_fu_695_p2;
wire  signed [30:0] bw20_a0_M_imag_V_ca_1_fu_658_p1;
wire  signed [30:0] r_V_3_cast_fu_699_p1;
wire   [30:0] r_V_2_fu_703_p2;
wire   [15:0] r_V_5_fu_716_p2;
wire  signed [30:0] bw20_a1_M_real_V_ca_1_fu_661_p1;
wire  signed [30:0] r_V_5_cast_fu_720_p1;
wire   [30:0] r_V_4_fu_724_p2;
wire   [15:0] r_V_7_fu_737_p2;
wire  signed [30:0] bw20_a1_M_imag_V_ca_1_fu_664_p1;
wire  signed [30:0] r_V_7_cast_fu_741_p1;
wire   [30:0] r_V_6_fu_745_p2;
wire   [7:0] mt1_fu_758_p2;
wire   [7:0] mt2_fu_803_p2;
wire   [7:0] mt3_fu_814_p2;
wire  signed [30:0] grp_fu_825_p0;
wire  signed [7:0] grp_fu_825_p1;
wire  signed [30:0] grp_fu_831_p0;
wire  signed [7:0] grp_fu_831_p1;
wire  signed [30:0] grp_fu_837_p0;
wire  signed [7:0] grp_fu_837_p1;
wire  signed [30:0] grp_fu_843_p0;
wire  signed [7:0] grp_fu_843_p1;
wire  signed [30:0] grp_fu_849_p0;
wire  signed [7:0] grp_fu_849_p1;
wire  signed [30:0] grp_fu_855_p0;
wire  signed [7:0] grp_fu_855_p1;
wire  signed [30:0] grp_fu_861_p0;
wire  signed [7:0] grp_fu_861_p1;
wire  signed [30:0] grp_fu_867_p0;
wire  signed [7:0] grp_fu_867_p1;
wire   [7:0] mt4_fu_933_p2;
wire   [7:0] mt5_fu_944_p2;
wire   [7:0] mt6_fu_955_p2;
wire   [7:0] mt_fu_966_p2;
wire   [23:0] r_V_20_fu_1005_p2;
wire  signed [31:0] p_r_V_cast_fu_977_p1;
wire  signed [31:0] r_V_20_cast_fu_1009_p1;
wire   [31:0] r_V_21_fu_1013_p2;
wire   [23:0] r_V_23_fu_1043_p2;
wire  signed [31:0] complex_M_imag_V_wr_1_fu_980_p1;
wire  signed [31:0] r_V_23_cast_fu_1047_p1;
wire   [31:0] r_V_24_fu_1051_p2;
wire   [23:0] r_V_26_fu_1081_p2;
wire  signed [31:0] p_r_V_4_cast_fu_991_p1;
wire  signed [31:0] r_V_26_cast_fu_1085_p1;
wire   [31:0] r_V_27_fu_1089_p2;
wire   [23:0] r_V_29_fu_1119_p2;
wire  signed [31:0] complex_M_imag_V_wr_5_fu_994_p1;
wire  signed [31:0] r_V_29_cast_fu_1123_p1;
wire   [31:0] r_V_30_fu_1127_p2;
wire  signed [7:0] grp_fu_1181_p1;
wire  signed [7:0] grp_fu_1186_p1;
wire  signed [7:0] grp_fu_1191_p1;
wire  signed [7:0] grp_fu_1196_p1;
wire  signed [7:0] grp_fu_1201_p1;
wire  signed [7:0] grp_fu_1206_p1;
wire  signed [7:0] grp_fu_1211_p1;
wire  signed [7:0] grp_fu_1216_p1;
wire  signed [7:0] grp_fu_1221_p1;
wire  signed [7:0] grp_fu_1226_p1;
wire  signed [7:0] grp_fu_1231_p1;
wire  signed [7:0] grp_fu_1236_p1;
wire  signed [7:0] grp_fu_1241_p1;
wire  signed [7:0] grp_fu_1246_p1;
wire  signed [7:0] grp_fu_1251_p1;
wire  signed [7:0] grp_fu_1256_p1;
wire   [31:0] p_neg1_fu_1261_p2;
wire   [31:0] p_neg2_fu_1276_p2;
wire   [31:0] p_neg3_fu_1291_p2;
wire   [31:0] p_neg4_fu_1306_p2;
wire   [15:0] tmp_13_fu_1321_p2;
wire   [15:0] tmp_17_fu_1332_p2;
wire   [15:0] tmp_21_fu_1343_p2;
wire   [15:0] tmp_25_fu_1354_p2;
wire   [31:0] p_neg5_fu_1541_p2;
wire   [31:0] p_neg6_fu_1556_p2;
wire   [31:0] p_neg7_fu_1571_p2;
wire   [31:0] p_neg8_fu_1586_p2;
wire   [31:0] p_neg9_fu_1601_p2;
wire   [31:0] p_neg10_fu_1616_p2;
wire   [31:0] p_neg11_fu_1631_p2;
wire   [31:0] p_neg_fu_1646_p2;
wire   [15:0] tmp_29_fu_1670_p2;
wire   [15:0] tmp_33_fu_1681_p2;
wire   [15:0] tmp_37_fu_1692_p2;
wire   [15:0] tmp_41_fu_1703_p2;
wire   [15:0] tmp_45_fu_1714_p2;
wire   [15:0] tmp_49_fu_1725_p2;
wire   [15:0] tmp_53_fu_1736_p2;
wire   [15:0] tmp_57_fu_1747_p2;
wire   [15:0] tmp_59_fu_1752_p3;
wire   [15:0] tmp_55_fu_1741_p3;
wire   [15:0] tmp_51_fu_1730_p3;
wire   [15:0] tmp_47_fu_1719_p3;
wire   [15:0] tmp_43_fu_1708_p3;
wire   [15:0] tmp_39_fu_1697_p3;
wire   [15:0] tmp_35_fu_1686_p3;
wire   [15:0] tmp_31_fu_1675_p3;
wire  signed [15:0] grp_fu_1779_p0;
wire  signed [15:0] grp_fu_1785_p0;
wire  signed [15:0] grp_fu_1791_p0;
wire  signed [15:0] grp_fu_1797_p0;
wire  signed [15:0] grp_fu_1803_p0;
wire  signed [7:0] grp_fu_1803_p1;
wire  signed [15:0] grp_fu_1809_p0;
wire  signed [7:0] grp_fu_1809_p1;
wire  signed [15:0] grp_fu_1815_p0;
wire  signed [7:0] grp_fu_1815_p1;
wire  signed [15:0] grp_fu_1821_p0;
wire  signed [7:0] grp_fu_1821_p1;
reg    grp_fu_825_ce;
reg    grp_fu_831_ce;
reg    grp_fu_837_ce;
reg    grp_fu_843_ce;
reg    grp_fu_849_ce;
reg    grp_fu_855_ce;
reg    grp_fu_861_ce;
reg    grp_fu_867_ce;
reg    grp_fu_1181_ce;
reg    grp_fu_1186_ce;
reg    grp_fu_1191_ce;
reg    grp_fu_1196_ce;
reg    grp_fu_1201_ce;
reg    grp_fu_1206_ce;
reg    grp_fu_1211_ce;
reg    grp_fu_1216_ce;
reg    grp_fu_1221_ce;
reg    grp_fu_1226_ce;
reg    grp_fu_1231_ce;
reg    grp_fu_1236_ce;
reg    grp_fu_1241_ce;
reg    grp_fu_1246_ce;
reg    grp_fu_1251_ce;
reg    grp_fu_1256_ce;
reg    grp_fu_1779_ce;
reg    grp_fu_1785_ce;
reg    grp_fu_1791_ce;
reg    grp_fu_1797_ce;
reg    grp_fu_1803_ce;
reg    grp_fu_1809_ce;
reg    grp_fu_1815_ce;
reg    grp_fu_1821_ce;
reg   [2:0] ap_NS_fsm;
wire    ap_CS_fsm_state20;
reg    ap_block_state20;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 d_o0_V_1_sel_rd = 1'b0;
#0 d_o0_V_1_sel_wr = 1'b0;
#0 d_o0_V_1_state = 2'd0;
#0 d_o1_V_1_sel_rd = 1'b0;
#0 d_o1_V_1_sel_wr = 1'b0;
#0 d_o1_V_1_state = 2'd0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
end

mixer_ddc_i_p2MHz #(
    .DataWidth( 8 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
i_p2MHz_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(i_p2MHz_address0),
    .ce0(i_p2MHz_ce0),
    .q0(i_p2MHz_q0)
);

mixer_ddc_q_p2MHz #(
    .DataWidth( 8 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
q_p2MHz_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(q_p2MHz_address0),
    .ce0(q_p2MHz_ce0),
    .q0(q_p2MHz_q0)
);

mixer_ddc_i_p0n5nbkb #(
    .DataWidth( 8 ),
    .AddressRange( 800 ),
    .AddressWidth( 10 ))
i_p0n5n10n15n20MHz_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(i_p0n5n10n15n20MHz_address0),
    .ce0(i_p0n5n10n15n20MHz_ce0),
    .q0(i_p0n5n10n15n20MHz_q0),
    .address1(i_p0n5n10n15n20MHz_address1),
    .ce1(i_p0n5n10n15n20MHz_ce1),
    .q1(i_p0n5n10n15n20MHz_q1),
    .address2(i_p0n5n10n15n20MHz_address2),
    .ce2(i_p0n5n10n15n20MHz_ce2),
    .q2(i_p0n5n10n15n20MHz_q2),
    .address3(i_p0n5n10n15n20MHz_address3),
    .ce3(i_p0n5n10n15n20MHz_ce3),
    .q3(i_p0n5n10n15n20MHz_q3),
    .address4(i_p0n5n10n15n20MHz_address4),
    .ce4(i_p0n5n10n15n20MHz_ce4),
    .q4(i_p0n5n10n15n20MHz_q4),
    .address5(i_p0n5n10n15n20MHz_address5),
    .ce5(i_p0n5n10n15n20MHz_ce5),
    .q5(i_p0n5n10n15n20MHz_q5)
);

mixer_ddc_q_p0n5ncud #(
    .DataWidth( 8 ),
    .AddressRange( 800 ),
    .AddressWidth( 10 ))
q_p0n5n10n15n20MHz_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(q_p0n5n10n15n20MHz_address0),
    .ce0(q_p0n5n10n15n20MHz_ce0),
    .q0(q_p0n5n10n15n20MHz_q0),
    .address1(q_p0n5n10n15n20MHz_address1),
    .ce1(q_p0n5n10n15n20MHz_ce1),
    .q1(q_p0n5n10n15n20MHz_q1),
    .address2(q_p0n5n10n15n20MHz_address2),
    .ce2(q_p0n5n10n15n20MHz_ce2),
    .q2(q_p0n5n10n15n20MHz_q2),
    .address3(q_p0n5n10n15n20MHz_address3),
    .ce3(q_p0n5n10n15n20MHz_ce3),
    .q3(q_p0n5n10n15n20MHz_q3),
    .address4(q_p0n5n10n15n20MHz_address4),
    .ce4(q_p0n5n10n15n20MHz_ce4),
    .q4(q_p0n5n10n15n20MHz_q4),
    .address5(q_p0n5n10n15n20MHz_address5),
    .ce5(q_p0n5n10n15n20MHz_ce5),
    .q5(q_p0n5n10n15n20MHz_q5)
);

mixer_ddc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_31sdEe_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_825_p0),
    .din1(grp_fu_825_p1),
    .ce(grp_fu_825_ce),
    .dout(grp_fu_825_p2)
);

mixer_ddc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_31sdEe_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_831_p0),
    .din1(grp_fu_831_p1),
    .ce(grp_fu_831_ce),
    .dout(grp_fu_831_p2)
);

mixer_ddc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_31sdEe_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_837_p0),
    .din1(grp_fu_837_p1),
    .ce(grp_fu_837_ce),
    .dout(grp_fu_837_p2)
);

mixer_ddc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_31sdEe_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_843_p0),
    .din1(grp_fu_843_p1),
    .ce(grp_fu_843_ce),
    .dout(grp_fu_843_p2)
);

mixer_ddc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_31sdEe_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_849_p0),
    .din1(grp_fu_849_p1),
    .ce(grp_fu_849_ce),
    .dout(grp_fu_849_p2)
);

mixer_ddc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_31sdEe_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_855_p0),
    .din1(grp_fu_855_p1),
    .ce(grp_fu_855_ce),
    .dout(grp_fu_855_p2)
);

mixer_ddc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_31sdEe_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_861_p0),
    .din1(grp_fu_861_p1),
    .ce(grp_fu_861_ce),
    .dout(grp_fu_861_p2)
);

mixer_ddc_mul_31sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_31sdEe_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_867_p0),
    .din1(grp_fu_867_p1),
    .ce(grp_fu_867_ce),
    .dout(grp_fu_867_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_8_reg_2402),
    .din1(grp_fu_1181_p1),
    .ce(grp_fu_1181_ce),
    .dout(grp_fu_1181_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_1_reg_2410),
    .din1(grp_fu_1186_p1),
    .ce(grp_fu_1186_ce),
    .dout(grp_fu_1186_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_8_reg_2402),
    .din1(grp_fu_1191_p1),
    .ce(grp_fu_1191_ce),
    .dout(grp_fu_1191_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_1_reg_2410),
    .din1(grp_fu_1196_p1),
    .ce(grp_fu_1196_ce),
    .dout(grp_fu_1196_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_8_reg_2402),
    .din1(grp_fu_1201_p1),
    .ce(grp_fu_1201_ce),
    .dout(grp_fu_1201_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_1_reg_2410),
    .din1(grp_fu_1206_p1),
    .ce(grp_fu_1206_ce),
    .dout(grp_fu_1206_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_8_reg_2402),
    .din1(grp_fu_1211_p1),
    .ce(grp_fu_1211_ce),
    .dout(grp_fu_1211_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_1_reg_2410),
    .din1(grp_fu_1216_p1),
    .ce(grp_fu_1216_ce),
    .dout(grp_fu_1216_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_9_reg_2418),
    .din1(grp_fu_1221_p1),
    .ce(grp_fu_1221_ce),
    .dout(grp_fu_1221_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_3_reg_2426),
    .din1(grp_fu_1226_p1),
    .ce(grp_fu_1226_ce),
    .dout(grp_fu_1226_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_9_reg_2418),
    .din1(grp_fu_1231_p1),
    .ce(grp_fu_1231_ce),
    .dout(grp_fu_1231_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_3_reg_2426),
    .din1(grp_fu_1236_p1),
    .ce(grp_fu_1236_ce),
    .dout(grp_fu_1236_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_9_reg_2418),
    .din1(grp_fu_1241_p1),
    .ce(grp_fu_1241_ce),
    .dout(grp_fu_1241_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_3_reg_2426),
    .din1(grp_fu_1246_p1),
    .ce(grp_fu_1246_ce),
    .dout(grp_fu_1246_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_V_9_reg_2418),
    .din1(grp_fu_1251_p1),
    .ce(grp_fu_1251_ce),
    .dout(grp_fu_1251_p2)
);

mixer_ddc_mul_32seOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mixer_ddc_mul_32seOg_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_r_M_imag_V_3_reg_2426),
    .din1(grp_fu_1256_p1),
    .ce(grp_fu_1256_ce),
    .dout(grp_fu_1256_p2)
);

mixer_ddc_mul_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mixer_ddc_mul_mulfYi_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1779_p0),
    .din1(ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2062),
    .ce(grp_fu_1779_ce),
    .dout(grp_fu_1779_p2)
);

mixer_ddc_mul_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mixer_ddc_mul_mulfYi_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1785_p0),
    .din1(r_V_14_reg_2136),
    .ce(grp_fu_1785_ce),
    .dout(grp_fu_1785_p2)
);

mixer_ddc_mul_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mixer_ddc_mul_mulfYi_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1791_p0),
    .din1(ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2073),
    .ce(grp_fu_1791_ce),
    .dout(grp_fu_1791_p2)
);

mixer_ddc_mul_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mixer_ddc_mul_mulfYi_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1797_p0),
    .din1(r_V_15_reg_2141),
    .ce(grp_fu_1797_ce),
    .dout(grp_fu_1797_p2)
);

mixer_ddc_mac_mulg8j #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mixer_ddc_mac_mulg8j_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1803_p0),
    .din1(grp_fu_1803_p1),
    .din2(p_i_i_reg_2254),
    .ce(grp_fu_1803_ce),
    .dout(grp_fu_1803_p3)
);

mixer_ddc_mac_mulhbi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mixer_ddc_mac_mulhbi_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1809_p0),
    .din1(grp_fu_1809_p1),
    .din2(p_2_i_i_cast_reg_2259),
    .ce(grp_fu_1809_ce),
    .dout(grp_fu_1809_p3)
);

mixer_ddc_mac_mulg8j #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mixer_ddc_mac_mulg8j_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1815_p0),
    .din1(grp_fu_1815_p1),
    .din2(p_i_i4_reg_2264),
    .ce(grp_fu_1815_ce),
    .dout(grp_fu_1815_p3)
);

mixer_ddc_mac_mulhbi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mixer_ddc_mac_mulhbi_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1821_p0),
    .din1(grp_fu_1821_p1),
    .din2(p_2_i_i4_cast_reg_2269),
    .ce(grp_fu_1821_ce),
    .dout(grp_fu_1821_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter17 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_o0_V_1_sel_rd <= 1'b0;
    end else begin
        if (((d_o0_V_1_ack_out == 1'b1) & (d_o0_V_1_vld_out == 1'b1))) begin
            d_o0_V_1_sel_rd <= ~d_o0_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_o0_V_1_sel_wr <= 1'b0;
    end else begin
        if (((d_o0_V_1_ack_in == 1'b1) & (d_o0_V_1_vld_in == 1'b1))) begin
            d_o0_V_1_sel_wr <= ~d_o0_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_o0_V_1_state <= 2'd0;
    end else begin
        if ((((d_o0_V_1_state == 2'd2) & (d_o0_V_1_vld_in == 1'b0)) | ((d_o0_V_1_state == 2'd3) & (d_o0_V_1_vld_in == 1'b0) & (d_o0_V_1_ack_out == 1'b1)))) begin
            d_o0_V_1_state <= 2'd2;
        end else if ((((d_o0_V_1_state == 2'd1) & (d_o0_V_1_ack_out == 1'b0)) | ((d_o0_V_1_state == 2'd3) & (d_o0_V_1_ack_out == 1'b0) & (d_o0_V_1_vld_in == 1'b1)))) begin
            d_o0_V_1_state <= 2'd1;
        end else if (((~((d_o0_V_1_vld_in == 1'b0) & (d_o0_V_1_ack_out == 1'b1)) & ~((d_o0_V_1_ack_out == 1'b0) & (d_o0_V_1_vld_in == 1'b1)) & (d_o0_V_1_state == 2'd3)) | ((d_o0_V_1_state == 2'd1) & (d_o0_V_1_ack_out == 1'b1)) | ((d_o0_V_1_state == 2'd2) & (d_o0_V_1_vld_in == 1'b1)))) begin
            d_o0_V_1_state <= 2'd3;
        end else begin
            d_o0_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_o1_V_1_sel_rd <= 1'b0;
    end else begin
        if (((d_o1_V_1_ack_out == 1'b1) & (d_o1_V_1_vld_out == 1'b1))) begin
            d_o1_V_1_sel_rd <= ~d_o1_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_o1_V_1_sel_wr <= 1'b0;
    end else begin
        if (((d_o1_V_1_ack_in == 1'b1) & (d_o1_V_1_vld_in == 1'b1))) begin
            d_o1_V_1_sel_wr <= ~d_o1_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_o1_V_1_state <= 2'd0;
    end else begin
        if ((((d_o1_V_1_state == 2'd2) & (d_o1_V_1_vld_in == 1'b0)) | ((d_o1_V_1_state == 2'd3) & (d_o1_V_1_vld_in == 1'b0) & (d_o1_V_1_ack_out == 1'b1)))) begin
            d_o1_V_1_state <= 2'd2;
        end else if ((((d_o1_V_1_state == 2'd1) & (d_o1_V_1_ack_out == 1'b0)) | ((d_o1_V_1_state == 2'd3) & (d_o1_V_1_ack_out == 1'b0) & (d_o1_V_1_vld_in == 1'b1)))) begin
            d_o1_V_1_state <= 2'd1;
        end else if (((~((d_o1_V_1_vld_in == 1'b0) & (d_o1_V_1_ack_out == 1'b1)) & ~((d_o1_V_1_ack_out == 1'b0) & (d_o1_V_1_vld_in == 1'b1)) & (d_o1_V_1_state == 2'd3)) | ((d_o1_V_1_state == 2'd1) & (d_o1_V_1_ack_out == 1'b1)) | ((d_o1_V_1_state == 2'd2) & (d_o1_V_1_vld_in == 1'b1)))) begin
            d_o1_V_1_state <= 2'd3;
        end else begin
            d_o1_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_575_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_330 <= i_1_fu_581_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        i_reg_330 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter10_tmp_s_reg_1935 <= ap_reg_pp0_iter9_tmp_s_reg_1935;
        ap_reg_pp0_iter11_tmp_15_reg_2562 <= tmp_15_reg_2562;
        ap_reg_pp0_iter11_tmp_19_reg_2567 <= tmp_19_reg_2567;
        ap_reg_pp0_iter11_tmp_23_reg_2572 <= tmp_23_reg_2572;
        ap_reg_pp0_iter11_tmp_27_reg_2577 <= tmp_27_reg_2577;
        ap_reg_pp0_iter11_tmp_s_reg_1935 <= ap_reg_pp0_iter10_tmp_s_reg_1935;
        ap_reg_pp0_iter12_tmp_15_reg_2562 <= ap_reg_pp0_iter11_tmp_15_reg_2562;
        ap_reg_pp0_iter12_tmp_19_reg_2567 <= ap_reg_pp0_iter11_tmp_19_reg_2567;
        ap_reg_pp0_iter12_tmp_23_reg_2572 <= ap_reg_pp0_iter11_tmp_23_reg_2572;
        ap_reg_pp0_iter12_tmp_27_reg_2577 <= ap_reg_pp0_iter11_tmp_27_reg_2577;
        ap_reg_pp0_iter12_tmp_s_reg_1935 <= ap_reg_pp0_iter11_tmp_s_reg_1935;
        ap_reg_pp0_iter13_tmp_15_reg_2562 <= ap_reg_pp0_iter12_tmp_15_reg_2562;
        ap_reg_pp0_iter13_tmp_19_reg_2567 <= ap_reg_pp0_iter12_tmp_19_reg_2567;
        ap_reg_pp0_iter13_tmp_23_reg_2572 <= ap_reg_pp0_iter12_tmp_23_reg_2572;
        ap_reg_pp0_iter13_tmp_27_reg_2577 <= ap_reg_pp0_iter12_tmp_27_reg_2577;
        ap_reg_pp0_iter13_tmp_s_reg_1935 <= ap_reg_pp0_iter12_tmp_s_reg_1935;
        ap_reg_pp0_iter14_tmp_15_reg_2562 <= ap_reg_pp0_iter13_tmp_15_reg_2562;
        ap_reg_pp0_iter14_tmp_19_reg_2567 <= ap_reg_pp0_iter13_tmp_19_reg_2567;
        ap_reg_pp0_iter14_tmp_23_reg_2572 <= ap_reg_pp0_iter13_tmp_23_reg_2572;
        ap_reg_pp0_iter14_tmp_27_reg_2577 <= ap_reg_pp0_iter13_tmp_27_reg_2577;
        ap_reg_pp0_iter14_tmp_s_reg_1935 <= ap_reg_pp0_iter13_tmp_s_reg_1935;
        ap_reg_pp0_iter15_tmp_15_reg_2562 <= ap_reg_pp0_iter14_tmp_15_reg_2562;
        ap_reg_pp0_iter15_tmp_19_reg_2567 <= ap_reg_pp0_iter14_tmp_19_reg_2567;
        ap_reg_pp0_iter15_tmp_23_reg_2572 <= ap_reg_pp0_iter14_tmp_23_reg_2572;
        ap_reg_pp0_iter15_tmp_27_reg_2577 <= ap_reg_pp0_iter14_tmp_27_reg_2577;
        ap_reg_pp0_iter15_tmp_30_reg_2707 <= tmp_30_reg_2707;
        ap_reg_pp0_iter15_tmp_34_reg_2717 <= tmp_34_reg_2717;
        ap_reg_pp0_iter15_tmp_38_reg_2727 <= tmp_38_reg_2727;
        ap_reg_pp0_iter15_tmp_42_reg_2737 <= tmp_42_reg_2737;
        ap_reg_pp0_iter15_tmp_46_reg_2747 <= tmp_46_reg_2747;
        ap_reg_pp0_iter15_tmp_50_reg_2757 <= tmp_50_reg_2757;
        ap_reg_pp0_iter15_tmp_54_reg_2767 <= tmp_54_reg_2767;
        ap_reg_pp0_iter15_tmp_58_reg_2777 <= tmp_58_reg_2777;
        ap_reg_pp0_iter15_tmp_86_reg_2702 <= tmp_86_reg_2702;
        ap_reg_pp0_iter15_tmp_87_reg_2712 <= tmp_87_reg_2712;
        ap_reg_pp0_iter15_tmp_88_reg_2722 <= tmp_88_reg_2722;
        ap_reg_pp0_iter15_tmp_89_reg_2732 <= tmp_89_reg_2732;
        ap_reg_pp0_iter15_tmp_90_reg_2742 <= tmp_90_reg_2742;
        ap_reg_pp0_iter15_tmp_91_reg_2752 <= tmp_91_reg_2752;
        ap_reg_pp0_iter15_tmp_92_reg_2762 <= tmp_92_reg_2762;
        ap_reg_pp0_iter15_tmp_93_reg_2772 <= tmp_93_reg_2772;
        ap_reg_pp0_iter15_tmp_s_reg_1935 <= ap_reg_pp0_iter14_tmp_s_reg_1935;
        ap_reg_pp0_iter16_tmp_s_reg_1935 <= ap_reg_pp0_iter15_tmp_s_reg_1935;
        ap_reg_pp0_iter2_i_p2MHz_load_reg_2020 <= i_p2MHz_load_reg_2020;
        ap_reg_pp0_iter2_p_Result_1_reg_2006 <= p_Result_1_reg_2006;
        ap_reg_pp0_iter2_p_Result_2_reg_2013 <= p_Result_2_reg_2013;
        ap_reg_pp0_iter2_p_Result_s_reg_1999 <= p_Result_s_reg_1999;
        ap_reg_pp0_iter2_tmp_4_cast4_reg_1944[7 : 0] <= ap_reg_pp0_iter1_tmp_4_cast4_reg_1944[7 : 0];
        ap_reg_pp0_iter2_tmp_79_reg_1992 <= tmp_79_reg_1992;
        ap_reg_pp0_iter2_tmp_s_reg_1935 <= ap_reg_pp0_iter1_tmp_s_reg_1935;
        ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2073 <= i_p0n5n10n15n20MHz_l_1_reg_2073;
        ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2062 <= i_p0n5n10n15n20MHz_l_reg_2062;
        ap_reg_pp0_iter3_p_Result_1_reg_2006 <= ap_reg_pp0_iter2_p_Result_1_reg_2006;
        ap_reg_pp0_iter3_p_Result_2_reg_2013 <= ap_reg_pp0_iter2_p_Result_2_reg_2013;
        ap_reg_pp0_iter3_p_Result_s_reg_1999 <= ap_reg_pp0_iter2_p_Result_s_reg_1999;
        ap_reg_pp0_iter3_tmp_4_cast4_reg_1944[7 : 0] <= ap_reg_pp0_iter2_tmp_4_cast4_reg_1944[7 : 0];
        ap_reg_pp0_iter3_tmp_79_reg_1992 <= ap_reg_pp0_iter2_tmp_79_reg_1992;
        ap_reg_pp0_iter3_tmp_s_reg_1935 <= ap_reg_pp0_iter2_tmp_s_reg_1935;
        ap_reg_pp0_iter4_p_Result_2_reg_2013 <= ap_reg_pp0_iter3_p_Result_2_reg_2013;
        ap_reg_pp0_iter4_p_Result_s_reg_1999 <= ap_reg_pp0_iter3_p_Result_s_reg_1999;
        ap_reg_pp0_iter4_tmp_4_cast4_reg_1944[7 : 0] <= ap_reg_pp0_iter3_tmp_4_cast4_reg_1944[7 : 0];
        ap_reg_pp0_iter4_tmp_s_reg_1935 <= ap_reg_pp0_iter3_tmp_s_reg_1935;
        ap_reg_pp0_iter5_tmp_s_reg_1935 <= ap_reg_pp0_iter4_tmp_s_reg_1935;
        ap_reg_pp0_iter6_tmp_s_reg_1935 <= ap_reg_pp0_iter5_tmp_s_reg_1935;
        ap_reg_pp0_iter7_tmp_s_reg_1935 <= ap_reg_pp0_iter6_tmp_s_reg_1935;
        ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_2_reg_2274 <= i_p0n5n10n15n20MHz_l_2_reg_2274;
        ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_3_reg_2285 <= i_p0n5n10n15n20MHz_l_3_reg_2285;
        ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_4_reg_2296 <= i_p0n5n10n15n20MHz_l_4_reg_2296;
        ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_5_reg_2307 <= i_p0n5n10n15n20MHz_l_5_reg_2307;
        ap_reg_pp0_iter8_tmp_s_reg_1935 <= ap_reg_pp0_iter7_tmp_s_reg_1935;
        ap_reg_pp0_iter9_tmp_14_reg_2444 <= tmp_14_reg_2444;
        ap_reg_pp0_iter9_tmp_18_reg_2459 <= tmp_18_reg_2459;
        ap_reg_pp0_iter9_tmp_22_reg_2474 <= tmp_22_reg_2474;
        ap_reg_pp0_iter9_tmp_26_reg_2489 <= tmp_26_reg_2489;
        ap_reg_pp0_iter9_tmp_82_reg_2439 <= tmp_82_reg_2439;
        ap_reg_pp0_iter9_tmp_83_reg_2454 <= tmp_83_reg_2454;
        ap_reg_pp0_iter9_tmp_84_reg_2469 <= tmp_84_reg_2469;
        ap_reg_pp0_iter9_tmp_85_reg_2484 <= tmp_85_reg_2484;
        ap_reg_pp0_iter9_tmp_s_reg_1935 <= ap_reg_pp0_iter8_tmp_s_reg_1935;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_tmp_4_cast4_reg_1944[7 : 0] <= tmp_4_cast4_reg_1944[7 : 0];
        ap_reg_pp0_iter1_tmp_s_reg_1935 <= tmp_s_reg_1935;
        tmp_s_reg_1935 <= tmp_s_fu_575_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter13_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        complex_M_imag_V_wr_2_reg_2667 <= complex_M_imag_V_wr_2_fu_1369_p2;
        complex_M_imag_V_wr_3_reg_2677 <= complex_M_imag_V_wr_3_fu_1377_p2;
        complex_M_imag_V_wr_6_reg_2687 <= complex_M_imag_V_wr_6_fu_1385_p2;
        complex_M_imag_V_wr_7_reg_2697 <= complex_M_imag_V_wr_7_fu_1393_p2;
        p_r_V_2_reg_2662 <= p_r_V_2_fu_1365_p2;
        p_r_V_3_reg_2672 <= p_r_V_3_fu_1373_p2;
        p_r_V_6_reg_2682 <= p_r_V_6_fu_1381_p2;
        p_r_V_7_reg_2692 <= p_r_V_7_fu_1389_p2;
        tmp_30_reg_2707 <= {{p_r_V_2_fu_1365_p2[27:12]}};
        tmp_34_reg_2717 <= {{complex_M_imag_V_wr_2_fu_1369_p2[27:12]}};
        tmp_38_reg_2727 <= {{p_r_V_6_fu_1381_p2[27:12]}};
        tmp_42_reg_2737 <= {{complex_M_imag_V_wr_6_fu_1385_p2[27:12]}};
        tmp_46_reg_2747 <= {{p_r_V_3_fu_1373_p2[27:12]}};
        tmp_50_reg_2757 <= {{complex_M_imag_V_wr_3_fu_1377_p2[27:12]}};
        tmp_54_reg_2767 <= {{p_r_V_7_fu_1389_p2[27:12]}};
        tmp_58_reg_2777 <= {{complex_M_imag_V_wr_7_fu_1393_p2[27:12]}};
        tmp_86_reg_2702 <= p_r_V_2_fu_1365_p2[32'd31];
        tmp_87_reg_2712 <= complex_M_imag_V_wr_2_fu_1369_p2[32'd31];
        tmp_88_reg_2722 <= p_r_V_6_fu_1381_p2[32'd31];
        tmp_89_reg_2732 <= complex_M_imag_V_wr_6_fu_1385_p2[32'd31];
        tmp_90_reg_2742 <= p_r_V_3_fu_1373_p2[32'd31];
        tmp_91_reg_2752 <= complex_M_imag_V_wr_3_fu_1377_p2[32'd31];
        tmp_92_reg_2762 <= p_r_V_7_fu_1389_p2[32'd31];
        tmp_93_reg_2772 <= complex_M_imag_V_wr_7_fu_1393_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter6_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        complex_M_imag_V_wr_4_reg_2356 <= grp_fu_1821_p3;
        complex_M_imag_V_wr_reg_2324 <= grp_fu_1809_p3;
        i_p0n5n10n15n20MHz_l_2_reg_2274 <= i_p0n5n10n15n20MHz_q2;
        i_p0n5n10n15n20MHz_l_3_reg_2285 <= i_p0n5n10n15n20MHz_q3;
        i_p0n5n10n15n20MHz_l_4_reg_2296 <= i_p0n5n10n15n20MHz_q4;
        i_p0n5n10n15n20MHz_l_5_reg_2307 <= i_p0n5n10n15n20MHz_q5;
        p_r_V_4_reg_2350 <= grp_fu_1815_p3;
        p_r_V_reg_2318 <= grp_fu_1803_p3;
        q_p0n5n10n15n20MHz_l_2_reg_2279 <= q_p0n5n10n15n20MHz_q2;
        q_p0n5n10n15n20MHz_l_3_reg_2290 <= q_p0n5n10n15n20MHz_q3;
        q_p0n5n10n15n20MHz_l_4_reg_2301 <= q_p0n5n10n15n20MHz_q4;
        q_p0n5n10n15n20MHz_l_5_reg_2312 <= q_p0n5n10n15n20MHz_q5;
    end
end

always @ (posedge ap_clk) begin
    if ((d_o0_V_1_load_A == 1'b1)) begin
        d_o0_V_1_payload_A <= p_Result_s_6_fu_1661_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((d_o0_V_1_load_B == 1'b1)) begin
        d_o0_V_1_payload_B <= p_Result_s_6_fu_1661_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((d_o1_V_1_load_A == 1'b1)) begin
        d_o1_V_1_payload_A <= p_Result_3_fu_1758_p9;
    end
end

always @ (posedge ap_clk) begin
    if ((d_o1_V_1_load_B == 1'b1)) begin
        d_o1_V_1_payload_B <= p_Result_3_fu_1758_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        i_p0n5n10n15n20MHz_l_1_reg_2073 <= i_p0n5n10n15n20MHz_q1;
        i_p0n5n10n15n20MHz_l_reg_2062 <= i_p0n5n10n15n20MHz_q0;
        q_p0n5n10n15n20MHz_l_1_reg_2078 <= q_p0n5n10n15n20MHz_q1;
        q_p0n5n10n15n20MHz_l_reg_2067 <= q_p0n5n10n15n20MHz_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_p2MHz_load_reg_2020 <= i_p2MHz_q0;
        p_Result_1_reg_2006 <= {{d_i_V_dout[47:32]}};
        p_Result_2_reg_2013 <= {{d_i_V_dout[63:48]}};
        p_Result_s_reg_1999 <= {{d_i_V_dout[31:16]}};
        q_p2MHz_load_reg_2025 <= q_p2MHz_q0;
        tmp_79_reg_1992 <= tmp_79_fu_621_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter6_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_1_i_i1_reg_2335 <= grp_fu_831_p2;
        p_1_i_i5_reg_2367 <= grp_fu_855_p2;
        p_2_i_i1_reg_2340 <= grp_fu_837_p2;
        p_2_i_i5_reg_2372 <= grp_fu_861_p2;
        p_3_i_i1_reg_2345 <= grp_fu_843_p2;
        p_3_i_i5_reg_2377 <= grp_fu_867_p2;
        p_i_i1_reg_2330 <= grp_fu_825_p2;
        p_i_i5_reg_2362 <= grp_fu_849_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter12_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_1_i_i2_reg_2587 <= grp_fu_1186_p2;
        p_1_i_i3_reg_2607 <= grp_fu_1206_p2;
        p_1_i_i6_reg_2627 <= grp_fu_1226_p2;
        p_1_i_i7_reg_2647 <= grp_fu_1246_p2;
        p_2_i_i2_reg_2592 <= grp_fu_1191_p2;
        p_2_i_i3_reg_2612 <= grp_fu_1211_p2;
        p_2_i_i6_reg_2632 <= grp_fu_1231_p2;
        p_2_i_i7_reg_2652 <= grp_fu_1251_p2;
        p_3_i_i2_reg_2597 <= grp_fu_1196_p2;
        p_3_i_i3_reg_2617 <= grp_fu_1216_p2;
        p_3_i_i6_reg_2637 <= grp_fu_1236_p2;
        p_3_i_i7_reg_2657 <= grp_fu_1256_p2;
        p_i_i2_reg_2582 <= grp_fu_1181_p2;
        p_i_i3_reg_2602 <= grp_fu_1201_p2;
        p_i_i6_reg_2622 <= grp_fu_1221_p2;
        p_i_i7_reg_2642 <= grp_fu_1241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter5_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_2_i_i4_cast_reg_2269 <= grp_fu_1797_p2;
        p_2_i_i_cast_reg_2259 <= grp_fu_1785_p2;
        p_i_i4_reg_2264 <= grp_fu_1791_p2;
        p_i_i_reg_2254 <= grp_fu_1779_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter7_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_r_M_imag_V_1_reg_2410 <= p_r_M_imag_V_1_fu_987_p2;
        p_r_M_imag_V_3_reg_2426 <= p_r_M_imag_V_3_fu_1001_p2;
        p_r_V_8_reg_2402 <= p_r_V_8_fu_983_p2;
        p_r_V_9_reg_2418 <= p_r_V_9_fu_997_p2;
        r_V_16_reg_2382 <= r_V_16_fu_938_p3;
        r_V_17_reg_2387 <= r_V_17_fu_949_p3;
        r_V_18_reg_2392 <= r_V_18_fu_960_p3;
        r_V_19_reg_2397 <= r_V_19_fu_971_p3;
        r_V_22_reg_2434 <= r_V_22_fu_1018_p3;
        r_V_25_reg_2449 <= r_V_25_fu_1056_p3;
        r_V_28_reg_2464 <= r_V_28_fu_1094_p3;
        r_V_31_reg_2479 <= r_V_31_fu_1132_p3;
        tmp_14_reg_2444 <= {{r_V_22_fu_1018_p3[21:6]}};
        tmp_18_reg_2459 <= {{r_V_25_fu_1056_p3[21:6]}};
        tmp_22_reg_2474 <= {{r_V_28_fu_1094_p3[21:6]}};
        tmp_26_reg_2489 <= {{r_V_31_fu_1132_p3[21:6]}};
        tmp_82_reg_2439 <= r_V_22_fu_1018_p3[32'd31];
        tmp_83_reg_2454 <= r_V_25_fu_1056_p3[32'd31];
        tmp_84_reg_2469 <= r_V_28_fu_1094_p3[32'd31];
        tmp_85_reg_2484 <= r_V_31_fu_1132_p3[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_14_reg_2136 <= r_V_14_fu_808_p3;
        r_V_15_reg_2141 <= r_V_15_fu_819_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_32_reg_2032 <= r_V_32_fu_687_p3;
        r_V_33_reg_2037 <= r_V_33_fu_708_p3;
        r_V_34_reg_2042 <= r_V_34_fu_729_p3;
        r_V_35_reg_2047 <= r_V_35_fu_750_p3;
        r_V_8_reg_2052 <= r_V_8_fu_763_p3;
        r_V_9_reg_2057 <= r_V_9_fu_769_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_82_reg_2439 == 1'd1) & (ap_reg_pp0_iter8_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_12_reg_2542 <= {{p_neg1_fu_1261_p2[21:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter9_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_15_reg_2562 <= tmp_15_fu_1326_p3;
        tmp_19_reg_2567 <= tmp_19_fu_1337_p3;
        tmp_23_reg_2572 <= tmp_23_fu_1348_p3;
        tmp_27_reg_2577 <= tmp_27_fu_1359_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_83_reg_2454 == 1'd1) & (ap_reg_pp0_iter8_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_16_reg_2547 <= {{p_neg2_fu_1276_p2[21:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_84_reg_2469 == 1'd1) & (ap_reg_pp0_iter8_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_20_reg_2552 <= {{p_neg3_fu_1291_p2[21:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_85_reg_2484 == 1'd1) & (ap_reg_pp0_iter8_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_24_reg_2557 <= {{p_neg4_fu_1306_p2[21:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_86_reg_2702 == 1'd1) & (ap_reg_pp0_iter14_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_28_reg_2782 <= {{p_neg5_fu_1541_p2[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_87_reg_2712 == 1'd1) & (ap_reg_pp0_iter14_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_32_reg_2787 <= {{p_neg6_fu_1556_p2[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_88_reg_2722 == 1'd1) & (ap_reg_pp0_iter14_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_36_reg_2792 <= {{p_neg7_fu_1571_p2[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_89_reg_2732 == 1'd1) & (ap_reg_pp0_iter14_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_40_reg_2797 <= {{p_neg8_fu_1586_p2[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_90_reg_2742 == 1'd1) & (ap_reg_pp0_iter14_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_44_reg_2802 <= {{p_neg9_fu_1601_p2[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_91_reg_2752 == 1'd1) & (ap_reg_pp0_iter14_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_48_reg_2807 <= {{p_neg10_fu_1616_p2[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_575_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_4_cast4_reg_1944[7 : 0] <= tmp_4_cast4_fu_593_p1[7 : 0];
        tmp_67_reg_1952 <= tmp_67_fu_601_p2;
        tmp_68_reg_1957 <= tmp_68_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_92_reg_2762 == 1'd1) & (ap_reg_pp0_iter14_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_52_reg_2812 <= {{p_neg11_fu_1631_p2[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_93_reg_2772 == 1'd1) & (ap_reg_pp0_iter14_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_56_reg_2817 <= {{p_neg_fu_1646_p2[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_60_reg_2176 <= tmp_60_fu_888_p1;
        tmp_8_reg_2170 <= tmp_8_fu_885_p1;
        val_assign_1_cast_reg_2158 <= val_assign_1_cast_fu_879_p1;
        val_assign_2_cast_reg_2164 <= val_assign_2_cast_fu_882_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_69_reg_2182 <= tmp_69_fu_891_p2;
        tmp_70_reg_2187 <= tmp_70_fu_895_p2;
        tmp_71_reg_2192 <= tmp_71_fu_899_p2;
        tmp_72_reg_2197 <= tmp_72_fu_903_p2;
    end
end

always @ (*) begin
    if ((tmp_s_fu_575_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_i_V_blk_n = d_i_V_empty_n;
    end else begin
        d_i_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_i_V_read = 1'b1;
    end else begin
        d_i_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((d_o0_V_1_sel == 1'b1)) begin
        d_o0_V_1_data_out = d_o0_V_1_payload_B;
    end else begin
        d_o0_V_1_data_out = d_o0_V_1_payload_A;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter15_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        d_o0_V_1_vld_in = 1'b1;
    end else begin
        d_o0_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_reg_pp0_iter16_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter17 == 1'b1)) | ((ap_reg_pp0_iter15_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter16 == 1'b1)))) begin
        d_o0_V_TDATA_blk_n = d_o0_V_1_state[1'd1];
    end else begin
        d_o0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((d_o1_V_1_sel == 1'b1)) begin
        d_o1_V_1_data_out = d_o1_V_1_payload_B;
    end else begin
        d_o1_V_1_data_out = d_o1_V_1_payload_A;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter15_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        d_o1_V_1_vld_in = 1'b1;
    end else begin
        d_o1_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_reg_pp0_iter16_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter17 == 1'b1)) | ((ap_reg_pp0_iter15_tmp_s_reg_1935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter16 == 1'b1)))) begin
        d_o1_V_TDATA_blk_n = d_o1_V_1_state[1'd1];
    end else begin
        d_o1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1181_ce = 1'b1;
    end else begin
        grp_fu_1181_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1186_ce = 1'b1;
    end else begin
        grp_fu_1186_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1191_ce = 1'b1;
    end else begin
        grp_fu_1191_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1196_ce = 1'b1;
    end else begin
        grp_fu_1196_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1201_ce = 1'b1;
    end else begin
        grp_fu_1201_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1206_ce = 1'b1;
    end else begin
        grp_fu_1206_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1211_ce = 1'b1;
    end else begin
        grp_fu_1211_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1216_ce = 1'b1;
    end else begin
        grp_fu_1216_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1221_ce = 1'b1;
    end else begin
        grp_fu_1221_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1226_ce = 1'b1;
    end else begin
        grp_fu_1226_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1231_ce = 1'b1;
    end else begin
        grp_fu_1231_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1236_ce = 1'b1;
    end else begin
        grp_fu_1236_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1241_ce = 1'b1;
    end else begin
        grp_fu_1241_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1246_ce = 1'b1;
    end else begin
        grp_fu_1246_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1251_ce = 1'b1;
    end else begin
        grp_fu_1251_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1256_ce = 1'b1;
    end else begin
        grp_fu_1256_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1779_ce = 1'b1;
    end else begin
        grp_fu_1779_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1785_ce = 1'b1;
    end else begin
        grp_fu_1785_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1791_ce = 1'b1;
    end else begin
        grp_fu_1791_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1797_ce = 1'b1;
    end else begin
        grp_fu_1797_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1803_ce = 1'b1;
    end else begin
        grp_fu_1803_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1809_ce = 1'b1;
    end else begin
        grp_fu_1809_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1815_ce = 1'b1;
    end else begin
        grp_fu_1815_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1821_ce = 1'b1;
    end else begin
        grp_fu_1821_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_825_ce = 1'b1;
    end else begin
        grp_fu_825_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_831_ce = 1'b1;
    end else begin
        grp_fu_831_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_837_ce = 1'b1;
    end else begin
        grp_fu_837_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_843_ce = 1'b1;
    end else begin
        grp_fu_843_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_849_ce = 1'b1;
    end else begin
        grp_fu_849_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_855_ce = 1'b1;
    end else begin
        grp_fu_855_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_861_ce = 1'b1;
    end else begin
        grp_fu_861_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_867_ce = 1'b1;
    end else begin
        grp_fu_867_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_p0n5n10n15n20MHz_ce0 = 1'b1;
    end else begin
        i_p0n5n10n15n20MHz_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_p0n5n10n15n20MHz_ce1 = 1'b1;
    end else begin
        i_p0n5n10n15n20MHz_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        i_p0n5n10n15n20MHz_ce2 = 1'b1;
    end else begin
        i_p0n5n10n15n20MHz_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        i_p0n5n10n15n20MHz_ce3 = 1'b1;
    end else begin
        i_p0n5n10n15n20MHz_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        i_p0n5n10n15n20MHz_ce4 = 1'b1;
    end else begin
        i_p0n5n10n15n20MHz_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        i_p0n5n10n15n20MHz_ce5 = 1'b1;
    end else begin
        i_p0n5n10n15n20MHz_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_p2MHz_ce0 = 1'b1;
    end else begin
        i_p2MHz_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_p0n5n10n15n20MHz_ce0 = 1'b1;
    end else begin
        q_p0n5n10n15n20MHz_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_p0n5n10n15n20MHz_ce1 = 1'b1;
    end else begin
        q_p0n5n10n15n20MHz_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        q_p0n5n10n15n20MHz_ce2 = 1'b1;
    end else begin
        q_p0n5n10n15n20MHz_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        q_p0n5n10n15n20MHz_ce3 = 1'b1;
    end else begin
        q_p0n5n10n15n20MHz_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        q_p0n5n10n15n20MHz_ce4 = 1'b1;
    end else begin
        q_p0n5n10n15n20MHz_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        q_p0n5n10n15n20MHz_ce5 = 1'b1;
    end else begin
        q_p0n5n10n15n20MHz_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_p2MHz_ce0 = 1'b1;
    end else begin
        q_p2MHz_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_s_fu_575_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_s_fu_575_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            if ((~((d_o1_V_1_ack_in == 1'b0) | (d_o0_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((tmp_s_reg_1935 == 1'd0) & (d_i_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp0_iter17 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp0_iter16 == 1'b1)) | ((tmp_s_reg_1935 == 1'd0) & (d_i_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp0_iter17 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp0_iter16 == 1'b1)) | ((tmp_s_reg_1935 == 1'd0) & (d_i_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_io = (((ap_reg_pp0_iter15_tmp_s_reg_1935 == 1'd0) & (d_o1_V_1_ack_in == 1'b0)) | ((ap_reg_pp0_iter15_tmp_s_reg_1935 == 1'd0) & (d_o0_V_1_ack_in == 1'b0)));
end

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_io = (((ap_reg_pp0_iter16_tmp_s_reg_1935 == 1'd0) & (d_o1_V_1_ack_in == 1'b0)) | ((ap_reg_pp0_iter16_tmp_s_reg_1935 == 1'd0) & (d_o0_V_1_ack_in == 1'b0)));
end

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20 = ((d_o1_V_1_ack_in == 1'b0) | (d_o0_V_1_ack_in == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((tmp_s_reg_1935 == 1'd0) & (d_i_V_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign b0_M_imag_V_fu_797_p1 = $signed(r_V_8_reg_2052);

assign b1_M_imag_V_fu_800_p1 = $signed(r_V_9_reg_2057);

assign b1_M_real_V_fu_794_p1 = $signed(ap_reg_pp0_iter2_i_p2MHz_load_reg_2020);

assign bw02_num_shift_to_le_fu_431_p4 = {{cfg0_V[27:24]}};

assign bw20_a0_M_imag_V_ca_1_fu_658_p1 = $signed(p_Result_s_reg_1999);

assign bw20_a0_M_imag_V_ca_fu_907_p1 = $signed(ap_reg_pp0_iter4_p_Result_s_reg_1999);

assign bw20_a0_M_real_V_ca_1_fu_655_p1 = $signed(tmp_79_reg_1992);

assign bw20_a0_M_real_V_ca_fu_873_p1 = $signed(ap_reg_pp0_iter3_tmp_79_reg_1992);

assign bw20_a1_M_imag_V_ca_1_fu_664_p1 = $signed(p_Result_2_reg_2013);

assign bw20_a1_M_imag_V_ca_fu_910_p1 = $signed(ap_reg_pp0_iter4_p_Result_2_reg_2013);

assign bw20_a1_M_real_V_ca_1_fu_661_p1 = $signed(p_Result_1_reg_2006);

assign bw20_a1_M_real_V_ca_fu_876_p1 = $signed(ap_reg_pp0_iter3_p_Result_1_reg_2006);

assign bw20_num_shift_to_le_fu_421_p4 = {{cfg0_V[31:28]}};

assign c01_M_imag_V_fu_1160_p1 = $signed(r_V_16_reg_2382);

assign c01_M_real_V_fu_1157_p1 = $signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_2_reg_2274);

assign c02_M_imag_V_fu_1166_p1 = $signed(r_V_17_reg_2387);

assign c02_M_real_V_fu_1163_p1 = $signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_3_reg_2285);

assign c11_M_imag_V_fu_1172_p1 = $signed(r_V_18_reg_2392);

assign c11_M_real_V_fu_1169_p1 = $signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_4_reg_2296);

assign c12_M_imag_V_fu_1178_p1 = $signed(r_V_19_reg_2397);

assign c12_M_real_V_fu_1175_p1 = $signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_5_reg_2307);

assign complex_M_imag_V_wr_1_fu_980_p1 = complex_M_imag_V_wr_reg_2324;

assign complex_M_imag_V_wr_2_fu_1369_p2 = (p_2_i_i2_reg_2592 + p_3_i_i2_reg_2597);

assign complex_M_imag_V_wr_3_fu_1377_p2 = (p_2_i_i3_reg_2612 + p_3_i_i3_reg_2617);

assign complex_M_imag_V_wr_5_fu_994_p1 = complex_M_imag_V_wr_4_reg_2356;

assign complex_M_imag_V_wr_6_fu_1385_p2 = (p_2_i_i6_reg_2632 + p_3_i_i6_reg_2637);

assign complex_M_imag_V_wr_7_fu_1393_p2 = (p_2_i_i7_reg_2652 + p_3_i_i7_reg_2657);

assign d_o0_V_1_ack_in = d_o0_V_1_state[1'd1];

assign d_o0_V_1_ack_out = d_o0_V_TREADY;

assign d_o0_V_1_load_A = (~d_o0_V_1_sel_wr & d_o0_V_1_state_cmp_full);

assign d_o0_V_1_load_B = (d_o0_V_1_state_cmp_full & d_o0_V_1_sel_wr);

assign d_o0_V_1_sel = d_o0_V_1_sel_rd;

assign d_o0_V_1_state_cmp_full = ((d_o0_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign d_o0_V_1_vld_out = d_o0_V_1_state[1'd0];

assign d_o0_V_TDATA = d_o0_V_1_data_out;

assign d_o0_V_TVALID = d_o0_V_1_state[1'd0];

assign d_o1_V_1_ack_in = d_o1_V_1_state[1'd1];

assign d_o1_V_1_ack_out = d_o1_V_TREADY;

assign d_o1_V_1_load_A = (~d_o1_V_1_sel_wr & d_o1_V_1_state_cmp_full);

assign d_o1_V_1_load_B = (d_o1_V_1_state_cmp_full & d_o1_V_1_sel_wr);

assign d_o1_V_1_sel = d_o1_V_1_sel_rd;

assign d_o1_V_1_state_cmp_full = ((d_o1_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign d_o1_V_1_vld_out = d_o1_V_1_state[1'd0];

assign d_o1_V_TDATA = d_o1_V_1_data_out;

assign d_o1_V_TVALID = d_o1_V_1_state[1'd0];

assign grp_fu_1181_p1 = c01_M_real_V_fu_1157_p1;

assign grp_fu_1186_p1 = c01_M_imag_V_fu_1160_p1;

assign grp_fu_1191_p1 = c01_M_imag_V_fu_1160_p1;

assign grp_fu_1196_p1 = c01_M_real_V_fu_1157_p1;

assign grp_fu_1201_p1 = c02_M_real_V_fu_1163_p1;

assign grp_fu_1206_p1 = c02_M_imag_V_fu_1166_p1;

assign grp_fu_1211_p1 = c02_M_imag_V_fu_1166_p1;

assign grp_fu_1216_p1 = c02_M_real_V_fu_1163_p1;

assign grp_fu_1221_p1 = c11_M_real_V_fu_1169_p1;

assign grp_fu_1226_p1 = c11_M_imag_V_fu_1172_p1;

assign grp_fu_1231_p1 = c11_M_imag_V_fu_1172_p1;

assign grp_fu_1236_p1 = c11_M_real_V_fu_1169_p1;

assign grp_fu_1241_p1 = c12_M_real_V_fu_1175_p1;

assign grp_fu_1246_p1 = c12_M_imag_V_fu_1178_p1;

assign grp_fu_1251_p1 = c12_M_imag_V_fu_1178_p1;

assign grp_fu_1256_p1 = c12_M_real_V_fu_1175_p1;

assign grp_fu_1779_p0 = bw20_a0_M_real_V_ca_fu_873_p1;

assign grp_fu_1785_p0 = bw20_a0_M_real_V_ca_fu_873_p1;

assign grp_fu_1791_p0 = bw20_a1_M_real_V_ca_fu_876_p1;

assign grp_fu_1797_p0 = bw20_a1_M_real_V_ca_fu_876_p1;

assign grp_fu_1803_p0 = bw20_a0_M_imag_V_ca_fu_907_p1;

assign grp_fu_1803_p1 = tmp_8_reg_2170;

assign grp_fu_1809_p0 = bw20_a0_M_imag_V_ca_fu_907_p1;

assign grp_fu_1809_p1 = val_assign_1_cast_reg_2158;

assign grp_fu_1815_p0 = bw20_a1_M_imag_V_ca_fu_910_p1;

assign grp_fu_1815_p1 = tmp_60_reg_2176;

assign grp_fu_1821_p0 = bw20_a1_M_imag_V_ca_fu_910_p1;

assign grp_fu_1821_p1 = val_assign_2_cast_reg_2164;

assign grp_fu_825_p0 = r_V_32_cast_fu_782_p1;

assign grp_fu_825_p1 = b1_M_real_V_fu_794_p1;

assign grp_fu_831_p0 = r_V_33_cast_fu_785_p1;

assign grp_fu_831_p1 = b0_M_imag_V_fu_797_p1;

assign grp_fu_837_p0 = r_V_32_cast_fu_782_p1;

assign grp_fu_837_p1 = b0_M_imag_V_fu_797_p1;

assign grp_fu_843_p0 = r_V_33_cast_fu_785_p1;

assign grp_fu_843_p1 = b1_M_real_V_fu_794_p1;

assign grp_fu_849_p0 = r_V_34_cast_fu_788_p1;

assign grp_fu_849_p1 = b1_M_real_V_fu_794_p1;

assign grp_fu_855_p0 = r_V_35_cast_fu_791_p1;

assign grp_fu_855_p1 = b1_M_imag_V_fu_800_p1;

assign grp_fu_861_p0 = r_V_34_cast_fu_788_p1;

assign grp_fu_861_p1 = b1_M_imag_V_fu_800_p1;

assign grp_fu_867_p0 = r_V_35_cast_fu_791_p1;

assign grp_fu_867_p1 = b1_M_real_V_fu_794_p1;

assign i_1_fu_581_p2 = (i_reg_330 + 8'd1);

assign i_p0n5n10n15n20MHz_address0 = tmp_67_cast_fu_611_p1;

assign i_p0n5n10n15n20MHz_address1 = tmp_68_cast_fu_616_p1;

assign i_p0n5n10n15n20MHz_address2 = tmp_69_cast_fu_913_p1;

assign i_p0n5n10n15n20MHz_address3 = tmp_70_cast_fu_918_p1;

assign i_p0n5n10n15n20MHz_address4 = tmp_71_cast_fu_923_p1;

assign i_p0n5n10n15n20MHz_address5 = tmp_72_cast_fu_928_p1;

assign i_p2MHz_address0 = tmp_4_fu_587_p1;

assign mt1_fu_758_p2 = (8'd0 - q_p2MHz_load_reg_2025);

assign mt2_fu_803_p2 = (8'd0 - q_p0n5n10n15n20MHz_l_reg_2067);

assign mt3_fu_814_p2 = (8'd0 - q_p0n5n10n15n20MHz_l_1_reg_2078);

assign mt4_fu_933_p2 = (8'd0 - q_p0n5n10n15n20MHz_l_2_reg_2279);

assign mt5_fu_944_p2 = (8'd0 - q_p0n5n10n15n20MHz_l_3_reg_2290);

assign mt6_fu_955_p2 = (8'd0 - q_p0n5n10n15n20MHz_l_4_reg_2301);

assign mt_fu_966_p2 = (8'd0 - q_p0n5n10n15n20MHz_l_5_reg_2312);

assign p_Result_3_fu_1758_p9 = {{{{{{{{tmp_59_fu_1752_p3}, {tmp_55_fu_1741_p3}}, {tmp_51_fu_1730_p3}}, {tmp_47_fu_1719_p3}}, {tmp_43_fu_1708_p3}}, {tmp_39_fu_1697_p3}}, {tmp_35_fu_1686_p3}}, {tmp_31_fu_1675_p3}};

assign p_Result_s_6_fu_1661_p5 = {{{{ap_reg_pp0_iter15_tmp_27_reg_2577}, {ap_reg_pp0_iter15_tmp_23_reg_2572}}, {ap_reg_pp0_iter15_tmp_19_reg_2567}}, {ap_reg_pp0_iter15_tmp_15_reg_2562}};

assign p_neg10_fu_1616_p2 = (32'd0 - complex_M_imag_V_wr_3_reg_2677);

assign p_neg11_fu_1631_p2 = (32'd0 - p_r_V_7_reg_2692);

assign p_neg1_fu_1261_p2 = (32'd0 - r_V_22_reg_2434);

assign p_neg2_fu_1276_p2 = (32'd0 - r_V_25_reg_2449);

assign p_neg3_fu_1291_p2 = (32'd0 - r_V_28_reg_2464);

assign p_neg4_fu_1306_p2 = (32'd0 - r_V_31_reg_2479);

assign p_neg5_fu_1541_p2 = (32'd0 - p_r_V_2_reg_2662);

assign p_neg6_fu_1556_p2 = (32'd0 - complex_M_imag_V_wr_2_reg_2667);

assign p_neg7_fu_1571_p2 = (32'd0 - p_r_V_6_reg_2682);

assign p_neg8_fu_1586_p2 = (32'd0 - complex_M_imag_V_wr_6_reg_2687);

assign p_neg9_fu_1601_p2 = (32'd0 - p_r_V_3_reg_2672);

assign p_neg_fu_1646_p2 = (32'd0 - complex_M_imag_V_wr_7_reg_2697);

assign p_r_M_imag_V_1_fu_987_p2 = (p_2_i_i1_reg_2340 + p_3_i_i1_reg_2345);

assign p_r_M_imag_V_3_fu_1001_p2 = (p_2_i_i5_reg_2372 + p_3_i_i5_reg_2377);

assign p_r_V_2_fu_1365_p2 = (p_i_i2_reg_2582 - p_1_i_i2_reg_2587);

assign p_r_V_3_fu_1373_p2 = (p_i_i3_reg_2602 - p_1_i_i3_reg_2607);

assign p_r_V_4_cast_fu_991_p1 = p_r_V_4_reg_2350;

assign p_r_V_6_fu_1381_p2 = (p_i_i6_reg_2622 - p_1_i_i6_reg_2627);

assign p_r_V_7_fu_1389_p2 = (p_i_i7_reg_2642 - p_1_i_i7_reg_2647);

assign p_r_V_8_fu_983_p2 = (p_i_i1_reg_2330 - p_1_i_i1_reg_2335);

assign p_r_V_9_fu_997_p2 = (p_i_i5_reg_2362 - p_1_i_i5_reg_2367);

assign p_r_V_cast_fu_977_p1 = p_r_V_reg_2318;

assign p_shl1_cast_fu_509_p1 = tmp_61_fu_501_p3;

assign p_shl2_cast_fu_457_p1 = tmp_2_fu_449_p3;

assign p_shl3_cast_fu_469_p1 = tmp_5_fu_461_p3;

assign p_shl_cast_fu_497_p1 = tmp_10_fu_489_p3;

assign q_p0n5n10n15n20MHz_address0 = tmp_67_cast_fu_611_p1;

assign q_p0n5n10n15n20MHz_address1 = tmp_68_cast_fu_616_p1;

assign q_p0n5n10n15n20MHz_address2 = tmp_69_cast_fu_913_p1;

assign q_p0n5n10n15n20MHz_address3 = tmp_70_cast_fu_918_p1;

assign q_p0n5n10n15n20MHz_address4 = tmp_71_cast_fu_923_p1;

assign q_p0n5n10n15n20MHz_address5 = tmp_72_cast_fu_928_p1;

assign q_p2MHz_address0 = tmp_4_fu_587_p1;

assign r_V_14_fu_808_p3 = ((tmp_1_fu_341_p3[0:0] === 1'b1) ? mt2_fu_803_p2 : q_p0n5n10n15n20MHz_l_reg_2067);

assign r_V_15_fu_819_p3 = ((tmp_65_fu_373_p3[0:0] === 1'b1) ? mt3_fu_814_p2 : q_p0n5n10n15n20MHz_l_1_reg_2078);

assign r_V_16_fu_938_p3 = ((tmp_11_fu_357_p3[0:0] === 1'b1) ? mt4_fu_933_p2 : q_p0n5n10n15n20MHz_l_2_reg_2279);

assign r_V_17_fu_949_p3 = ((tmp_63_fu_365_p3[0:0] === 1'b1) ? mt5_fu_944_p2 : q_p0n5n10n15n20MHz_l_3_reg_2290);

assign r_V_18_fu_960_p3 = ((tmp_74_fu_389_p3[0:0] === 1'b1) ? mt6_fu_955_p2 : q_p0n5n10n15n20MHz_l_4_reg_2301);

assign r_V_19_fu_971_p3 = ((tmp_75_fu_397_p3[0:0] === 1'b1) ? mt_fu_966_p2 : q_p0n5n10n15n20MHz_l_5_reg_2312);

assign r_V_1_cast_fu_678_p1 = $signed(r_V_1_fu_674_p2);

assign r_V_1_fu_674_p2 = $signed(tmp_79_reg_1992) >>> tmp_9_cast_fu_571_p1;

assign r_V_20_cast_fu_1009_p1 = $signed(r_V_20_fu_1005_p2);

assign r_V_20_fu_1005_p2 = $signed(p_r_V_reg_2318) >>> tmp_8_cast_fu_561_p1;

assign r_V_21_fu_1013_p2 = p_r_V_cast_fu_977_p1 << tmp_7_fu_551_p1;

assign r_V_22_fu_1018_p3 = ((tmp_81_fu_775_p3[0:0] === 1'b1) ? r_V_20_cast_fu_1009_p1 : r_V_21_fu_1013_p2);

assign r_V_23_cast_fu_1047_p1 = $signed(r_V_23_fu_1043_p2);

assign r_V_23_fu_1043_p2 = $signed(complex_M_imag_V_wr_reg_2324) >>> tmp_8_cast_fu_561_p1;

assign r_V_24_fu_1051_p2 = complex_M_imag_V_wr_1_fu_980_p1 << tmp_7_fu_551_p1;

assign r_V_25_fu_1056_p3 = ((tmp_81_fu_775_p3[0:0] === 1'b1) ? r_V_23_cast_fu_1047_p1 : r_V_24_fu_1051_p2);

assign r_V_26_cast_fu_1085_p1 = $signed(r_V_26_fu_1081_p2);

assign r_V_26_fu_1081_p2 = $signed(p_r_V_4_reg_2350) >>> tmp_8_cast_fu_561_p1;

assign r_V_27_fu_1089_p2 = p_r_V_4_cast_fu_991_p1 << tmp_7_fu_551_p1;

assign r_V_28_fu_1094_p3 = ((tmp_81_fu_775_p3[0:0] === 1'b1) ? r_V_26_cast_fu_1085_p1 : r_V_27_fu_1089_p2);

assign r_V_29_cast_fu_1123_p1 = $signed(r_V_29_fu_1119_p2);

assign r_V_29_fu_1119_p2 = $signed(complex_M_imag_V_wr_4_reg_2356) >>> tmp_8_cast_fu_561_p1;

assign r_V_2_fu_703_p2 = bw20_a0_M_imag_V_ca_1_fu_658_p1 << tmp_cast_fu_441_p1;

assign r_V_30_fu_1127_p2 = complex_M_imag_V_wr_5_fu_994_p1 << tmp_7_fu_551_p1;

assign r_V_31_fu_1132_p3 = ((tmp_81_fu_775_p3[0:0] === 1'b1) ? r_V_29_cast_fu_1123_p1 : r_V_30_fu_1127_p2);

assign r_V_32_cast_fu_782_p1 = $signed(r_V_32_reg_2032);

assign r_V_32_fu_687_p3 = ((tmp_80_fu_667_p3[0:0] === 1'b1) ? r_V_1_cast_fu_678_p1 : r_V_fu_682_p2);

assign r_V_33_cast_fu_785_p1 = $signed(r_V_33_reg_2037);

assign r_V_33_fu_708_p3 = ((tmp_80_fu_667_p3[0:0] === 1'b1) ? r_V_3_cast_fu_699_p1 : r_V_2_fu_703_p2);

assign r_V_34_cast_fu_788_p1 = $signed(r_V_34_reg_2042);

assign r_V_34_fu_729_p3 = ((tmp_80_fu_667_p3[0:0] === 1'b1) ? r_V_5_cast_fu_720_p1 : r_V_4_fu_724_p2);

assign r_V_35_cast_fu_791_p1 = $signed(r_V_35_reg_2047);

assign r_V_35_fu_750_p3 = ((tmp_80_fu_667_p3[0:0] === 1'b1) ? r_V_7_cast_fu_741_p1 : r_V_6_fu_745_p2);

assign r_V_3_cast_fu_699_p1 = $signed(r_V_3_fu_695_p2);

assign r_V_3_fu_695_p2 = $signed(p_Result_s_reg_1999) >>> tmp_9_cast_fu_571_p1;

assign r_V_4_fu_724_p2 = bw20_a1_M_real_V_ca_1_fu_661_p1 << tmp_cast_fu_441_p1;

assign r_V_5_cast_fu_720_p1 = $signed(r_V_5_fu_716_p2);

assign r_V_5_fu_716_p2 = $signed(p_Result_1_reg_2006) >>> tmp_9_cast_fu_571_p1;

assign r_V_6_fu_745_p2 = bw20_a1_M_imag_V_ca_1_fu_664_p1 << tmp_cast_fu_441_p1;

assign r_V_7_cast_fu_741_p1 = $signed(r_V_7_fu_737_p2);

assign r_V_7_fu_737_p2 = $signed(p_Result_2_reg_2013) >>> tmp_9_cast_fu_571_p1;

assign r_V_8_fu_763_p3 = ((tmp_3_fu_349_p3[0:0] === 1'b1) ? mt1_fu_758_p2 : q_p2MHz_load_reg_2025);

assign r_V_9_fu_769_p3 = ((tmp_73_fu_381_p3[0:0] === 1'b1) ? mt1_fu_758_p2 : q_p2MHz_load_reg_2025);

assign r_V_fu_682_p2 = bw20_a0_M_real_V_ca_1_fu_655_p1 << tmp_cast_fu_441_p1;

assign sh_V_1_fu_565_p2 = (4'd0 - bw02_num_shift_to_le_fu_431_p4);

assign sh_V_3_fu_555_p2 = (4'd0 - bw20_num_shift_to_le_fu_421_p4);

assign tmp_10_fu_489_p3 = {{tmp_9_fu_479_p4}, {7'd0}};

assign tmp_11_fu_357_p3 = cfg0_V[32'd4];

assign tmp_13_fu_1321_p2 = (16'd0 - tmp_12_reg_2542);

assign tmp_15_fu_1326_p3 = ((ap_reg_pp0_iter9_tmp_82_reg_2439[0:0] === 1'b1) ? tmp_13_fu_1321_p2 : ap_reg_pp0_iter9_tmp_14_reg_2444);

assign tmp_17_fu_1332_p2 = (16'd0 - tmp_16_reg_2547);

assign tmp_19_fu_1337_p3 = ((ap_reg_pp0_iter9_tmp_83_reg_2454[0:0] === 1'b1) ? tmp_17_fu_1332_p2 : ap_reg_pp0_iter9_tmp_18_reg_2459);

assign tmp_1_fu_341_p3 = cfg0_V[32'd2];

assign tmp_21_fu_1343_p2 = (16'd0 - tmp_20_reg_2552);

assign tmp_23_fu_1348_p3 = ((ap_reg_pp0_iter9_tmp_84_reg_2469[0:0] === 1'b1) ? tmp_21_fu_1343_p2 : ap_reg_pp0_iter9_tmp_22_reg_2474);

assign tmp_25_fu_1354_p2 = (16'd0 - tmp_24_reg_2557);

assign tmp_27_fu_1359_p3 = ((ap_reg_pp0_iter9_tmp_85_reg_2484[0:0] === 1'b1) ? tmp_25_fu_1354_p2 : ap_reg_pp0_iter9_tmp_26_reg_2489);

assign tmp_29_fu_1670_p2 = (16'd0 - tmp_28_reg_2782);

assign tmp_2_fu_449_p3 = {{tmp_78_fu_445_p1}, {7'd0}};

assign tmp_31_fu_1675_p3 = ((ap_reg_pp0_iter15_tmp_86_reg_2702[0:0] === 1'b1) ? tmp_29_fu_1670_p2 : ap_reg_pp0_iter15_tmp_30_reg_2707);

assign tmp_33_fu_1681_p2 = (16'd0 - tmp_32_reg_2787);

assign tmp_35_fu_1686_p3 = ((ap_reg_pp0_iter15_tmp_87_reg_2712[0:0] === 1'b1) ? tmp_33_fu_1681_p2 : ap_reg_pp0_iter15_tmp_34_reg_2717);

assign tmp_37_fu_1692_p2 = (16'd0 - tmp_36_reg_2792);

assign tmp_39_fu_1697_p3 = ((ap_reg_pp0_iter15_tmp_88_reg_2722[0:0] === 1'b1) ? tmp_37_fu_1692_p2 : ap_reg_pp0_iter15_tmp_38_reg_2727);

assign tmp_3_fu_349_p3 = cfg0_V[32'd3];

assign tmp_41_fu_1703_p2 = (16'd0 - tmp_40_reg_2797);

assign tmp_43_fu_1708_p3 = ((ap_reg_pp0_iter15_tmp_89_reg_2732[0:0] === 1'b1) ? tmp_41_fu_1703_p2 : ap_reg_pp0_iter15_tmp_42_reg_2737);

assign tmp_45_fu_1714_p2 = (16'd0 - tmp_44_reg_2802);

assign tmp_47_fu_1719_p3 = ((ap_reg_pp0_iter15_tmp_90_reg_2742[0:0] === 1'b1) ? tmp_45_fu_1714_p2 : ap_reg_pp0_iter15_tmp_46_reg_2747);

assign tmp_49_fu_1725_p2 = (16'd0 - tmp_48_reg_2807);

assign tmp_4_cast4_fu_593_p1 = i_reg_330;

assign tmp_4_cast_fu_597_p1 = i_reg_330;

assign tmp_4_fu_587_p1 = i_reg_330;

assign tmp_51_fu_1730_p3 = ((ap_reg_pp0_iter15_tmp_91_reg_2752[0:0] === 1'b1) ? tmp_49_fu_1725_p2 : ap_reg_pp0_iter15_tmp_50_reg_2757);

assign tmp_53_fu_1736_p2 = (16'd0 - tmp_52_reg_2812);

assign tmp_55_fu_1741_p3 = ((ap_reg_pp0_iter15_tmp_92_reg_2762[0:0] === 1'b1) ? tmp_53_fu_1736_p2 : ap_reg_pp0_iter15_tmp_54_reg_2767);

assign tmp_57_fu_1747_p2 = (16'd0 - tmp_56_reg_2817);

assign tmp_59_fu_1752_p3 = ((ap_reg_pp0_iter15_tmp_93_reg_2772[0:0] === 1'b1) ? tmp_57_fu_1747_p2 : ap_reg_pp0_iter15_tmp_58_reg_2777);

assign tmp_5_fu_461_p3 = {{tmp_78_fu_445_p1}, {5'd0}};

assign tmp_60_fu_888_p1 = r_V_15_reg_2141;

assign tmp_61_fu_501_p3 = {{tmp_9_fu_479_p4}, {5'd0}};

assign tmp_62_fu_513_p2 = (p_shl_cast_fu_497_p1 + p_shl1_cast_fu_509_p1);

assign tmp_63_cast_fu_519_p3 = ((tmp_76_fu_405_p3[0:0] === 1'b1) ? 9'd160 : 9'd0);

assign tmp_63_fu_365_p3 = cfg0_V[32'd5];

assign tmp_64_fu_527_p3 = ((tmp_76_fu_405_p3[0:0] === 1'b1) ? 9'd320 : 9'd160);

assign tmp_65_cast_fu_535_p3 = ((tmp_77_fu_413_p3[0:0] === 1'b1) ? 9'd160 : 9'd0);

assign tmp_65_fu_373_p3 = cfg0_V[32'd10];

assign tmp_66_fu_543_p3 = ((tmp_77_fu_413_p3[0:0] === 1'b1) ? 9'd320 : 9'd160);

assign tmp_67_cast_fu_611_p1 = tmp_67_reg_1952;

assign tmp_67_fu_601_p2 = (tmp_4_cast_fu_597_p1 + tmp_6_fu_473_p2);

assign tmp_68_cast_fu_616_p1 = tmp_68_reg_1957;

assign tmp_68_fu_606_p2 = (tmp_4_cast_fu_597_p1 + tmp_62_fu_513_p2);

assign tmp_69_cast_fu_913_p1 = tmp_69_reg_2182;

assign tmp_69_fu_891_p2 = (ap_reg_pp0_iter4_tmp_4_cast4_reg_1944 + tmp_63_cast_fu_519_p3);

assign tmp_6_fu_473_p2 = (p_shl2_cast_fu_457_p1 + p_shl3_cast_fu_469_p1);

assign tmp_70_cast_fu_918_p1 = tmp_70_reg_2187;

assign tmp_70_fu_895_p2 = (ap_reg_pp0_iter4_tmp_4_cast4_reg_1944 + tmp_64_fu_527_p3);

assign tmp_71_cast_fu_923_p1 = tmp_71_reg_2192;

assign tmp_71_fu_899_p2 = (ap_reg_pp0_iter4_tmp_4_cast4_reg_1944 + tmp_65_cast_fu_535_p3);

assign tmp_72_cast_fu_928_p1 = tmp_72_reg_2197;

assign tmp_72_fu_903_p2 = (ap_reg_pp0_iter4_tmp_4_cast4_reg_1944 + tmp_66_fu_543_p3);

assign tmp_73_fu_381_p3 = cfg0_V[32'd11];

assign tmp_74_fu_389_p3 = cfg0_V[32'd12];

assign tmp_75_fu_397_p3 = cfg0_V[32'd13];

assign tmp_76_fu_405_p3 = cfg0_V[32'd16];

assign tmp_77_fu_413_p3 = cfg0_V[32'd17];

assign tmp_78_fu_445_p1 = cfg0_V[1:0];

assign tmp_79_fu_621_p1 = d_i_V_dout[15:0];

assign tmp_7_fu_551_p1 = bw20_num_shift_to_le_fu_421_p4;

assign tmp_80_fu_667_p3 = cfg0_V[32'd27];

assign tmp_81_fu_775_p3 = cfg0_V[32'd31];

assign tmp_8_cast_fu_561_p1 = sh_V_3_fu_555_p2;

assign tmp_8_fu_885_p1 = r_V_14_reg_2136;

assign tmp_9_cast_fu_571_p1 = sh_V_1_fu_565_p2;

assign tmp_9_fu_479_p4 = {{cfg0_V[9:8]}};

assign tmp_cast_fu_441_p1 = bw02_num_shift_to_le_fu_431_p4;

assign tmp_s_fu_575_p2 = ((i_reg_330 == 8'd160) ? 1'b1 : 1'b0);

assign val_assign_1_cast_fu_879_p1 = ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2062;

assign val_assign_2_cast_fu_882_p1 = ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2073;

always @ (posedge ap_clk) begin
    tmp_4_cast4_reg_1944[8] <= 1'b0;
    ap_reg_pp0_iter1_tmp_4_cast4_reg_1944[8] <= 1'b0;
    ap_reg_pp0_iter2_tmp_4_cast4_reg_1944[8] <= 1'b0;
    ap_reg_pp0_iter3_tmp_4_cast4_reg_1944[8] <= 1'b0;
    ap_reg_pp0_iter4_tmp_4_cast4_reg_1944[8] <= 1'b0;
end

endmodule //mixer_ddc
