-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mixer_ddc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    d_i_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    d_i_V_empty_n : IN STD_LOGIC;
    d_i_V_read : OUT STD_LOGIC;
    cfg0_V : IN STD_LOGIC_VECTOR (31 downto 0);
    d_o0_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    d_o0_V_TVALID : OUT STD_LOGIC;
    d_o0_V_TREADY : IN STD_LOGIC;
    d_o1_V_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    d_o1_V_TVALID : OUT STD_LOGIC;
    d_o1_V_TREADY : IN STD_LOGIC );
end;


architecture behav of mixer_ddc is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mixer_ddc,hls_ip_2017_4_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.360000,HLS_SYN_LAT=178,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=104,HLS_SYN_FF=8674,HLS_SYN_LUT=3678}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_A0 : STD_LOGIC_VECTOR (8 downto 0) := "010100000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_140 : STD_LOGIC_VECTOR (8 downto 0) := "101000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_A0 : STD_LOGIC_VECTOR (7 downto 0) := "10100000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal d_o0_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal d_o0_V_1_vld_in : STD_LOGIC;
    signal d_o0_V_1_vld_out : STD_LOGIC;
    signal d_o0_V_1_ack_in : STD_LOGIC;
    signal d_o0_V_1_ack_out : STD_LOGIC;
    signal d_o0_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal d_o0_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal d_o0_V_1_sel_rd : STD_LOGIC := '0';
    signal d_o0_V_1_sel_wr : STD_LOGIC := '0';
    signal d_o0_V_1_sel : STD_LOGIC;
    signal d_o0_V_1_load_A : STD_LOGIC;
    signal d_o0_V_1_load_B : STD_LOGIC;
    signal d_o0_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal d_o0_V_1_state_cmp_full : STD_LOGIC;
    signal d_o1_V_1_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal d_o1_V_1_vld_in : STD_LOGIC;
    signal d_o1_V_1_vld_out : STD_LOGIC;
    signal d_o1_V_1_ack_in : STD_LOGIC;
    signal d_o1_V_1_ack_out : STD_LOGIC;
    signal d_o1_V_1_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal d_o1_V_1_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal d_o1_V_1_sel_rd : STD_LOGIC := '0';
    signal d_o1_V_1_sel_wr : STD_LOGIC := '0';
    signal d_o1_V_1_sel : STD_LOGIC;
    signal d_o1_V_1_load_A : STD_LOGIC;
    signal d_o1_V_1_load_B : STD_LOGIC;
    signal d_o1_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal d_o1_V_1_state_cmp_full : STD_LOGIC;
    signal i_p2MHz_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p2MHz_ce0 : STD_LOGIC;
    signal i_p2MHz_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p2MHz_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p2MHz_ce0 : STD_LOGIC;
    signal q_p2MHz_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_p0n5n10n15n20MHz_ce0 : STD_LOGIC;
    signal i_p0n5n10n15n20MHz_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_p0n5n10n15n20MHz_ce1 : STD_LOGIC;
    signal i_p0n5n10n15n20MHz_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_p0n5n10n15n20MHz_ce2 : STD_LOGIC;
    signal i_p0n5n10n15n20MHz_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_p0n5n10n15n20MHz_ce3 : STD_LOGIC;
    signal i_p0n5n10n15n20MHz_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_p0n5n10n15n20MHz_ce4 : STD_LOGIC;
    signal i_p0n5n10n15n20MHz_q4 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_p0n5n10n15n20MHz_ce5 : STD_LOGIC;
    signal i_p0n5n10n15n20MHz_q5 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_p0n5n10n15n20MHz_ce0 : STD_LOGIC;
    signal q_p0n5n10n15n20MHz_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_p0n5n10n15n20MHz_ce1 : STD_LOGIC;
    signal q_p0n5n10n15n20MHz_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_p0n5n10n15n20MHz_ce2 : STD_LOGIC;
    signal q_p0n5n10n15n20MHz_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_p0n5n10n15n20MHz_ce3 : STD_LOGIC;
    signal q_p0n5n10n15n20MHz_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_p0n5n10n15n20MHz_ce4 : STD_LOGIC;
    signal q_p0n5n10n15n20MHz_q4 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_p0n5n10n15n20MHz_ce5 : STD_LOGIC;
    signal q_p0n5n10n15n20MHz_q5 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_i_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_o0_V_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter15_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter16_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_o1_V_TDATA_blk_n : STD_LOGIC;
    signal i_reg_330 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_1_fu_341_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_349_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_357_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_365_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_373_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_fu_381_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_389_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_397_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_cast_fu_441_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_fu_473_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_62_fu_513_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_63_cast_fu_519_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_64_fu_527_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_65_cast_fu_535_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_fu_543_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_fu_551_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_cast_fu_561_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_9_cast_fu_571_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_io : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter13_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter14_tmp_s_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_581_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_4_cast4_fu_593_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_cast4_reg_1944 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter1_tmp_4_cast4_reg_1944 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter2_tmp_4_cast4_reg_1944 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter3_tmp_4_cast4_reg_1944 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter4_tmp_4_cast4_reg_1944 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_67_fu_601_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_67_reg_1952 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_68_fu_606_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_68_reg_1957 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_79_fu_621_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_79_reg_1992 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_tmp_79_reg_1992 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_tmp_79_reg_1992 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_reg_1999 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_p_Result_s_reg_1999 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_p_Result_s_reg_1999 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter4_p_Result_s_reg_1999 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_1_reg_2006 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_p_Result_1_reg_2006 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_p_Result_1_reg_2006 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_reg_2013 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_p_Result_2_reg_2013 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_p_Result_2_reg_2013 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter4_p_Result_2_reg_2013 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_p2MHz_load_reg_2020 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_i_p2MHz_load_reg_2020 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p2MHz_load_reg_2025 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_32_fu_687_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_32_reg_2032 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_33_fu_708_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_33_reg_2037 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_34_fu_729_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_34_reg_2042 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_35_fu_750_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_35_reg_2047 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_8_fu_763_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_reg_2052 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_9_fu_769_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_9_reg_2057 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_l_reg_2062 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2062 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_l_reg_2067 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_l_1_reg_2073 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2073 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_l_1_reg_2078 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_81_fu_775_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_32_cast_fu_782_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_33_cast_fu_785_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_34_cast_fu_788_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_35_cast_fu_791_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_M_real_V_fu_794_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b0_M_imag_V_fu_797_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_M_imag_V_fu_800_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_14_fu_808_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_14_reg_2136 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_15_fu_819_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_15_reg_2141 : STD_LOGIC_VECTOR (7 downto 0);
    signal bw20_a0_M_real_V_ca_fu_873_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal bw20_a1_M_real_V_ca_fu_876_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal val_assign_1_cast_fu_879_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal val_assign_1_cast_reg_2158 : STD_LOGIC_VECTOR (23 downto 0);
    signal val_assign_2_cast_fu_882_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal val_assign_2_cast_reg_2164 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_fu_885_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_reg_2170 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_60_fu_888_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_60_reg_2176 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_69_fu_891_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_69_reg_2182 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_70_fu_895_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_70_reg_2187 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_71_fu_899_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_71_reg_2192 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_72_fu_903_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_72_reg_2197 : STD_LOGIC_VECTOR (8 downto 0);
    signal bw20_a0_M_imag_V_ca_fu_907_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal bw20_a1_M_imag_V_ca_fu_910_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1779_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_i_i_reg_2254 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1785_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_2_i_i_cast_reg_2259 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1791_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_i_i4_reg_2264 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1797_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_2_i_i4_cast_reg_2269 : STD_LOGIC_VECTOR (23 downto 0);
    signal i_p0n5n10n15n20MHz_l_2_reg_2274 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_2_reg_2274 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_l_2_reg_2279 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_l_3_reg_2285 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_3_reg_2285 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_l_3_reg_2290 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_l_4_reg_2296 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_4_reg_2296 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_l_4_reg_2301 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_p0n5n10n15n20MHz_l_5_reg_2307 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_5_reg_2307 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_p0n5n10n15n20MHz_l_5_reg_2312 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1803_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_r_V_reg_2318 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1809_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal complex_M_imag_V_wr_reg_2324 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_825_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i1_reg_2330 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_831_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i1_reg_2335 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_837_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i1_reg_2340 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_843_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i1_reg_2345 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1815_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_r_V_4_reg_2350 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1821_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal complex_M_imag_V_wr_4_reg_2356 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_849_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i5_reg_2362 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_855_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i5_reg_2367 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_861_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i5_reg_2372 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_867_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i5_reg_2377 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_16_fu_938_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_16_reg_2382 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_17_fu_949_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_17_reg_2387 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_18_fu_960_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_18_reg_2392 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_19_fu_971_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_19_reg_2397 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_r_V_8_fu_983_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_8_reg_2402 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_1_fu_987_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_1_reg_2410 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_9_fu_997_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_9_reg_2418 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_3_fu_1001_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_3_reg_2426 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_22_fu_1018_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_22_reg_2434 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_reg_2439 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_82_reg_2439 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2444 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter9_tmp_14_reg_2444 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_25_fu_1056_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_25_reg_2449 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_reg_2454 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_83_reg_2454 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_2459 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter9_tmp_18_reg_2459 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_28_fu_1094_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_28_reg_2464 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_reg_2469 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_84_reg_2469 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2474 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter9_tmp_22_reg_2474 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_31_fu_1132_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_31_reg_2479 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_reg_2484 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_85_reg_2484 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_2489 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter9_tmp_26_reg_2489 : STD_LOGIC_VECTOR (15 downto 0);
    signal c01_M_real_V_fu_1157_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c01_M_imag_V_fu_1160_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c02_M_real_V_fu_1163_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c02_M_imag_V_fu_1166_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c11_M_real_V_fu_1169_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c11_M_imag_V_fu_1172_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c12_M_real_V_fu_1175_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c12_M_imag_V_fu_1178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_2542 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_reg_2547 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_reg_2552 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_reg_2557 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_1326_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_reg_2562 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter11_tmp_15_reg_2562 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter12_tmp_15_reg_2562 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter13_tmp_15_reg_2562 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter14_tmp_15_reg_2562 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter15_tmp_15_reg_2562 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_1337_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_reg_2567 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter11_tmp_19_reg_2567 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter12_tmp_19_reg_2567 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter13_tmp_19_reg_2567 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter14_tmp_19_reg_2567 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter15_tmp_19_reg_2567 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_fu_1348_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_reg_2572 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter11_tmp_23_reg_2572 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter12_tmp_23_reg_2572 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter13_tmp_23_reg_2572 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter14_tmp_23_reg_2572 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter15_tmp_23_reg_2572 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_fu_1359_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_reg_2577 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter11_tmp_27_reg_2577 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter12_tmp_27_reg_2577 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter13_tmp_27_reg_2577 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter14_tmp_27_reg_2577 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter15_tmp_27_reg_2577 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1181_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i2_reg_2582 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1186_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i2_reg_2587 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1191_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i2_reg_2592 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1196_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i2_reg_2597 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1201_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i3_reg_2602 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1206_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i3_reg_2607 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1211_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i3_reg_2612 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1216_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i3_reg_2617 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i6_reg_2622 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1226_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i6_reg_2627 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1231_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i6_reg_2632 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i6_reg_2637 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1241_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i7_reg_2642 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1246_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i7_reg_2647 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1251_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i7_reg_2652 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1256_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_i_i7_reg_2657 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_2_fu_1365_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_2_reg_2662 : STD_LOGIC_VECTOR (31 downto 0);
    signal complex_M_imag_V_wr_2_fu_1369_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal complex_M_imag_V_wr_2_reg_2667 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_3_fu_1373_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_3_reg_2672 : STD_LOGIC_VECTOR (31 downto 0);
    signal complex_M_imag_V_wr_3_fu_1377_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal complex_M_imag_V_wr_3_reg_2677 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_6_fu_1381_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_6_reg_2682 : STD_LOGIC_VECTOR (31 downto 0);
    signal complex_M_imag_V_wr_6_fu_1385_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal complex_M_imag_V_wr_6_reg_2687 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_7_fu_1389_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_V_7_reg_2692 : STD_LOGIC_VECTOR (31 downto 0);
    signal complex_M_imag_V_wr_7_fu_1393_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal complex_M_imag_V_wr_7_reg_2697 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_reg_2702 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_tmp_86_reg_2702 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_2707 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter15_tmp_30_reg_2707 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_87_reg_2712 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_tmp_87_reg_2712 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_reg_2717 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter15_tmp_34_reg_2717 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_88_reg_2722 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_tmp_88_reg_2722 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_2727 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter15_tmp_38_reg_2727 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_89_reg_2732 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_tmp_89_reg_2732 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_2737 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter15_tmp_42_reg_2737 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_90_reg_2742 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_tmp_90_reg_2742 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_reg_2747 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter15_tmp_46_reg_2747 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_91_reg_2752 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_tmp_91_reg_2752 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_reg_2757 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter15_tmp_50_reg_2757 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_92_reg_2762 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_tmp_92_reg_2762 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_2767 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter15_tmp_54_reg_2767 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_93_reg_2772 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_tmp_93_reg_2772 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_2777 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter15_tmp_58_reg_2777 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_reg_2782 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_32_reg_2787 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_reg_2792 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_40_reg_2797 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_reg_2802 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_48_reg_2807 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_52_reg_2812 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_56_reg_2817 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_6_fu_1661_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_3_fu_1758_p9 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal tmp_4_fu_587_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_67_cast_fu_611_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_68_cast_fu_616_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_69_cast_fu_913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_cast_fu_918_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_cast_fu_923_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_72_cast_fu_928_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal bw02_num_shift_to_le_fu_431_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_78_fu_445_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_449_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_fu_461_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl2_cast_fu_457_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_cast_fu_469_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_479_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_489_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_61_fu_501_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_497_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl1_cast_fu_509_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_76_fu_405_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_fu_413_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal bw20_num_shift_to_le_fu_421_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sh_V_3_fu_555_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sh_V_1_fu_565_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_cast_fu_597_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_1_fu_674_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bw20_a0_M_real_V_ca_1_fu_655_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_80_fu_667_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_cast_fu_678_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_fu_682_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_3_fu_695_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bw20_a0_M_imag_V_ca_1_fu_658_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_3_cast_fu_699_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_2_fu_703_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_5_fu_716_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bw20_a1_M_real_V_ca_1_fu_661_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_5_cast_fu_720_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_4_fu_724_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_7_fu_737_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bw20_a1_M_imag_V_ca_1_fu_664_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_7_cast_fu_741_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_6_fu_745_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mt1_fu_758_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mt2_fu_803_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mt3_fu_814_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_825_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_825_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_831_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_831_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_837_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_837_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_843_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_843_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_849_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_849_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_855_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_855_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_861_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_861_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_867_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_867_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mt4_fu_933_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mt5_fu_944_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mt6_fu_955_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mt_fu_966_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_20_fu_1005_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_r_V_cast_fu_977_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_20_cast_fu_1009_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_21_fu_1013_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_23_fu_1043_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal complex_M_imag_V_wr_1_fu_980_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_23_cast_fu_1047_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_24_fu_1051_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_26_fu_1081_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_r_V_4_cast_fu_991_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_26_cast_fu_1085_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_27_fu_1089_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_29_fu_1119_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal complex_M_imag_V_wr_5_fu_994_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_29_cast_fu_1123_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_30_fu_1127_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1181_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1186_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1191_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1196_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1201_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1206_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1211_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1216_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1221_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1226_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1231_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1236_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1241_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1246_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1251_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1256_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_neg1_fu_1261_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg2_fu_1276_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg3_fu_1291_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg4_fu_1306_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1321_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_1332_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_fu_1343_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_fu_1354_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_neg5_fu_1541_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg6_fu_1556_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg7_fu_1571_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg8_fu_1586_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg9_fu_1601_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg10_fu_1616_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg11_fu_1631_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_1646_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_1670_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_33_fu_1681_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_fu_1692_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_fu_1703_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_45_fu_1714_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_49_fu_1725_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_53_fu_1736_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_57_fu_1747_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_59_fu_1752_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_fu_1741_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_51_fu_1730_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_fu_1719_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_fu_1708_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_fu_1697_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_fu_1686_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_31_fu_1675_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1779_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1785_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1791_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1797_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1803_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1803_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1809_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1809_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1815_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1815_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1821_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1821_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_825_ce : STD_LOGIC;
    signal grp_fu_831_ce : STD_LOGIC;
    signal grp_fu_837_ce : STD_LOGIC;
    signal grp_fu_843_ce : STD_LOGIC;
    signal grp_fu_849_ce : STD_LOGIC;
    signal grp_fu_855_ce : STD_LOGIC;
    signal grp_fu_861_ce : STD_LOGIC;
    signal grp_fu_867_ce : STD_LOGIC;
    signal grp_fu_1181_ce : STD_LOGIC;
    signal grp_fu_1186_ce : STD_LOGIC;
    signal grp_fu_1191_ce : STD_LOGIC;
    signal grp_fu_1196_ce : STD_LOGIC;
    signal grp_fu_1201_ce : STD_LOGIC;
    signal grp_fu_1206_ce : STD_LOGIC;
    signal grp_fu_1211_ce : STD_LOGIC;
    signal grp_fu_1216_ce : STD_LOGIC;
    signal grp_fu_1221_ce : STD_LOGIC;
    signal grp_fu_1226_ce : STD_LOGIC;
    signal grp_fu_1231_ce : STD_LOGIC;
    signal grp_fu_1236_ce : STD_LOGIC;
    signal grp_fu_1241_ce : STD_LOGIC;
    signal grp_fu_1246_ce : STD_LOGIC;
    signal grp_fu_1251_ce : STD_LOGIC;
    signal grp_fu_1256_ce : STD_LOGIC;
    signal grp_fu_1779_ce : STD_LOGIC;
    signal grp_fu_1785_ce : STD_LOGIC;
    signal grp_fu_1791_ce : STD_LOGIC;
    signal grp_fu_1797_ce : STD_LOGIC;
    signal grp_fu_1803_ce : STD_LOGIC;
    signal grp_fu_1809_ce : STD_LOGIC;
    signal grp_fu_1815_ce : STD_LOGIC;
    signal grp_fu_1821_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_block_state20 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component mixer_ddc_mul_31sdEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mixer_ddc_mul_32seOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mixer_ddc_mul_mulfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component mixer_ddc_mac_mulg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component mixer_ddc_mac_mulhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component mixer_ddc_i_p2MHz IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component mixer_ddc_q_p2MHz IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component mixer_ddc_i_p0n5nbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component mixer_ddc_q_p0n5ncud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    i_p2MHz_U : component mixer_ddc_i_p2MHz
    generic map (
        DataWidth => 8,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => i_p2MHz_address0,
        ce0 => i_p2MHz_ce0,
        q0 => i_p2MHz_q0);

    q_p2MHz_U : component mixer_ddc_q_p2MHz
    generic map (
        DataWidth => 8,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => q_p2MHz_address0,
        ce0 => q_p2MHz_ce0,
        q0 => q_p2MHz_q0);

    i_p0n5n10n15n20MHz_U : component mixer_ddc_i_p0n5nbkb
    generic map (
        DataWidth => 8,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => i_p0n5n10n15n20MHz_address0,
        ce0 => i_p0n5n10n15n20MHz_ce0,
        q0 => i_p0n5n10n15n20MHz_q0,
        address1 => i_p0n5n10n15n20MHz_address1,
        ce1 => i_p0n5n10n15n20MHz_ce1,
        q1 => i_p0n5n10n15n20MHz_q1,
        address2 => i_p0n5n10n15n20MHz_address2,
        ce2 => i_p0n5n10n15n20MHz_ce2,
        q2 => i_p0n5n10n15n20MHz_q2,
        address3 => i_p0n5n10n15n20MHz_address3,
        ce3 => i_p0n5n10n15n20MHz_ce3,
        q3 => i_p0n5n10n15n20MHz_q3,
        address4 => i_p0n5n10n15n20MHz_address4,
        ce4 => i_p0n5n10n15n20MHz_ce4,
        q4 => i_p0n5n10n15n20MHz_q4,
        address5 => i_p0n5n10n15n20MHz_address5,
        ce5 => i_p0n5n10n15n20MHz_ce5,
        q5 => i_p0n5n10n15n20MHz_q5);

    q_p0n5n10n15n20MHz_U : component mixer_ddc_q_p0n5ncud
    generic map (
        DataWidth => 8,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => q_p0n5n10n15n20MHz_address0,
        ce0 => q_p0n5n10n15n20MHz_ce0,
        q0 => q_p0n5n10n15n20MHz_q0,
        address1 => q_p0n5n10n15n20MHz_address1,
        ce1 => q_p0n5n10n15n20MHz_ce1,
        q1 => q_p0n5n10n15n20MHz_q1,
        address2 => q_p0n5n10n15n20MHz_address2,
        ce2 => q_p0n5n10n15n20MHz_ce2,
        q2 => q_p0n5n10n15n20MHz_q2,
        address3 => q_p0n5n10n15n20MHz_address3,
        ce3 => q_p0n5n10n15n20MHz_ce3,
        q3 => q_p0n5n10n15n20MHz_q3,
        address4 => q_p0n5n10n15n20MHz_address4,
        ce4 => q_p0n5n10n15n20MHz_ce4,
        q4 => q_p0n5n10n15n20MHz_q4,
        address5 => q_p0n5n10n15n20MHz_address5,
        ce5 => q_p0n5n10n15n20MHz_ce5,
        q5 => q_p0n5n10n15n20MHz_q5);

    mixer_ddc_mul_31sdEe_U1 : component mixer_ddc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_825_p0,
        din1 => grp_fu_825_p1,
        ce => grp_fu_825_ce,
        dout => grp_fu_825_p2);

    mixer_ddc_mul_31sdEe_U2 : component mixer_ddc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_831_p0,
        din1 => grp_fu_831_p1,
        ce => grp_fu_831_ce,
        dout => grp_fu_831_p2);

    mixer_ddc_mul_31sdEe_U3 : component mixer_ddc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_837_p0,
        din1 => grp_fu_837_p1,
        ce => grp_fu_837_ce,
        dout => grp_fu_837_p2);

    mixer_ddc_mul_31sdEe_U4 : component mixer_ddc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_843_p0,
        din1 => grp_fu_843_p1,
        ce => grp_fu_843_ce,
        dout => grp_fu_843_p2);

    mixer_ddc_mul_31sdEe_U5 : component mixer_ddc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_849_p0,
        din1 => grp_fu_849_p1,
        ce => grp_fu_849_ce,
        dout => grp_fu_849_p2);

    mixer_ddc_mul_31sdEe_U6 : component mixer_ddc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_855_p0,
        din1 => grp_fu_855_p1,
        ce => grp_fu_855_ce,
        dout => grp_fu_855_p2);

    mixer_ddc_mul_31sdEe_U7 : component mixer_ddc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_861_p0,
        din1 => grp_fu_861_p1,
        ce => grp_fu_861_ce,
        dout => grp_fu_861_p2);

    mixer_ddc_mul_31sdEe_U8 : component mixer_ddc_mul_31sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 31,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_867_p0,
        din1 => grp_fu_867_p1,
        ce => grp_fu_867_ce,
        dout => grp_fu_867_p2);

    mixer_ddc_mul_32seOg_U9 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_8_reg_2402,
        din1 => grp_fu_1181_p1,
        ce => grp_fu_1181_ce,
        dout => grp_fu_1181_p2);

    mixer_ddc_mul_32seOg_U10 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_1_reg_2410,
        din1 => grp_fu_1186_p1,
        ce => grp_fu_1186_ce,
        dout => grp_fu_1186_p2);

    mixer_ddc_mul_32seOg_U11 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_8_reg_2402,
        din1 => grp_fu_1191_p1,
        ce => grp_fu_1191_ce,
        dout => grp_fu_1191_p2);

    mixer_ddc_mul_32seOg_U12 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_1_reg_2410,
        din1 => grp_fu_1196_p1,
        ce => grp_fu_1196_ce,
        dout => grp_fu_1196_p2);

    mixer_ddc_mul_32seOg_U13 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_8_reg_2402,
        din1 => grp_fu_1201_p1,
        ce => grp_fu_1201_ce,
        dout => grp_fu_1201_p2);

    mixer_ddc_mul_32seOg_U14 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_1_reg_2410,
        din1 => grp_fu_1206_p1,
        ce => grp_fu_1206_ce,
        dout => grp_fu_1206_p2);

    mixer_ddc_mul_32seOg_U15 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_8_reg_2402,
        din1 => grp_fu_1211_p1,
        ce => grp_fu_1211_ce,
        dout => grp_fu_1211_p2);

    mixer_ddc_mul_32seOg_U16 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_1_reg_2410,
        din1 => grp_fu_1216_p1,
        ce => grp_fu_1216_ce,
        dout => grp_fu_1216_p2);

    mixer_ddc_mul_32seOg_U17 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_9_reg_2418,
        din1 => grp_fu_1221_p1,
        ce => grp_fu_1221_ce,
        dout => grp_fu_1221_p2);

    mixer_ddc_mul_32seOg_U18 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_3_reg_2426,
        din1 => grp_fu_1226_p1,
        ce => grp_fu_1226_ce,
        dout => grp_fu_1226_p2);

    mixer_ddc_mul_32seOg_U19 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_9_reg_2418,
        din1 => grp_fu_1231_p1,
        ce => grp_fu_1231_ce,
        dout => grp_fu_1231_p2);

    mixer_ddc_mul_32seOg_U20 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_3_reg_2426,
        din1 => grp_fu_1236_p1,
        ce => grp_fu_1236_ce,
        dout => grp_fu_1236_p2);

    mixer_ddc_mul_32seOg_U21 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_9_reg_2418,
        din1 => grp_fu_1241_p1,
        ce => grp_fu_1241_ce,
        dout => grp_fu_1241_p2);

    mixer_ddc_mul_32seOg_U22 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_3_reg_2426,
        din1 => grp_fu_1246_p1,
        ce => grp_fu_1246_ce,
        dout => grp_fu_1246_p2);

    mixer_ddc_mul_32seOg_U23 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_V_9_reg_2418,
        din1 => grp_fu_1251_p1,
        ce => grp_fu_1251_ce,
        dout => grp_fu_1251_p2);

    mixer_ddc_mul_32seOg_U24 : component mixer_ddc_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => p_r_M_imag_V_3_reg_2426,
        din1 => grp_fu_1256_p1,
        ce => grp_fu_1256_ce,
        dout => grp_fu_1256_p2);

    mixer_ddc_mul_mulfYi_U25 : component mixer_ddc_mul_mulfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1779_p0,
        din1 => ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2062,
        ce => grp_fu_1779_ce,
        dout => grp_fu_1779_p2);

    mixer_ddc_mul_mulfYi_U26 : component mixer_ddc_mul_mulfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1785_p0,
        din1 => r_V_14_reg_2136,
        ce => grp_fu_1785_ce,
        dout => grp_fu_1785_p2);

    mixer_ddc_mul_mulfYi_U27 : component mixer_ddc_mul_mulfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1791_p0,
        din1 => ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2073,
        ce => grp_fu_1791_ce,
        dout => grp_fu_1791_p2);

    mixer_ddc_mul_mulfYi_U28 : component mixer_ddc_mul_mulfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1797_p0,
        din1 => r_V_15_reg_2141,
        ce => grp_fu_1797_ce,
        dout => grp_fu_1797_p2);

    mixer_ddc_mac_mulg8j_U29 : component mixer_ddc_mac_mulg8j
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1803_p0,
        din1 => grp_fu_1803_p1,
        din2 => p_i_i_reg_2254,
        ce => grp_fu_1803_ce,
        dout => grp_fu_1803_p3);

    mixer_ddc_mac_mulhbi_U30 : component mixer_ddc_mac_mulhbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1809_p0,
        din1 => grp_fu_1809_p1,
        din2 => p_2_i_i_cast_reg_2259,
        ce => grp_fu_1809_ce,
        dout => grp_fu_1809_p3);

    mixer_ddc_mac_mulg8j_U31 : component mixer_ddc_mac_mulg8j
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1815_p0,
        din1 => grp_fu_1815_p1,
        din2 => p_i_i4_reg_2264,
        ce => grp_fu_1815_ce,
        dout => grp_fu_1815_p3);

    mixer_ddc_mac_mulhbi_U32 : component mixer_ddc_mac_mulhbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1821_p0,
        din1 => grp_fu_1821_p1,
        din2 => p_2_i_i4_cast_reg_2269,
        ce => grp_fu_1821_ce,
        dout => grp_fu_1821_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    d_o0_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                d_o0_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((d_o0_V_1_ack_out = ap_const_logic_1) and (d_o0_V_1_vld_out = ap_const_logic_1))) then 
                                        d_o0_V_1_sel_rd <= not(d_o0_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    d_o0_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                d_o0_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((d_o0_V_1_ack_in = ap_const_logic_1) and (d_o0_V_1_vld_in = ap_const_logic_1))) then 
                                        d_o0_V_1_sel_wr <= not(d_o0_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    d_o0_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                d_o0_V_1_state <= ap_const_lv2_0;
            else
                if ((((d_o0_V_1_state = ap_const_lv2_2) and (d_o0_V_1_vld_in = ap_const_logic_0)) or ((d_o0_V_1_state = ap_const_lv2_3) and (d_o0_V_1_vld_in = ap_const_logic_0) and (d_o0_V_1_ack_out = ap_const_logic_1)))) then 
                    d_o0_V_1_state <= ap_const_lv2_2;
                elsif ((((d_o0_V_1_state = ap_const_lv2_1) and (d_o0_V_1_ack_out = ap_const_logic_0)) or ((d_o0_V_1_state = ap_const_lv2_3) and (d_o0_V_1_ack_out = ap_const_logic_0) and (d_o0_V_1_vld_in = ap_const_logic_1)))) then 
                    d_o0_V_1_state <= ap_const_lv2_1;
                elsif (((not(((d_o0_V_1_vld_in = ap_const_logic_0) and (d_o0_V_1_ack_out = ap_const_logic_1))) and not(((d_o0_V_1_ack_out = ap_const_logic_0) and (d_o0_V_1_vld_in = ap_const_logic_1))) and (d_o0_V_1_state = ap_const_lv2_3)) or ((d_o0_V_1_state = ap_const_lv2_1) and (d_o0_V_1_ack_out = ap_const_logic_1)) or ((d_o0_V_1_state = ap_const_lv2_2) and (d_o0_V_1_vld_in = ap_const_logic_1)))) then 
                    d_o0_V_1_state <= ap_const_lv2_3;
                else 
                    d_o0_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    d_o1_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                d_o1_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((d_o1_V_1_ack_out = ap_const_logic_1) and (d_o1_V_1_vld_out = ap_const_logic_1))) then 
                                        d_o1_V_1_sel_rd <= not(d_o1_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    d_o1_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                d_o1_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((d_o1_V_1_ack_in = ap_const_logic_1) and (d_o1_V_1_vld_in = ap_const_logic_1))) then 
                                        d_o1_V_1_sel_wr <= not(d_o1_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    d_o1_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                d_o1_V_1_state <= ap_const_lv2_0;
            else
                if ((((d_o1_V_1_state = ap_const_lv2_2) and (d_o1_V_1_vld_in = ap_const_logic_0)) or ((d_o1_V_1_state = ap_const_lv2_3) and (d_o1_V_1_vld_in = ap_const_logic_0) and (d_o1_V_1_ack_out = ap_const_logic_1)))) then 
                    d_o1_V_1_state <= ap_const_lv2_2;
                elsif ((((d_o1_V_1_state = ap_const_lv2_1) and (d_o1_V_1_ack_out = ap_const_logic_0)) or ((d_o1_V_1_state = ap_const_lv2_3) and (d_o1_V_1_ack_out = ap_const_logic_0) and (d_o1_V_1_vld_in = ap_const_logic_1)))) then 
                    d_o1_V_1_state <= ap_const_lv2_1;
                elsif (((not(((d_o1_V_1_vld_in = ap_const_logic_0) and (d_o1_V_1_ack_out = ap_const_logic_1))) and not(((d_o1_V_1_ack_out = ap_const_logic_0) and (d_o1_V_1_vld_in = ap_const_logic_1))) and (d_o1_V_1_state = ap_const_lv2_3)) or ((d_o1_V_1_state = ap_const_lv2_1) and (d_o1_V_1_ack_out = ap_const_logic_1)) or ((d_o1_V_1_state = ap_const_lv2_2) and (d_o1_V_1_vld_in = ap_const_logic_1)))) then 
                    d_o1_V_1_state <= ap_const_lv2_3;
                else 
                    d_o1_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    i_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_575_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_330 <= i_1_fu_581_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                i_reg_330 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter10_tmp_s_reg_1935 <= ap_reg_pp0_iter9_tmp_s_reg_1935;
                ap_reg_pp0_iter11_tmp_15_reg_2562 <= tmp_15_reg_2562;
                ap_reg_pp0_iter11_tmp_19_reg_2567 <= tmp_19_reg_2567;
                ap_reg_pp0_iter11_tmp_23_reg_2572 <= tmp_23_reg_2572;
                ap_reg_pp0_iter11_tmp_27_reg_2577 <= tmp_27_reg_2577;
                ap_reg_pp0_iter11_tmp_s_reg_1935 <= ap_reg_pp0_iter10_tmp_s_reg_1935;
                ap_reg_pp0_iter12_tmp_15_reg_2562 <= ap_reg_pp0_iter11_tmp_15_reg_2562;
                ap_reg_pp0_iter12_tmp_19_reg_2567 <= ap_reg_pp0_iter11_tmp_19_reg_2567;
                ap_reg_pp0_iter12_tmp_23_reg_2572 <= ap_reg_pp0_iter11_tmp_23_reg_2572;
                ap_reg_pp0_iter12_tmp_27_reg_2577 <= ap_reg_pp0_iter11_tmp_27_reg_2577;
                ap_reg_pp0_iter12_tmp_s_reg_1935 <= ap_reg_pp0_iter11_tmp_s_reg_1935;
                ap_reg_pp0_iter13_tmp_15_reg_2562 <= ap_reg_pp0_iter12_tmp_15_reg_2562;
                ap_reg_pp0_iter13_tmp_19_reg_2567 <= ap_reg_pp0_iter12_tmp_19_reg_2567;
                ap_reg_pp0_iter13_tmp_23_reg_2572 <= ap_reg_pp0_iter12_tmp_23_reg_2572;
                ap_reg_pp0_iter13_tmp_27_reg_2577 <= ap_reg_pp0_iter12_tmp_27_reg_2577;
                ap_reg_pp0_iter13_tmp_s_reg_1935 <= ap_reg_pp0_iter12_tmp_s_reg_1935;
                ap_reg_pp0_iter14_tmp_15_reg_2562 <= ap_reg_pp0_iter13_tmp_15_reg_2562;
                ap_reg_pp0_iter14_tmp_19_reg_2567 <= ap_reg_pp0_iter13_tmp_19_reg_2567;
                ap_reg_pp0_iter14_tmp_23_reg_2572 <= ap_reg_pp0_iter13_tmp_23_reg_2572;
                ap_reg_pp0_iter14_tmp_27_reg_2577 <= ap_reg_pp0_iter13_tmp_27_reg_2577;
                ap_reg_pp0_iter14_tmp_s_reg_1935 <= ap_reg_pp0_iter13_tmp_s_reg_1935;
                ap_reg_pp0_iter15_tmp_15_reg_2562 <= ap_reg_pp0_iter14_tmp_15_reg_2562;
                ap_reg_pp0_iter15_tmp_19_reg_2567 <= ap_reg_pp0_iter14_tmp_19_reg_2567;
                ap_reg_pp0_iter15_tmp_23_reg_2572 <= ap_reg_pp0_iter14_tmp_23_reg_2572;
                ap_reg_pp0_iter15_tmp_27_reg_2577 <= ap_reg_pp0_iter14_tmp_27_reg_2577;
                ap_reg_pp0_iter15_tmp_30_reg_2707 <= tmp_30_reg_2707;
                ap_reg_pp0_iter15_tmp_34_reg_2717 <= tmp_34_reg_2717;
                ap_reg_pp0_iter15_tmp_38_reg_2727 <= tmp_38_reg_2727;
                ap_reg_pp0_iter15_tmp_42_reg_2737 <= tmp_42_reg_2737;
                ap_reg_pp0_iter15_tmp_46_reg_2747 <= tmp_46_reg_2747;
                ap_reg_pp0_iter15_tmp_50_reg_2757 <= tmp_50_reg_2757;
                ap_reg_pp0_iter15_tmp_54_reg_2767 <= tmp_54_reg_2767;
                ap_reg_pp0_iter15_tmp_58_reg_2777 <= tmp_58_reg_2777;
                ap_reg_pp0_iter15_tmp_86_reg_2702 <= tmp_86_reg_2702;
                ap_reg_pp0_iter15_tmp_87_reg_2712 <= tmp_87_reg_2712;
                ap_reg_pp0_iter15_tmp_88_reg_2722 <= tmp_88_reg_2722;
                ap_reg_pp0_iter15_tmp_89_reg_2732 <= tmp_89_reg_2732;
                ap_reg_pp0_iter15_tmp_90_reg_2742 <= tmp_90_reg_2742;
                ap_reg_pp0_iter15_tmp_91_reg_2752 <= tmp_91_reg_2752;
                ap_reg_pp0_iter15_tmp_92_reg_2762 <= tmp_92_reg_2762;
                ap_reg_pp0_iter15_tmp_93_reg_2772 <= tmp_93_reg_2772;
                ap_reg_pp0_iter15_tmp_s_reg_1935 <= ap_reg_pp0_iter14_tmp_s_reg_1935;
                ap_reg_pp0_iter16_tmp_s_reg_1935 <= ap_reg_pp0_iter15_tmp_s_reg_1935;
                ap_reg_pp0_iter2_i_p2MHz_load_reg_2020 <= i_p2MHz_load_reg_2020;
                ap_reg_pp0_iter2_p_Result_1_reg_2006 <= p_Result_1_reg_2006;
                ap_reg_pp0_iter2_p_Result_2_reg_2013 <= p_Result_2_reg_2013;
                ap_reg_pp0_iter2_p_Result_s_reg_1999 <= p_Result_s_reg_1999;
                    ap_reg_pp0_iter2_tmp_4_cast4_reg_1944(7 downto 0) <= ap_reg_pp0_iter1_tmp_4_cast4_reg_1944(7 downto 0);
                ap_reg_pp0_iter2_tmp_79_reg_1992 <= tmp_79_reg_1992;
                ap_reg_pp0_iter2_tmp_s_reg_1935 <= ap_reg_pp0_iter1_tmp_s_reg_1935;
                ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2073 <= i_p0n5n10n15n20MHz_l_1_reg_2073;
                ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2062 <= i_p0n5n10n15n20MHz_l_reg_2062;
                ap_reg_pp0_iter3_p_Result_1_reg_2006 <= ap_reg_pp0_iter2_p_Result_1_reg_2006;
                ap_reg_pp0_iter3_p_Result_2_reg_2013 <= ap_reg_pp0_iter2_p_Result_2_reg_2013;
                ap_reg_pp0_iter3_p_Result_s_reg_1999 <= ap_reg_pp0_iter2_p_Result_s_reg_1999;
                    ap_reg_pp0_iter3_tmp_4_cast4_reg_1944(7 downto 0) <= ap_reg_pp0_iter2_tmp_4_cast4_reg_1944(7 downto 0);
                ap_reg_pp0_iter3_tmp_79_reg_1992 <= ap_reg_pp0_iter2_tmp_79_reg_1992;
                ap_reg_pp0_iter3_tmp_s_reg_1935 <= ap_reg_pp0_iter2_tmp_s_reg_1935;
                ap_reg_pp0_iter4_p_Result_2_reg_2013 <= ap_reg_pp0_iter3_p_Result_2_reg_2013;
                ap_reg_pp0_iter4_p_Result_s_reg_1999 <= ap_reg_pp0_iter3_p_Result_s_reg_1999;
                    ap_reg_pp0_iter4_tmp_4_cast4_reg_1944(7 downto 0) <= ap_reg_pp0_iter3_tmp_4_cast4_reg_1944(7 downto 0);
                ap_reg_pp0_iter4_tmp_s_reg_1935 <= ap_reg_pp0_iter3_tmp_s_reg_1935;
                ap_reg_pp0_iter5_tmp_s_reg_1935 <= ap_reg_pp0_iter4_tmp_s_reg_1935;
                ap_reg_pp0_iter6_tmp_s_reg_1935 <= ap_reg_pp0_iter5_tmp_s_reg_1935;
                ap_reg_pp0_iter7_tmp_s_reg_1935 <= ap_reg_pp0_iter6_tmp_s_reg_1935;
                ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_2_reg_2274 <= i_p0n5n10n15n20MHz_l_2_reg_2274;
                ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_3_reg_2285 <= i_p0n5n10n15n20MHz_l_3_reg_2285;
                ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_4_reg_2296 <= i_p0n5n10n15n20MHz_l_4_reg_2296;
                ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_5_reg_2307 <= i_p0n5n10n15n20MHz_l_5_reg_2307;
                ap_reg_pp0_iter8_tmp_s_reg_1935 <= ap_reg_pp0_iter7_tmp_s_reg_1935;
                ap_reg_pp0_iter9_tmp_14_reg_2444 <= tmp_14_reg_2444;
                ap_reg_pp0_iter9_tmp_18_reg_2459 <= tmp_18_reg_2459;
                ap_reg_pp0_iter9_tmp_22_reg_2474 <= tmp_22_reg_2474;
                ap_reg_pp0_iter9_tmp_26_reg_2489 <= tmp_26_reg_2489;
                ap_reg_pp0_iter9_tmp_82_reg_2439 <= tmp_82_reg_2439;
                ap_reg_pp0_iter9_tmp_83_reg_2454 <= tmp_83_reg_2454;
                ap_reg_pp0_iter9_tmp_84_reg_2469 <= tmp_84_reg_2469;
                ap_reg_pp0_iter9_tmp_85_reg_2484 <= tmp_85_reg_2484;
                ap_reg_pp0_iter9_tmp_s_reg_1935 <= ap_reg_pp0_iter8_tmp_s_reg_1935;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    ap_reg_pp0_iter1_tmp_4_cast4_reg_1944(7 downto 0) <= tmp_4_cast4_reg_1944(7 downto 0);
                ap_reg_pp0_iter1_tmp_s_reg_1935 <= tmp_s_reg_1935;
                tmp_s_reg_1935 <= tmp_s_fu_575_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter13_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                complex_M_imag_V_wr_2_reg_2667 <= complex_M_imag_V_wr_2_fu_1369_p2;
                complex_M_imag_V_wr_3_reg_2677 <= complex_M_imag_V_wr_3_fu_1377_p2;
                complex_M_imag_V_wr_6_reg_2687 <= complex_M_imag_V_wr_6_fu_1385_p2;
                complex_M_imag_V_wr_7_reg_2697 <= complex_M_imag_V_wr_7_fu_1393_p2;
                p_r_V_2_reg_2662 <= p_r_V_2_fu_1365_p2;
                p_r_V_3_reg_2672 <= p_r_V_3_fu_1373_p2;
                p_r_V_6_reg_2682 <= p_r_V_6_fu_1381_p2;
                p_r_V_7_reg_2692 <= p_r_V_7_fu_1389_p2;
                tmp_30_reg_2707 <= p_r_V_2_fu_1365_p2(27 downto 12);
                tmp_34_reg_2717 <= complex_M_imag_V_wr_2_fu_1369_p2(27 downto 12);
                tmp_38_reg_2727 <= p_r_V_6_fu_1381_p2(27 downto 12);
                tmp_42_reg_2737 <= complex_M_imag_V_wr_6_fu_1385_p2(27 downto 12);
                tmp_46_reg_2747 <= p_r_V_3_fu_1373_p2(27 downto 12);
                tmp_50_reg_2757 <= complex_M_imag_V_wr_3_fu_1377_p2(27 downto 12);
                tmp_54_reg_2767 <= p_r_V_7_fu_1389_p2(27 downto 12);
                tmp_58_reg_2777 <= complex_M_imag_V_wr_7_fu_1393_p2(27 downto 12);
                tmp_86_reg_2702 <= p_r_V_2_fu_1365_p2(31 downto 31);
                tmp_87_reg_2712 <= complex_M_imag_V_wr_2_fu_1369_p2(31 downto 31);
                tmp_88_reg_2722 <= p_r_V_6_fu_1381_p2(31 downto 31);
                tmp_89_reg_2732 <= complex_M_imag_V_wr_6_fu_1385_p2(31 downto 31);
                tmp_90_reg_2742 <= p_r_V_3_fu_1373_p2(31 downto 31);
                tmp_91_reg_2752 <= complex_M_imag_V_wr_3_fu_1377_p2(31 downto 31);
                tmp_92_reg_2762 <= p_r_V_7_fu_1389_p2(31 downto 31);
                tmp_93_reg_2772 <= complex_M_imag_V_wr_7_fu_1393_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                complex_M_imag_V_wr_4_reg_2356 <= grp_fu_1821_p3;
                complex_M_imag_V_wr_reg_2324 <= grp_fu_1809_p3;
                i_p0n5n10n15n20MHz_l_2_reg_2274 <= i_p0n5n10n15n20MHz_q2;
                i_p0n5n10n15n20MHz_l_3_reg_2285 <= i_p0n5n10n15n20MHz_q3;
                i_p0n5n10n15n20MHz_l_4_reg_2296 <= i_p0n5n10n15n20MHz_q4;
                i_p0n5n10n15n20MHz_l_5_reg_2307 <= i_p0n5n10n15n20MHz_q5;
                p_r_V_4_reg_2350 <= grp_fu_1815_p3;
                p_r_V_reg_2318 <= grp_fu_1803_p3;
                q_p0n5n10n15n20MHz_l_2_reg_2279 <= q_p0n5n10n15n20MHz_q2;
                q_p0n5n10n15n20MHz_l_3_reg_2290 <= q_p0n5n10n15n20MHz_q3;
                q_p0n5n10n15n20MHz_l_4_reg_2301 <= q_p0n5n10n15n20MHz_q4;
                q_p0n5n10n15n20MHz_l_5_reg_2312 <= q_p0n5n10n15n20MHz_q5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((d_o0_V_1_load_A = ap_const_logic_1)) then
                d_o0_V_1_payload_A <= p_Result_s_6_fu_1661_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((d_o0_V_1_load_B = ap_const_logic_1)) then
                d_o0_V_1_payload_B <= p_Result_s_6_fu_1661_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((d_o1_V_1_load_A = ap_const_logic_1)) then
                d_o1_V_1_payload_A <= p_Result_3_fu_1758_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((d_o1_V_1_load_B = ap_const_logic_1)) then
                d_o1_V_1_payload_B <= p_Result_3_fu_1758_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                i_p0n5n10n15n20MHz_l_1_reg_2073 <= i_p0n5n10n15n20MHz_q1;
                i_p0n5n10n15n20MHz_l_reg_2062 <= i_p0n5n10n15n20MHz_q0;
                q_p0n5n10n15n20MHz_l_1_reg_2078 <= q_p0n5n10n15n20MHz_q1;
                q_p0n5n10n15n20MHz_l_reg_2067 <= q_p0n5n10n15n20MHz_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_p2MHz_load_reg_2020 <= i_p2MHz_q0;
                p_Result_1_reg_2006 <= d_i_V_dout(47 downto 32);
                p_Result_2_reg_2013 <= d_i_V_dout(63 downto 48);
                p_Result_s_reg_1999 <= d_i_V_dout(31 downto 16);
                q_p2MHz_load_reg_2025 <= q_p2MHz_q0;
                tmp_79_reg_1992 <= tmp_79_fu_621_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_1_i_i1_reg_2335 <= grp_fu_831_p2;
                p_1_i_i5_reg_2367 <= grp_fu_855_p2;
                p_2_i_i1_reg_2340 <= grp_fu_837_p2;
                p_2_i_i5_reg_2372 <= grp_fu_861_p2;
                p_3_i_i1_reg_2345 <= grp_fu_843_p2;
                p_3_i_i5_reg_2377 <= grp_fu_867_p2;
                p_i_i1_reg_2330 <= grp_fu_825_p2;
                p_i_i5_reg_2362 <= grp_fu_849_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter12_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_1_i_i2_reg_2587 <= grp_fu_1186_p2;
                p_1_i_i3_reg_2607 <= grp_fu_1206_p2;
                p_1_i_i6_reg_2627 <= grp_fu_1226_p2;
                p_1_i_i7_reg_2647 <= grp_fu_1246_p2;
                p_2_i_i2_reg_2592 <= grp_fu_1191_p2;
                p_2_i_i3_reg_2612 <= grp_fu_1211_p2;
                p_2_i_i6_reg_2632 <= grp_fu_1231_p2;
                p_2_i_i7_reg_2652 <= grp_fu_1251_p2;
                p_3_i_i2_reg_2597 <= grp_fu_1196_p2;
                p_3_i_i3_reg_2617 <= grp_fu_1216_p2;
                p_3_i_i6_reg_2637 <= grp_fu_1236_p2;
                p_3_i_i7_reg_2657 <= grp_fu_1256_p2;
                p_i_i2_reg_2582 <= grp_fu_1181_p2;
                p_i_i3_reg_2602 <= grp_fu_1201_p2;
                p_i_i6_reg_2622 <= grp_fu_1221_p2;
                p_i_i7_reg_2642 <= grp_fu_1241_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_2_i_i4_cast_reg_2269 <= grp_fu_1797_p2;
                p_2_i_i_cast_reg_2259 <= grp_fu_1785_p2;
                p_i_i4_reg_2264 <= grp_fu_1791_p2;
                p_i_i_reg_2254 <= grp_fu_1779_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter7_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_r_M_imag_V_1_reg_2410 <= p_r_M_imag_V_1_fu_987_p2;
                p_r_M_imag_V_3_reg_2426 <= p_r_M_imag_V_3_fu_1001_p2;
                p_r_V_8_reg_2402 <= p_r_V_8_fu_983_p2;
                p_r_V_9_reg_2418 <= p_r_V_9_fu_997_p2;
                r_V_16_reg_2382 <= r_V_16_fu_938_p3;
                r_V_17_reg_2387 <= r_V_17_fu_949_p3;
                r_V_18_reg_2392 <= r_V_18_fu_960_p3;
                r_V_19_reg_2397 <= r_V_19_fu_971_p3;
                r_V_22_reg_2434 <= r_V_22_fu_1018_p3;
                r_V_25_reg_2449 <= r_V_25_fu_1056_p3;
                r_V_28_reg_2464 <= r_V_28_fu_1094_p3;
                r_V_31_reg_2479 <= r_V_31_fu_1132_p3;
                tmp_14_reg_2444 <= r_V_22_fu_1018_p3(21 downto 6);
                tmp_18_reg_2459 <= r_V_25_fu_1056_p3(21 downto 6);
                tmp_22_reg_2474 <= r_V_28_fu_1094_p3(21 downto 6);
                tmp_26_reg_2489 <= r_V_31_fu_1132_p3(21 downto 6);
                tmp_82_reg_2439 <= r_V_22_fu_1018_p3(31 downto 31);
                tmp_83_reg_2454 <= r_V_25_fu_1056_p3(31 downto 31);
                tmp_84_reg_2469 <= r_V_28_fu_1094_p3(31 downto 31);
                tmp_85_reg_2484 <= r_V_31_fu_1132_p3(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_14_reg_2136 <= r_V_14_fu_808_p3;
                r_V_15_reg_2141 <= r_V_15_fu_819_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_32_reg_2032 <= r_V_32_fu_687_p3;
                r_V_33_reg_2037 <= r_V_33_fu_708_p3;
                r_V_34_reg_2042 <= r_V_34_fu_729_p3;
                r_V_35_reg_2047 <= r_V_35_fu_750_p3;
                r_V_8_reg_2052 <= r_V_8_fu_763_p3;
                r_V_9_reg_2057 <= r_V_9_fu_769_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_82_reg_2439 = ap_const_lv1_1) and (ap_reg_pp0_iter8_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_12_reg_2542 <= p_neg1_fu_1261_p2(21 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter9_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_15_reg_2562 <= tmp_15_fu_1326_p3;
                tmp_19_reg_2567 <= tmp_19_fu_1337_p3;
                tmp_23_reg_2572 <= tmp_23_fu_1348_p3;
                tmp_27_reg_2577 <= tmp_27_fu_1359_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_83_reg_2454 = ap_const_lv1_1) and (ap_reg_pp0_iter8_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_16_reg_2547 <= p_neg2_fu_1276_p2(21 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_84_reg_2469 = ap_const_lv1_1) and (ap_reg_pp0_iter8_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_20_reg_2552 <= p_neg3_fu_1291_p2(21 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_85_reg_2484 = ap_const_lv1_1) and (ap_reg_pp0_iter8_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_24_reg_2557 <= p_neg4_fu_1306_p2(21 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_86_reg_2702 = ap_const_lv1_1) and (ap_reg_pp0_iter14_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_28_reg_2782 <= p_neg5_fu_1541_p2(27 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_87_reg_2712 = ap_const_lv1_1) and (ap_reg_pp0_iter14_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_32_reg_2787 <= p_neg6_fu_1556_p2(27 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_88_reg_2722 = ap_const_lv1_1) and (ap_reg_pp0_iter14_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_36_reg_2792 <= p_neg7_fu_1571_p2(27 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_89_reg_2732 = ap_const_lv1_1) and (ap_reg_pp0_iter14_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_40_reg_2797 <= p_neg8_fu_1586_p2(27 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_90_reg_2742 = ap_const_lv1_1) and (ap_reg_pp0_iter14_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_44_reg_2802 <= p_neg9_fu_1601_p2(27 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_91_reg_2752 = ap_const_lv1_1) and (ap_reg_pp0_iter14_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_48_reg_2807 <= p_neg10_fu_1616_p2(27 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_575_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    tmp_4_cast4_reg_1944(7 downto 0) <= tmp_4_cast4_fu_593_p1(7 downto 0);
                tmp_67_reg_1952 <= tmp_67_fu_601_p2;
                tmp_68_reg_1957 <= tmp_68_fu_606_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_92_reg_2762 = ap_const_lv1_1) and (ap_reg_pp0_iter14_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_52_reg_2812 <= p_neg11_fu_1631_p2(27 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_93_reg_2772 = ap_const_lv1_1) and (ap_reg_pp0_iter14_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_56_reg_2817 <= p_neg_fu_1646_p2(27 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_60_reg_2176 <= tmp_60_fu_888_p1;
                tmp_8_reg_2170 <= tmp_8_fu_885_p1;
                val_assign_1_cast_reg_2158 <= val_assign_1_cast_fu_879_p1;
                val_assign_2_cast_reg_2164 <= val_assign_2_cast_fu_882_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_69_reg_2182 <= tmp_69_fu_891_p2;
                tmp_70_reg_2187 <= tmp_70_fu_895_p2;
                tmp_71_reg_2192 <= tmp_71_fu_899_p2;
                tmp_72_reg_2197 <= tmp_72_fu_903_p2;
            end if;
        end if;
    end process;
    tmp_4_cast4_reg_1944(8) <= '0';
    ap_reg_pp0_iter1_tmp_4_cast4_reg_1944(8) <= '0';
    ap_reg_pp0_iter2_tmp_4_cast4_reg_1944(8) <= '0';
    ap_reg_pp0_iter3_tmp_4_cast4_reg_1944(8) <= '0';
    ap_reg_pp0_iter4_tmp_4_cast4_reg_1944(8) <= '0';

    ap_NS_fsm_assign_proc : process (d_o0_V_1_ack_in, d_o1_V_1_ack_in, ap_CS_fsm, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, tmp_s_fu_575_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_CS_fsm_state20)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_s_fu_575_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_s_fu_575_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state20 => 
                if ((not(((d_o1_V_1_ack_in = ap_const_logic_0) or (d_o0_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state20 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(d_i_V_empty_n, ap_enable_reg_pp0_iter1, tmp_s_reg_1935)
    begin
                ap_block_pp0_stage0_01001 <= ((tmp_s_reg_1935 = ap_const_lv1_0) and (d_i_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(d_i_V_empty_n, ap_enable_reg_pp0_iter1, tmp_s_reg_1935, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_block_state18_io, ap_block_state19_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state19_io) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state18_io) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)) or ((tmp_s_reg_1935 = ap_const_lv1_0) and (d_i_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(d_i_V_empty_n, ap_enable_reg_pp0_iter1, tmp_s_reg_1935, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_block_state18_io, ap_block_state19_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state19_io) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state18_io) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)) or ((tmp_s_reg_1935 = ap_const_lv1_0) and (d_i_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_io_assign_proc : process(d_o0_V_1_ack_in, d_o1_V_1_ack_in, ap_reg_pp0_iter15_tmp_s_reg_1935)
    begin
                ap_block_state18_io <= (((ap_reg_pp0_iter15_tmp_s_reg_1935 = ap_const_lv1_0) and (d_o1_V_1_ack_in = ap_const_logic_0)) or ((ap_reg_pp0_iter15_tmp_s_reg_1935 = ap_const_lv1_0) and (d_o0_V_1_ack_in = ap_const_logic_0)));
    end process;

        ap_block_state18_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state19_io_assign_proc : process(d_o0_V_1_ack_in, d_o1_V_1_ack_in, ap_reg_pp0_iter16_tmp_s_reg_1935)
    begin
                ap_block_state19_io <= (((ap_reg_pp0_iter16_tmp_s_reg_1935 = ap_const_lv1_0) and (d_o1_V_1_ack_in = ap_const_logic_0)) or ((ap_reg_pp0_iter16_tmp_s_reg_1935 = ap_const_lv1_0) and (d_o0_V_1_ack_in = ap_const_logic_0)));
    end process;

        ap_block_state19_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_assign_proc : process(d_o0_V_1_ack_in, d_o1_V_1_ack_in)
    begin
                ap_block_state20 <= ((d_o1_V_1_ack_in = ap_const_logic_0) or (d_o0_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(d_i_V_empty_n, tmp_s_reg_1935)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((tmp_s_reg_1935 = ap_const_lv1_0) and (d_i_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_s_fu_575_p2)
    begin
        if ((tmp_s_fu_575_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

        b0_M_imag_V_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_8_reg_2052),32));

        b1_M_imag_V_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_9_reg_2057),32));

        b1_M_real_V_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter2_i_p2MHz_load_reg_2020),32));

    bw02_num_shift_to_le_fu_431_p4 <= cfg0_V(27 downto 24);
        bw20_a0_M_imag_V_ca_1_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_s_reg_1999),31));

        bw20_a0_M_imag_V_ca_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter4_p_Result_s_reg_1999),24));

        bw20_a0_M_real_V_ca_1_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_79_reg_1992),31));

        bw20_a0_M_real_V_ca_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_tmp_79_reg_1992),24));

        bw20_a1_M_imag_V_ca_1_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_reg_2013),31));

        bw20_a1_M_imag_V_ca_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter4_p_Result_2_reg_2013),24));

        bw20_a1_M_real_V_ca_1_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_1_reg_2006),31));

        bw20_a1_M_real_V_ca_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_p_Result_1_reg_2006),24));

    bw20_num_shift_to_le_fu_421_p4 <= cfg0_V(31 downto 28);
        c01_M_imag_V_fu_1160_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_16_reg_2382),32));

        c01_M_real_V_fu_1157_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_2_reg_2274),32));

        c02_M_imag_V_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_17_reg_2387),32));

        c02_M_real_V_fu_1163_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_3_reg_2285),32));

        c11_M_imag_V_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_18_reg_2392),32));

        c11_M_real_V_fu_1169_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_4_reg_2296),32));

        c12_M_imag_V_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_19_reg_2397),32));

        c12_M_real_V_fu_1175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter8_i_p0n5n10n15n20MHz_l_5_reg_2307),32));

        complex_M_imag_V_wr_1_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complex_M_imag_V_wr_reg_2324),32));

    complex_M_imag_V_wr_2_fu_1369_p2 <= std_logic_vector(unsigned(p_2_i_i2_reg_2592) + unsigned(p_3_i_i2_reg_2597));
    complex_M_imag_V_wr_3_fu_1377_p2 <= std_logic_vector(unsigned(p_2_i_i3_reg_2612) + unsigned(p_3_i_i3_reg_2617));
        complex_M_imag_V_wr_5_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complex_M_imag_V_wr_4_reg_2356),32));

    complex_M_imag_V_wr_6_fu_1385_p2 <= std_logic_vector(unsigned(p_2_i_i6_reg_2632) + unsigned(p_3_i_i6_reg_2637));
    complex_M_imag_V_wr_7_fu_1393_p2 <= std_logic_vector(unsigned(p_2_i_i7_reg_2652) + unsigned(p_3_i_i7_reg_2657));

    d_i_V_blk_n_assign_proc : process(d_i_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_s_reg_1935)
    begin
        if (((tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            d_i_V_blk_n <= d_i_V_empty_n;
        else 
            d_i_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_i_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_s_reg_1935, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            d_i_V_read <= ap_const_logic_1;
        else 
            d_i_V_read <= ap_const_logic_0;
        end if; 
    end process;

    d_o0_V_1_ack_in <= d_o0_V_1_state(1);
    d_o0_V_1_ack_out <= d_o0_V_TREADY;

    d_o0_V_1_data_out_assign_proc : process(d_o0_V_1_payload_A, d_o0_V_1_payload_B, d_o0_V_1_sel)
    begin
        if ((d_o0_V_1_sel = ap_const_logic_1)) then 
            d_o0_V_1_data_out <= d_o0_V_1_payload_B;
        else 
            d_o0_V_1_data_out <= d_o0_V_1_payload_A;
        end if; 
    end process;

    d_o0_V_1_load_A <= (not(d_o0_V_1_sel_wr) and d_o0_V_1_state_cmp_full);
    d_o0_V_1_load_B <= (d_o0_V_1_state_cmp_full and d_o0_V_1_sel_wr);
    d_o0_V_1_sel <= d_o0_V_1_sel_rd;
    d_o0_V_1_state_cmp_full <= '0' when (d_o0_V_1_state = ap_const_lv2_1) else '1';

    d_o0_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter16, ap_reg_pp0_iter15_tmp_s_reg_1935, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter15_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            d_o0_V_1_vld_in <= ap_const_logic_1;
        else 
            d_o0_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    d_o0_V_1_vld_out <= d_o0_V_1_state(0);
    d_o0_V_TDATA <= d_o0_V_1_data_out;

    d_o0_V_TDATA_blk_n_assign_proc : process(d_o0_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter16, ap_reg_pp0_iter15_tmp_s_reg_1935, ap_enable_reg_pp0_iter17, ap_reg_pp0_iter16_tmp_s_reg_1935)
    begin
        if ((((ap_reg_pp0_iter16_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)) or ((ap_reg_pp0_iter15_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)))) then 
            d_o0_V_TDATA_blk_n <= d_o0_V_1_state(1);
        else 
            d_o0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_o0_V_TVALID <= d_o0_V_1_state(0);
    d_o1_V_1_ack_in <= d_o1_V_1_state(1);
    d_o1_V_1_ack_out <= d_o1_V_TREADY;

    d_o1_V_1_data_out_assign_proc : process(d_o1_V_1_payload_A, d_o1_V_1_payload_B, d_o1_V_1_sel)
    begin
        if ((d_o1_V_1_sel = ap_const_logic_1)) then 
            d_o1_V_1_data_out <= d_o1_V_1_payload_B;
        else 
            d_o1_V_1_data_out <= d_o1_V_1_payload_A;
        end if; 
    end process;

    d_o1_V_1_load_A <= (not(d_o1_V_1_sel_wr) and d_o1_V_1_state_cmp_full);
    d_o1_V_1_load_B <= (d_o1_V_1_state_cmp_full and d_o1_V_1_sel_wr);
    d_o1_V_1_sel <= d_o1_V_1_sel_rd;
    d_o1_V_1_state_cmp_full <= '0' when (d_o1_V_1_state = ap_const_lv2_1) else '1';

    d_o1_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter16, ap_reg_pp0_iter15_tmp_s_reg_1935, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter15_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            d_o1_V_1_vld_in <= ap_const_logic_1;
        else 
            d_o1_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    d_o1_V_1_vld_out <= d_o1_V_1_state(0);
    d_o1_V_TDATA <= d_o1_V_1_data_out;

    d_o1_V_TDATA_blk_n_assign_proc : process(d_o1_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter16, ap_reg_pp0_iter15_tmp_s_reg_1935, ap_enable_reg_pp0_iter17, ap_reg_pp0_iter16_tmp_s_reg_1935)
    begin
        if ((((ap_reg_pp0_iter16_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)) or ((ap_reg_pp0_iter15_tmp_s_reg_1935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)))) then 
            d_o1_V_TDATA_blk_n <= d_o1_V_1_state(1);
        else 
            d_o1_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_o1_V_TVALID <= d_o1_V_1_state(0);

    grp_fu_1181_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1181_ce <= ap_const_logic_1;
        else 
            grp_fu_1181_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1181_p1 <= c01_M_real_V_fu_1157_p1(8 - 1 downto 0);

    grp_fu_1186_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1186_ce <= ap_const_logic_1;
        else 
            grp_fu_1186_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1186_p1 <= c01_M_imag_V_fu_1160_p1(8 - 1 downto 0);

    grp_fu_1191_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1191_ce <= ap_const_logic_1;
        else 
            grp_fu_1191_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1191_p1 <= c01_M_imag_V_fu_1160_p1(8 - 1 downto 0);

    grp_fu_1196_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1196_ce <= ap_const_logic_1;
        else 
            grp_fu_1196_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1196_p1 <= c01_M_real_V_fu_1157_p1(8 - 1 downto 0);

    grp_fu_1201_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1201_ce <= ap_const_logic_1;
        else 
            grp_fu_1201_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1201_p1 <= c02_M_real_V_fu_1163_p1(8 - 1 downto 0);

    grp_fu_1206_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1206_ce <= ap_const_logic_1;
        else 
            grp_fu_1206_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1206_p1 <= c02_M_imag_V_fu_1166_p1(8 - 1 downto 0);

    grp_fu_1211_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1211_ce <= ap_const_logic_1;
        else 
            grp_fu_1211_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1211_p1 <= c02_M_imag_V_fu_1166_p1(8 - 1 downto 0);

    grp_fu_1216_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1216_ce <= ap_const_logic_1;
        else 
            grp_fu_1216_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1216_p1 <= c02_M_real_V_fu_1163_p1(8 - 1 downto 0);

    grp_fu_1221_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1221_ce <= ap_const_logic_1;
        else 
            grp_fu_1221_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1221_p1 <= c11_M_real_V_fu_1169_p1(8 - 1 downto 0);

    grp_fu_1226_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1226_ce <= ap_const_logic_1;
        else 
            grp_fu_1226_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1226_p1 <= c11_M_imag_V_fu_1172_p1(8 - 1 downto 0);

    grp_fu_1231_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1231_ce <= ap_const_logic_1;
        else 
            grp_fu_1231_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1231_p1 <= c11_M_imag_V_fu_1172_p1(8 - 1 downto 0);

    grp_fu_1236_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1236_ce <= ap_const_logic_1;
        else 
            grp_fu_1236_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1236_p1 <= c11_M_real_V_fu_1169_p1(8 - 1 downto 0);

    grp_fu_1241_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1241_ce <= ap_const_logic_1;
        else 
            grp_fu_1241_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1241_p1 <= c12_M_real_V_fu_1175_p1(8 - 1 downto 0);

    grp_fu_1246_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1246_ce <= ap_const_logic_1;
        else 
            grp_fu_1246_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1246_p1 <= c12_M_imag_V_fu_1178_p1(8 - 1 downto 0);

    grp_fu_1251_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1251_ce <= ap_const_logic_1;
        else 
            grp_fu_1251_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1251_p1 <= c12_M_imag_V_fu_1178_p1(8 - 1 downto 0);

    grp_fu_1256_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1256_ce <= ap_const_logic_1;
        else 
            grp_fu_1256_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1256_p1 <= c12_M_real_V_fu_1175_p1(8 - 1 downto 0);

    grp_fu_1779_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1779_ce <= ap_const_logic_1;
        else 
            grp_fu_1779_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1779_p0 <= bw20_a0_M_real_V_ca_fu_873_p1(16 - 1 downto 0);

    grp_fu_1785_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1785_ce <= ap_const_logic_1;
        else 
            grp_fu_1785_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1785_p0 <= bw20_a0_M_real_V_ca_fu_873_p1(16 - 1 downto 0);

    grp_fu_1791_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1791_ce <= ap_const_logic_1;
        else 
            grp_fu_1791_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1791_p0 <= bw20_a1_M_real_V_ca_fu_876_p1(16 - 1 downto 0);

    grp_fu_1797_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1797_ce <= ap_const_logic_1;
        else 
            grp_fu_1797_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1797_p0 <= bw20_a1_M_real_V_ca_fu_876_p1(16 - 1 downto 0);

    grp_fu_1803_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1803_ce <= ap_const_logic_1;
        else 
            grp_fu_1803_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1803_p0 <= bw20_a0_M_imag_V_ca_fu_907_p1(16 - 1 downto 0);
    grp_fu_1803_p1 <= tmp_8_reg_2170(8 - 1 downto 0);

    grp_fu_1809_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1809_ce <= ap_const_logic_1;
        else 
            grp_fu_1809_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1809_p0 <= bw20_a0_M_imag_V_ca_fu_907_p1(16 - 1 downto 0);
    grp_fu_1809_p1 <= val_assign_1_cast_reg_2158(8 - 1 downto 0);

    grp_fu_1815_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1815_ce <= ap_const_logic_1;
        else 
            grp_fu_1815_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1815_p0 <= bw20_a1_M_imag_V_ca_fu_910_p1(16 - 1 downto 0);
    grp_fu_1815_p1 <= tmp_60_reg_2176(8 - 1 downto 0);

    grp_fu_1821_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1821_ce <= ap_const_logic_1;
        else 
            grp_fu_1821_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1821_p0 <= bw20_a1_M_imag_V_ca_fu_910_p1(16 - 1 downto 0);
    grp_fu_1821_p1 <= val_assign_2_cast_reg_2164(8 - 1 downto 0);

    grp_fu_825_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_825_ce <= ap_const_logic_1;
        else 
            grp_fu_825_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_825_p0 <= r_V_32_cast_fu_782_p1(31 - 1 downto 0);
    grp_fu_825_p1 <= b1_M_real_V_fu_794_p1(8 - 1 downto 0);

    grp_fu_831_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_831_ce <= ap_const_logic_1;
        else 
            grp_fu_831_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_831_p0 <= r_V_33_cast_fu_785_p1(31 - 1 downto 0);
    grp_fu_831_p1 <= b0_M_imag_V_fu_797_p1(8 - 1 downto 0);

    grp_fu_837_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_837_ce <= ap_const_logic_1;
        else 
            grp_fu_837_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_837_p0 <= r_V_32_cast_fu_782_p1(31 - 1 downto 0);
    grp_fu_837_p1 <= b0_M_imag_V_fu_797_p1(8 - 1 downto 0);

    grp_fu_843_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_843_ce <= ap_const_logic_1;
        else 
            grp_fu_843_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_843_p0 <= r_V_33_cast_fu_785_p1(31 - 1 downto 0);
    grp_fu_843_p1 <= b1_M_real_V_fu_794_p1(8 - 1 downto 0);

    grp_fu_849_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_849_ce <= ap_const_logic_1;
        else 
            grp_fu_849_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_849_p0 <= r_V_34_cast_fu_788_p1(31 - 1 downto 0);
    grp_fu_849_p1 <= b1_M_real_V_fu_794_p1(8 - 1 downto 0);

    grp_fu_855_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_855_ce <= ap_const_logic_1;
        else 
            grp_fu_855_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_855_p0 <= r_V_35_cast_fu_791_p1(31 - 1 downto 0);
    grp_fu_855_p1 <= b1_M_imag_V_fu_800_p1(8 - 1 downto 0);

    grp_fu_861_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_861_ce <= ap_const_logic_1;
        else 
            grp_fu_861_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_861_p0 <= r_V_34_cast_fu_788_p1(31 - 1 downto 0);
    grp_fu_861_p1 <= b1_M_imag_V_fu_800_p1(8 - 1 downto 0);

    grp_fu_867_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_867_ce <= ap_const_logic_1;
        else 
            grp_fu_867_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_867_p0 <= r_V_35_cast_fu_791_p1(31 - 1 downto 0);
    grp_fu_867_p1 <= b1_M_real_V_fu_794_p1(8 - 1 downto 0);
    i_1_fu_581_p2 <= std_logic_vector(unsigned(i_reg_330) + unsigned(ap_const_lv8_1));
    i_p0n5n10n15n20MHz_address0 <= tmp_67_cast_fu_611_p1(10 - 1 downto 0);
    i_p0n5n10n15n20MHz_address1 <= tmp_68_cast_fu_616_p1(10 - 1 downto 0);
    i_p0n5n10n15n20MHz_address2 <= tmp_69_cast_fu_913_p1(10 - 1 downto 0);
    i_p0n5n10n15n20MHz_address3 <= tmp_70_cast_fu_918_p1(10 - 1 downto 0);
    i_p0n5n10n15n20MHz_address4 <= tmp_71_cast_fu_923_p1(10 - 1 downto 0);
    i_p0n5n10n15n20MHz_address5 <= tmp_72_cast_fu_928_p1(10 - 1 downto 0);

    i_p0n5n10n15n20MHz_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_p0n5n10n15n20MHz_ce0 <= ap_const_logic_1;
        else 
            i_p0n5n10n15n20MHz_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    i_p0n5n10n15n20MHz_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_p0n5n10n15n20MHz_ce1 <= ap_const_logic_1;
        else 
            i_p0n5n10n15n20MHz_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    i_p0n5n10n15n20MHz_ce2_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            i_p0n5n10n15n20MHz_ce2 <= ap_const_logic_1;
        else 
            i_p0n5n10n15n20MHz_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    i_p0n5n10n15n20MHz_ce3_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            i_p0n5n10n15n20MHz_ce3 <= ap_const_logic_1;
        else 
            i_p0n5n10n15n20MHz_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    i_p0n5n10n15n20MHz_ce4_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            i_p0n5n10n15n20MHz_ce4 <= ap_const_logic_1;
        else 
            i_p0n5n10n15n20MHz_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    i_p0n5n10n15n20MHz_ce5_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            i_p0n5n10n15n20MHz_ce5 <= ap_const_logic_1;
        else 
            i_p0n5n10n15n20MHz_ce5 <= ap_const_logic_0;
        end if; 
    end process;

    i_p2MHz_address0 <= tmp_4_fu_587_p1(8 - 1 downto 0);

    i_p2MHz_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_p2MHz_ce0 <= ap_const_logic_1;
        else 
            i_p2MHz_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mt1_fu_758_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p2MHz_load_reg_2025));
    mt2_fu_803_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p0n5n10n15n20MHz_l_reg_2067));
    mt3_fu_814_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p0n5n10n15n20MHz_l_1_reg_2078));
    mt4_fu_933_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p0n5n10n15n20MHz_l_2_reg_2279));
    mt5_fu_944_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p0n5n10n15n20MHz_l_3_reg_2290));
    mt6_fu_955_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p0n5n10n15n20MHz_l_4_reg_2301));
    mt_fu_966_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(q_p0n5n10n15n20MHz_l_5_reg_2312));
    p_Result_3_fu_1758_p9 <= (((((((tmp_59_fu_1752_p3 & tmp_55_fu_1741_p3) & tmp_51_fu_1730_p3) & tmp_47_fu_1719_p3) & tmp_43_fu_1708_p3) & tmp_39_fu_1697_p3) & tmp_35_fu_1686_p3) & tmp_31_fu_1675_p3);
    p_Result_s_6_fu_1661_p5 <= (((ap_reg_pp0_iter15_tmp_27_reg_2577 & ap_reg_pp0_iter15_tmp_23_reg_2572) & ap_reg_pp0_iter15_tmp_19_reg_2567) & ap_reg_pp0_iter15_tmp_15_reg_2562);
    p_neg10_fu_1616_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(complex_M_imag_V_wr_3_reg_2677));
    p_neg11_fu_1631_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_r_V_7_reg_2692));
    p_neg1_fu_1261_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(r_V_22_reg_2434));
    p_neg2_fu_1276_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(r_V_25_reg_2449));
    p_neg3_fu_1291_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(r_V_28_reg_2464));
    p_neg4_fu_1306_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(r_V_31_reg_2479));
    p_neg5_fu_1541_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_r_V_2_reg_2662));
    p_neg6_fu_1556_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(complex_M_imag_V_wr_2_reg_2667));
    p_neg7_fu_1571_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_r_V_6_reg_2682));
    p_neg8_fu_1586_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(complex_M_imag_V_wr_6_reg_2687));
    p_neg9_fu_1601_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_r_V_3_reg_2672));
    p_neg_fu_1646_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(complex_M_imag_V_wr_7_reg_2697));
    p_r_M_imag_V_1_fu_987_p2 <= std_logic_vector(unsigned(p_2_i_i1_reg_2340) + unsigned(p_3_i_i1_reg_2345));
    p_r_M_imag_V_3_fu_1001_p2 <= std_logic_vector(unsigned(p_2_i_i5_reg_2372) + unsigned(p_3_i_i5_reg_2377));
    p_r_V_2_fu_1365_p2 <= std_logic_vector(unsigned(p_i_i2_reg_2582) - unsigned(p_1_i_i2_reg_2587));
    p_r_V_3_fu_1373_p2 <= std_logic_vector(unsigned(p_i_i3_reg_2602) - unsigned(p_1_i_i3_reg_2607));
        p_r_V_4_cast_fu_991_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_r_V_4_reg_2350),32));

    p_r_V_6_fu_1381_p2 <= std_logic_vector(unsigned(p_i_i6_reg_2622) - unsigned(p_1_i_i6_reg_2627));
    p_r_V_7_fu_1389_p2 <= std_logic_vector(unsigned(p_i_i7_reg_2642) - unsigned(p_1_i_i7_reg_2647));
    p_r_V_8_fu_983_p2 <= std_logic_vector(unsigned(p_i_i1_reg_2330) - unsigned(p_1_i_i1_reg_2335));
    p_r_V_9_fu_997_p2 <= std_logic_vector(unsigned(p_i_i5_reg_2362) - unsigned(p_1_i_i5_reg_2367));
        p_r_V_cast_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_r_V_reg_2318),32));

    p_shl1_cast_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_501_p3),10));
    p_shl2_cast_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_449_p3),10));
    p_shl3_cast_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_461_p3),10));
    p_shl_cast_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_489_p3),10));
    q_p0n5n10n15n20MHz_address0 <= tmp_67_cast_fu_611_p1(10 - 1 downto 0);
    q_p0n5n10n15n20MHz_address1 <= tmp_68_cast_fu_616_p1(10 - 1 downto 0);
    q_p0n5n10n15n20MHz_address2 <= tmp_69_cast_fu_913_p1(10 - 1 downto 0);
    q_p0n5n10n15n20MHz_address3 <= tmp_70_cast_fu_918_p1(10 - 1 downto 0);
    q_p0n5n10n15n20MHz_address4 <= tmp_71_cast_fu_923_p1(10 - 1 downto 0);
    q_p0n5n10n15n20MHz_address5 <= tmp_72_cast_fu_928_p1(10 - 1 downto 0);

    q_p0n5n10n15n20MHz_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            q_p0n5n10n15n20MHz_ce0 <= ap_const_logic_1;
        else 
            q_p0n5n10n15n20MHz_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_p0n5n10n15n20MHz_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            q_p0n5n10n15n20MHz_ce1 <= ap_const_logic_1;
        else 
            q_p0n5n10n15n20MHz_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    q_p0n5n10n15n20MHz_ce2_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            q_p0n5n10n15n20MHz_ce2 <= ap_const_logic_1;
        else 
            q_p0n5n10n15n20MHz_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    q_p0n5n10n15n20MHz_ce3_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            q_p0n5n10n15n20MHz_ce3 <= ap_const_logic_1;
        else 
            q_p0n5n10n15n20MHz_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    q_p0n5n10n15n20MHz_ce4_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            q_p0n5n10n15n20MHz_ce4 <= ap_const_logic_1;
        else 
            q_p0n5n10n15n20MHz_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    q_p0n5n10n15n20MHz_ce5_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            q_p0n5n10n15n20MHz_ce5 <= ap_const_logic_1;
        else 
            q_p0n5n10n15n20MHz_ce5 <= ap_const_logic_0;
        end if; 
    end process;

    q_p2MHz_address0 <= tmp_4_fu_587_p1(8 - 1 downto 0);

    q_p2MHz_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            q_p2MHz_ce0 <= ap_const_logic_1;
        else 
            q_p2MHz_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_14_fu_808_p3 <= 
        mt2_fu_803_p2 when (tmp_1_fu_341_p3(0) = '1') else 
        q_p0n5n10n15n20MHz_l_reg_2067;
    r_V_15_fu_819_p3 <= 
        mt3_fu_814_p2 when (tmp_65_fu_373_p3(0) = '1') else 
        q_p0n5n10n15n20MHz_l_1_reg_2078;
    r_V_16_fu_938_p3 <= 
        mt4_fu_933_p2 when (tmp_11_fu_357_p3(0) = '1') else 
        q_p0n5n10n15n20MHz_l_2_reg_2279;
    r_V_17_fu_949_p3 <= 
        mt5_fu_944_p2 when (tmp_63_fu_365_p3(0) = '1') else 
        q_p0n5n10n15n20MHz_l_3_reg_2290;
    r_V_18_fu_960_p3 <= 
        mt6_fu_955_p2 when (tmp_74_fu_389_p3(0) = '1') else 
        q_p0n5n10n15n20MHz_l_4_reg_2301;
    r_V_19_fu_971_p3 <= 
        mt_fu_966_p2 when (tmp_75_fu_397_p3(0) = '1') else 
        q_p0n5n10n15n20MHz_l_5_reg_2312;
        r_V_1_cast_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_1_fu_674_p2),31));

    r_V_1_fu_674_p2 <= std_logic_vector(shift_right(signed(tmp_79_reg_1992),to_integer(unsigned('0' & tmp_9_cast_fu_571_p1(16-1 downto 0)))));
        r_V_20_cast_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_20_fu_1005_p2),32));

    r_V_20_fu_1005_p2 <= std_logic_vector(shift_right(signed(p_r_V_reg_2318),to_integer(unsigned('0' & tmp_8_cast_fu_561_p1(24-1 downto 0)))));
    r_V_21_fu_1013_p2 <= std_logic_vector(shift_left(unsigned(p_r_V_cast_fu_977_p1),to_integer(unsigned('0' & tmp_7_fu_551_p1(31-1 downto 0)))));
    r_V_22_fu_1018_p3 <= 
        r_V_20_cast_fu_1009_p1 when (tmp_81_fu_775_p3(0) = '1') else 
        r_V_21_fu_1013_p2;
        r_V_23_cast_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_23_fu_1043_p2),32));

    r_V_23_fu_1043_p2 <= std_logic_vector(shift_right(signed(complex_M_imag_V_wr_reg_2324),to_integer(unsigned('0' & tmp_8_cast_fu_561_p1(24-1 downto 0)))));
    r_V_24_fu_1051_p2 <= std_logic_vector(shift_left(unsigned(complex_M_imag_V_wr_1_fu_980_p1),to_integer(unsigned('0' & tmp_7_fu_551_p1(31-1 downto 0)))));
    r_V_25_fu_1056_p3 <= 
        r_V_23_cast_fu_1047_p1 when (tmp_81_fu_775_p3(0) = '1') else 
        r_V_24_fu_1051_p2;
        r_V_26_cast_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_26_fu_1081_p2),32));

    r_V_26_fu_1081_p2 <= std_logic_vector(shift_right(signed(p_r_V_4_reg_2350),to_integer(unsigned('0' & tmp_8_cast_fu_561_p1(24-1 downto 0)))));
    r_V_27_fu_1089_p2 <= std_logic_vector(shift_left(unsigned(p_r_V_4_cast_fu_991_p1),to_integer(unsigned('0' & tmp_7_fu_551_p1(31-1 downto 0)))));
    r_V_28_fu_1094_p3 <= 
        r_V_26_cast_fu_1085_p1 when (tmp_81_fu_775_p3(0) = '1') else 
        r_V_27_fu_1089_p2;
        r_V_29_cast_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_29_fu_1119_p2),32));

    r_V_29_fu_1119_p2 <= std_logic_vector(shift_right(signed(complex_M_imag_V_wr_4_reg_2356),to_integer(unsigned('0' & tmp_8_cast_fu_561_p1(24-1 downto 0)))));
    r_V_2_fu_703_p2 <= std_logic_vector(shift_left(unsigned(bw20_a0_M_imag_V_ca_1_fu_658_p1),to_integer(unsigned('0' & tmp_cast_fu_441_p1(31-1 downto 0)))));
    r_V_30_fu_1127_p2 <= std_logic_vector(shift_left(unsigned(complex_M_imag_V_wr_5_fu_994_p1),to_integer(unsigned('0' & tmp_7_fu_551_p1(31-1 downto 0)))));
    r_V_31_fu_1132_p3 <= 
        r_V_29_cast_fu_1123_p1 when (tmp_81_fu_775_p3(0) = '1') else 
        r_V_30_fu_1127_p2;
        r_V_32_cast_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_32_reg_2032),32));

    r_V_32_fu_687_p3 <= 
        r_V_1_cast_fu_678_p1 when (tmp_80_fu_667_p3(0) = '1') else 
        r_V_fu_682_p2;
        r_V_33_cast_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_33_reg_2037),32));

    r_V_33_fu_708_p3 <= 
        r_V_3_cast_fu_699_p1 when (tmp_80_fu_667_p3(0) = '1') else 
        r_V_2_fu_703_p2;
        r_V_34_cast_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_34_reg_2042),32));

    r_V_34_fu_729_p3 <= 
        r_V_5_cast_fu_720_p1 when (tmp_80_fu_667_p3(0) = '1') else 
        r_V_4_fu_724_p2;
        r_V_35_cast_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_35_reg_2047),32));

    r_V_35_fu_750_p3 <= 
        r_V_7_cast_fu_741_p1 when (tmp_80_fu_667_p3(0) = '1') else 
        r_V_6_fu_745_p2;
        r_V_3_cast_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_3_fu_695_p2),31));

    r_V_3_fu_695_p2 <= std_logic_vector(shift_right(signed(p_Result_s_reg_1999),to_integer(unsigned('0' & tmp_9_cast_fu_571_p1(16-1 downto 0)))));
    r_V_4_fu_724_p2 <= std_logic_vector(shift_left(unsigned(bw20_a1_M_real_V_ca_1_fu_661_p1),to_integer(unsigned('0' & tmp_cast_fu_441_p1(31-1 downto 0)))));
        r_V_5_cast_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_5_fu_716_p2),31));

    r_V_5_fu_716_p2 <= std_logic_vector(shift_right(signed(p_Result_1_reg_2006),to_integer(unsigned('0' & tmp_9_cast_fu_571_p1(16-1 downto 0)))));
    r_V_6_fu_745_p2 <= std_logic_vector(shift_left(unsigned(bw20_a1_M_imag_V_ca_1_fu_664_p1),to_integer(unsigned('0' & tmp_cast_fu_441_p1(31-1 downto 0)))));
        r_V_7_cast_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_7_fu_737_p2),31));

    r_V_7_fu_737_p2 <= std_logic_vector(shift_right(signed(p_Result_2_reg_2013),to_integer(unsigned('0' & tmp_9_cast_fu_571_p1(16-1 downto 0)))));
    r_V_8_fu_763_p3 <= 
        mt1_fu_758_p2 when (tmp_3_fu_349_p3(0) = '1') else 
        q_p2MHz_load_reg_2025;
    r_V_9_fu_769_p3 <= 
        mt1_fu_758_p2 when (tmp_73_fu_381_p3(0) = '1') else 
        q_p2MHz_load_reg_2025;
    r_V_fu_682_p2 <= std_logic_vector(shift_left(unsigned(bw20_a0_M_real_V_ca_1_fu_655_p1),to_integer(unsigned('0' & tmp_cast_fu_441_p1(31-1 downto 0)))));
    sh_V_1_fu_565_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(bw02_num_shift_to_le_fu_431_p4));
    sh_V_3_fu_555_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(bw20_num_shift_to_le_fu_421_p4));
    tmp_10_fu_489_p3 <= (tmp_9_fu_479_p4 & ap_const_lv7_0);
    tmp_11_fu_357_p3 <= cfg0_V(4 downto 4);
    tmp_13_fu_1321_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_12_reg_2542));
    tmp_15_fu_1326_p3 <= 
        tmp_13_fu_1321_p2 when (ap_reg_pp0_iter9_tmp_82_reg_2439(0) = '1') else 
        ap_reg_pp0_iter9_tmp_14_reg_2444;
    tmp_17_fu_1332_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_16_reg_2547));
    tmp_19_fu_1337_p3 <= 
        tmp_17_fu_1332_p2 when (ap_reg_pp0_iter9_tmp_83_reg_2454(0) = '1') else 
        ap_reg_pp0_iter9_tmp_18_reg_2459;
    tmp_1_fu_341_p3 <= cfg0_V(2 downto 2);
    tmp_21_fu_1343_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_20_reg_2552));
    tmp_23_fu_1348_p3 <= 
        tmp_21_fu_1343_p2 when (ap_reg_pp0_iter9_tmp_84_reg_2469(0) = '1') else 
        ap_reg_pp0_iter9_tmp_22_reg_2474;
    tmp_25_fu_1354_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_24_reg_2557));
    tmp_27_fu_1359_p3 <= 
        tmp_25_fu_1354_p2 when (ap_reg_pp0_iter9_tmp_85_reg_2484(0) = '1') else 
        ap_reg_pp0_iter9_tmp_26_reg_2489;
    tmp_29_fu_1670_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_28_reg_2782));
    tmp_2_fu_449_p3 <= (tmp_78_fu_445_p1 & ap_const_lv7_0);
    tmp_31_fu_1675_p3 <= 
        tmp_29_fu_1670_p2 when (ap_reg_pp0_iter15_tmp_86_reg_2702(0) = '1') else 
        ap_reg_pp0_iter15_tmp_30_reg_2707;
    tmp_33_fu_1681_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_32_reg_2787));
    tmp_35_fu_1686_p3 <= 
        tmp_33_fu_1681_p2 when (ap_reg_pp0_iter15_tmp_87_reg_2712(0) = '1') else 
        ap_reg_pp0_iter15_tmp_34_reg_2717;
    tmp_37_fu_1692_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_36_reg_2792));
    tmp_39_fu_1697_p3 <= 
        tmp_37_fu_1692_p2 when (ap_reg_pp0_iter15_tmp_88_reg_2722(0) = '1') else 
        ap_reg_pp0_iter15_tmp_38_reg_2727;
    tmp_3_fu_349_p3 <= cfg0_V(3 downto 3);
    tmp_41_fu_1703_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_40_reg_2797));
    tmp_43_fu_1708_p3 <= 
        tmp_41_fu_1703_p2 when (ap_reg_pp0_iter15_tmp_89_reg_2732(0) = '1') else 
        ap_reg_pp0_iter15_tmp_42_reg_2737;
    tmp_45_fu_1714_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_44_reg_2802));
    tmp_47_fu_1719_p3 <= 
        tmp_45_fu_1714_p2 when (ap_reg_pp0_iter15_tmp_90_reg_2742(0) = '1') else 
        ap_reg_pp0_iter15_tmp_46_reg_2747;
    tmp_49_fu_1725_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_48_reg_2807));
    tmp_4_cast4_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_330),9));
    tmp_4_cast_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_330),10));
    tmp_4_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_330),64));
    tmp_51_fu_1730_p3 <= 
        tmp_49_fu_1725_p2 when (ap_reg_pp0_iter15_tmp_91_reg_2752(0) = '1') else 
        ap_reg_pp0_iter15_tmp_50_reg_2757;
    tmp_53_fu_1736_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_52_reg_2812));
    tmp_55_fu_1741_p3 <= 
        tmp_53_fu_1736_p2 when (ap_reg_pp0_iter15_tmp_92_reg_2762(0) = '1') else 
        ap_reg_pp0_iter15_tmp_54_reg_2767;
    tmp_57_fu_1747_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_56_reg_2817));
    tmp_59_fu_1752_p3 <= 
        tmp_57_fu_1747_p2 when (ap_reg_pp0_iter15_tmp_93_reg_2772(0) = '1') else 
        ap_reg_pp0_iter15_tmp_58_reg_2777;
    tmp_5_fu_461_p3 <= (tmp_78_fu_445_p1 & ap_const_lv5_0);
        tmp_60_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_15_reg_2141),24));

    tmp_61_fu_501_p3 <= (tmp_9_fu_479_p4 & ap_const_lv5_0);
    tmp_62_fu_513_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_497_p1) + unsigned(p_shl1_cast_fu_509_p1));
    tmp_63_cast_fu_519_p3 <= 
        ap_const_lv9_A0 when (tmp_76_fu_405_p3(0) = '1') else 
        ap_const_lv9_0;
    tmp_63_fu_365_p3 <= cfg0_V(5 downto 5);
    tmp_64_fu_527_p3 <= 
        ap_const_lv9_140 when (tmp_76_fu_405_p3(0) = '1') else 
        ap_const_lv9_A0;
    tmp_65_cast_fu_535_p3 <= 
        ap_const_lv9_A0 when (tmp_77_fu_413_p3(0) = '1') else 
        ap_const_lv9_0;
    tmp_65_fu_373_p3 <= cfg0_V(10 downto 10);
    tmp_66_fu_543_p3 <= 
        ap_const_lv9_140 when (tmp_77_fu_413_p3(0) = '1') else 
        ap_const_lv9_A0;
    tmp_67_cast_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_67_reg_1952),64));
    tmp_67_fu_601_p2 <= std_logic_vector(unsigned(tmp_4_cast_fu_597_p1) + unsigned(tmp_6_fu_473_p2));
    tmp_68_cast_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_reg_1957),64));
    tmp_68_fu_606_p2 <= std_logic_vector(unsigned(tmp_4_cast_fu_597_p1) + unsigned(tmp_62_fu_513_p2));
    tmp_69_cast_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_69_reg_2182),64));
    tmp_69_fu_891_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter4_tmp_4_cast4_reg_1944) + unsigned(tmp_63_cast_fu_519_p3));
    tmp_6_fu_473_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_457_p1) + unsigned(p_shl3_cast_fu_469_p1));
    tmp_70_cast_fu_918_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_reg_2187),64));
    tmp_70_fu_895_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter4_tmp_4_cast4_reg_1944) + unsigned(tmp_64_fu_527_p3));
    tmp_71_cast_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_71_reg_2192),64));
    tmp_71_fu_899_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter4_tmp_4_cast4_reg_1944) + unsigned(tmp_65_cast_fu_535_p3));
    tmp_72_cast_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_72_reg_2197),64));
    tmp_72_fu_903_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter4_tmp_4_cast4_reg_1944) + unsigned(tmp_66_fu_543_p3));
    tmp_73_fu_381_p3 <= cfg0_V(11 downto 11);
    tmp_74_fu_389_p3 <= cfg0_V(12 downto 12);
    tmp_75_fu_397_p3 <= cfg0_V(13 downto 13);
    tmp_76_fu_405_p3 <= cfg0_V(16 downto 16);
    tmp_77_fu_413_p3 <= cfg0_V(17 downto 17);
    tmp_78_fu_445_p1 <= cfg0_V(2 - 1 downto 0);
    tmp_79_fu_621_p1 <= d_i_V_dout(16 - 1 downto 0);
    tmp_7_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bw20_num_shift_to_le_fu_421_p4),32));
    tmp_80_fu_667_p3 <= cfg0_V(27 downto 27);
    tmp_81_fu_775_p3 <= cfg0_V(31 downto 31);
    tmp_8_cast_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_V_3_fu_555_p2),24));
        tmp_8_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_14_reg_2136),24));

    tmp_9_cast_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_V_1_fu_565_p2),16));
    tmp_9_fu_479_p4 <= cfg0_V(9 downto 8);
    tmp_cast_fu_441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bw02_num_shift_to_le_fu_431_p4),31));
    tmp_s_fu_575_p2 <= "1" when (i_reg_330 = ap_const_lv8_A0) else "0";
        val_assign_1_cast_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_reg_2062),24));

        val_assign_2_cast_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_i_p0n5n10n15n20MHz_l_1_reg_2073),24));

end behav;
